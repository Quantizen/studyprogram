Notebook[{

Cell[CellGroupData[{
Cell["IGraph/M", "Title"],

Cell[TextData[{
 "use igraph from ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subtitle"],

Cell[TextData[{
 "This notebook can (and should) be opened using the command ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGDocumentation", "[", "]"}], TraditionalForm]]],
 ". When opened like this, it cannot be saved, so feel free to re-evaluate \
cells and experiment."
}], "Text"],

Cell["\<\
The documentation is currently incomplete. Contributions are welcome!\
\>", "Text"],

Cell[CellGroupData[{

Cell["Basic usage", "Section"],

Cell["The package can be loaded using", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "IGraphM`"}]], "Input"],

Cell[BoxData["\<\"Evaluate IGDocumentation[] to get started.\"\>"], "Print"]
}, Open  ]],

Cell[TextData[{
 "The list of included functions is below. Notice that their names always \
have the ",
 Cell[BoxData[
  FormBox["IG", TraditionalForm]]],
 " prefix. Click on the name of a function to see its usage message."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGraphM`*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGAdjacentTriangleCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGAdjacentTriangleCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGDiameter",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGDiameter", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutGraphOpt",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLayoutGraphOpt", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGArticulationPoints",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGArticulationPoints", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGDiceSimilarity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGDiceSimilarity", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutKamadaKawai",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLayoutKamadaKawai", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGAuthorityScore",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGAuthorityScore", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGDirectedAcyclicGraphQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGDirectedAcyclicGraphQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutKamadaKawai3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLayoutKamadaKawai3D", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGAverageLocalClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGAverageLocalClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGDistanceCounts",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGDistanceCounts", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutRandom",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLayoutRandom", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGAveragePathLength",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGAveragePathLength", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGDistanceHistogram",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGDistanceHistogram", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutReingoldTilford",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLayoutReingoldTilford", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBetweenness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGBetweenness", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGDistanceMatrix",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGDistanceMatrix", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutReingoldTilfordCircular",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGLayoutReingoldTilfordCircular", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBetweennessEstimate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGBetweennessEstimate", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGDocumentation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGDocumentation", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutSphere",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLayoutSphere", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBibliographicCoupling",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGBibliographicCoupling", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGDyadCensus",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGDyadCensus", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLCF",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGLCF", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBiconnectedComponents",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGBiconnectedComponents", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGEdgeBetweenness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGEdgeBetweenness", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLocalClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGLocalClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBipartiteGameGNM",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGBipartiteGameGNM", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGEdgeBetweennessEstimate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGEdgeBetweennessEstimate", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMakeLattice",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGMakeLattice", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBipartiteGameGNP",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGBipartiteGameGNP", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGEdgeConnectivity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGEdgeConnectivity", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGMaximalCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBipartitePartitions",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGBipartitePartitions", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGEigenvectorCentrality",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGEigenvectorCentrality", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalCliquesCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGMaximalCliquesCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBipartiteQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGBipartiteQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGFeedbackArcSet",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGFeedbackArcSet", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalCliqueSizeCounts",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGMaximalCliqueSizeCounts", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissAutomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGBlissAutomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGFindDiameter",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGFindDiameter", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalIndependentVertexSets",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGMaximalIndependentVertexSets", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissAutomorphismGroup",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGBlissAutomorphismGroup", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGForestFireGame",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGForestFireGame", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalWeightedCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGMaximalWeightedCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissCanonicalGraph",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGBlissCanonicalGraph", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGGirth",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGGirth", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximumCardinalitySearch",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGMaximumCardinalitySearch", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissCanonicalLabeling",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGBlissCanonicalLabeling", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGGlobalClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGGlobalClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMinSeparators",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGMinSeparators", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissCanonicalPermutation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGBlissCanonicalPermutation", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGGomoryHuTree",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGGomoryHuTree", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGModularity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGModularity", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissGetIsomorphism",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGBlissGetIsomorphism", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGGraphAtlas",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGGraphAtlas", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMotifs",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGMotifs", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissIsomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGBlissIsomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGGraphicalQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGGraphicalQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMotifsEstimateTotalCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGMotifsEstimateTotalCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGChordalCompletion",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGChordalCompletion", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGGraphletBasis",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGGraphletBasis", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMotifsTotalCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGMotifsTotalCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGChordalQ",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGChordalQ", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGGraphletProject",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGGraphletProject", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGPageRank",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGPageRank", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCliqueNumber",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGCliqueNumber", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGGraphlets",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGGraphlets", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGPersonalizedPageRank",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGPersonalizedPageRank", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCliques",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGHubScore",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGHubScore", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGraphM",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGraphM", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCliqueSizeCounts",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGCliqueSizeCounts", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGIndependenceNumber",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGIndependenceNumber", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGRewire",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGRewire", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCloseness",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGCloseness", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGIndependentVertexSets",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGIndependentVertexSets", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGRewireEdges",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGRewireEdges", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGClosenessEstimate",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGClosenessEstimate", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGInverseLogWeightedSimilarity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGInverseLogWeightedSimilarity", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGSeedRandom",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGSeedRandom", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGClusterData",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGClusterData", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGIsoclass",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGIsoclass", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGStochasticBlockModelGame",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGStochasticBlockModelGame", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCocitationCoupling",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGCocitationCoupling", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGIsomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGIsomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGSubisomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGSubisomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCohesiveBlocks",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGCohesiveBlocks", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGJaccardSimilarity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGJaccardSimilarity", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGTopologicalOrdering",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGTopologicalOrdering", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCommunitiesEdgeBetweenness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGCommunitiesEdgeBetweenness", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGKRegularGame",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGKRegularGame", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGTriadCensus",
          BaseStyle->"InformationLink",
          ButtonData:>{
           "Info23666170808-2948336", {"IGTriadCensus", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCommunitiesGreedy",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGCommunitiesGreedy", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLADFindSubisomorphisms",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGLADFindSubisomorphisms", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGTriangles",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGTriangles", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCommunitiesInfoMAP",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGCommunitiesInfoMAP", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLADGetSubisomorphism",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLADGetSubisomorphism", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGUnfoldTree",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGUnfoldTree", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCommunitiesLabelPropagation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGCommunitiesLabelPropagation", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLADSubisomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLADSubisomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVersion",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGVersion", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCommunitiesLeadingEigenvector",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGCommunitiesLeadingEigenvector", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLADSubisomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGLADSubisomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVertexConnectivity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGVertexConnectivity", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCommunitiesMultilevel",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGCommunitiesMultilevel", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLargestCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLargestCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2FindIsomorphisms",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGVF2FindIsomorphisms", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCommunitiesOptimalModularity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGCommunitiesOptimalModularity", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLargestIndependentVertexSets",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGLargestIndependentVertexSets", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2FindSubisomorphisms",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGVF2FindSubisomorphisms", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCommunitiesSpinGlass",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGCommunitiesSpinGlass", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLargestWeightedCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGLargestWeightedCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2IsomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGVF2IsomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCommunitiesWalktrap",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGCommunitiesWalktrap", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutCircle",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLayoutCircle", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2IsomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGVF2IsomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCompareCommunities",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGCompareCommunities", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutDavidsonHarel",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLayoutDavidsonHarel", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2SubisomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGVF2SubisomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGConnectedQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGConnectedQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutDrL",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGLayoutDrL", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2SubisomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGVF2SubisomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGConnectNeighborhood",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGConnectNeighborhood", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutDrL3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGLayoutDrL3D", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGWeaklyConnectedQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGWeaklyConnectedQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGConstraintScore",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGConstraintScore", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutFruchtermanReingold",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGLayoutFruchtermanReingold", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGWeightedCliqueNumber",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGWeightedCliqueNumber", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGData",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGData", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutFruchtermanReingold3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGLayoutFruchtermanReingold3D", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGWeightedCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGWeightedCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGDegreeSequenceGame",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {"IGDegreeSequenceGame", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutGEM",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info23666170808-2948336", {"IGLayoutGEM", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGWeightedClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info23666170808-2948336", {
            "IGWeightedClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell["Or just type a question mark followed by the symbol\[CloseCurlyQuote]s \
name:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGVersion"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGVersion[] returns the IGraph/M version along with the \
version of the igraph library in use.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info33666170808-2948336"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGVersion", "[", "]"}]], "Input"],

Cell[BoxData["\<\"IGraph/M 0.2.0\\nigraph 0.8.0-pre+d4f1e12 (Mar  5 \
2016)\\nMac OS X x86 (64-bit)\"\>"], "Output"]
}, Open  ]],

Cell[TextData[{
 "IGraph/M functions work directly with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s built-in Graph datatype. No new special graph datatype \
is introduced."
}], "Text"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s take a look at a few examples. Let us first generate \
a graph using the built-in functions of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "42", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"g", "=", 
  RowBox[{"RandomGraph", "[", 
   RowBox[{"BarabasiAlbertGraphDistribution", "[", 
    RowBox[{"100", ",", "2"}], "]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100}, {
      Null, SparseArray[
       Automatic, {100, 100}, 0, {
        1, {{0, 20, 41, 50, 54, 73, 84, 90, 93, 98, 111, 119, 126, 126, 131, 
          131, 133, 136, 136, 137, 140, 142, 142, 144, 146, 146, 149, 155, 
          163, 163, 165, 165, 169, 170, 170, 172, 172, 174, 175, 175, 177, 
          178, 179, 179, 179, 180, 180, 180, 180, 181, 182, 184, 184, 184, 
          184, 184, 184, 185, 185, 185, 186, 186, 186, 187, 188, 188, 190, 
          192, 192, 192, 192, 192, 192, 192, 193, 193, 194, 195, 195, 196, 
          196, 196, 196, 196, 196, 196, 196, 196, 197, 197, 197, 197, 197, 
          197, 197, 197, 197, 197, 197, 197, 197}, {{2}, {3}, {4}, {5}, {
          10}, {17}, {19}, {25}, {26}, {32}, {35}, {45}, {46}, {48}, {52}, {
          56}, {66}, {70}, {73}, {90}, {3}, {5}, {6}, {9}, {13}, {15}, {17}, {
          19}, {25}, {28}, {29}, {37}, {42}, {45}, {53}, {55}, {63}, {69}, {
          76}, {89}, {95}, {4}, {7}, {11}, {20}, {30}, {38}, {43}, {82}, {
          92}, {6}, {27}, {42}, {48}, {7}, {8}, {12}, {13}, {23}, {24}, {
          28}, {29}, {37}, {39}, {51}, {59}, {60}, {64}, {76}, {81}, {83}, {
          95}, {96}, {8}, {9}, {11}, {12}, {15}, {18}, {26}, {40}, {77}, {
          84}, {94}, {16}, {18}, {23}, {31}, {71}, {96}, {14}, {52}, {80}, {
          10}, {44}, {49}, {75}, {81}, {21}, {22}, {34}, {35}, {44}, {54}, {
          55}, {58}, {67}, {70}, {74}, {90}, {97}, {14}, {54}, {62}, {71}, {
          72}, {79}, {85}, {87}, {16}, {20}, {22}, {43}, {50}, {61}, {86}, {
          31}, {53}, {65}, {68}, {83}, {24}, {41}, {21}, {32}, {33}, {93}, {
          47}, {56}, {58}, {27}, {30}, {38}, {66}, {36}, {98}, {36}, {75}, {
          100}, {57}, {62}, {63}, {74}, {77}, {98}, {34}, {41}, {59}, {65}, {
          67}, {69}, {73}, {88}, {60}, {99}, {33}, {80}, {82}, {94}, {85}, {
          40}, {91}, {39}, {51}, {46}, {47}, {100}, {57}, {50}, {49}, {64}, {
          97}, {61}, {68}, {78}, {72}, {99}, {78}, {79}, {88}, {84}, {92}, {
          86}, {89}, {91}, {87}, {93}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1}}]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
ot5DLoCQIU9by/d/8A8P+qm0
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 4}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 17}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 19}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 25}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 26}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 32}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 35}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 45}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 46}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 48}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 52}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 56}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 66}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 70}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 73}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{1, 90}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 9}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 13}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 15}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 17}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 19}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 25}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 28}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 29}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 37}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 42}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 45}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 53}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 55}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 63}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 69}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 76}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 89}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{2, 95}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{3, 11}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{3, 20}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{3, 30}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{3, 38}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{3, 43}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{3, 82}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{3, 92}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{4, 27}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{4, 42}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{4, 48}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 7}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 8}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 12}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 13}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 23}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 24}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 28}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 29}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 37}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 39}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 51}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 59}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 60}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 64}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 76}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 81}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 83}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 95}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{5, 96}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{6, 8}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{6, 11}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{6, 12}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{6, 15}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{6, 18}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{6, 26}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{6, 40}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{6, 77}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{6, 84}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{6, 94}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{7, 16}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{7, 18}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{7, 23}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{7, 31}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{7, 71}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{7, 96}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{8, 14}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{8, 52}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{8, 80}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{9, 10}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{9, 44}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{9, 49}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{9, 75}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{9, 81}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 21}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 22}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 34}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 35}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 44}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 54}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 55}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 58}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 67}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 70}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 74}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 90}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{10, 97}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{11, 14}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{11, 54}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{11, 62}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{11, 71}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{11, 72}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{11, 79}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{11, 85}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{11, 87}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{12, 16}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{12, 20}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{12, 22}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{12, 43}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{12, 50}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{12, 61}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{12, 86}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{14, 31}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{14, 53}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{14, 65}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{14, 68}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{14, 83}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{16, 24}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{16, 41}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{17, 21}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{17, 32}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{17, 33}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{19, 93}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{20, 47}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{20, 56}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{20, 58}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{21, 27}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{21, 30}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{23, 38}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{23, 66}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{24, 36}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{24, 98}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{26, 36}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{26, 75}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{26, 100}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{27, 57}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{27, 62}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{27, 63}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{27, 74}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{27, 77}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{27, 98}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{28, 34}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{28, 41}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{28, 59}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{28, 65}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{28, 67}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{28, 69}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{28, 73}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{28, 88}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{30, 60}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{30, 99}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{32, 33}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{32, 80}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{32, 82}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{32, 94}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{33, 85}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{35, 40}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{35, 91}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{37, 39}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{37, 51}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{38, 46}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{40, 47}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{40, 100}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{41, 57}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{42, 50}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{45, 49}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{49, 64}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{50, 97}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{51, 61}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{51, 68}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{57, 78}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{60, 72}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{63, 99}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{64, 78}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{66, 79}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{66, 88}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{67, 84}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{67, 92}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{74, 86}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{76, 89}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{77, 91}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{79, 87}, 0.04332645822938179]}, 
         {Arrowheads[0.], ArrowBox[{88, 93}, 0.04332645822938179]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.04332645822938179], DiskBox[2, 0.04332645822938179], 
         DiskBox[3, 0.04332645822938179], DiskBox[4, 0.04332645822938179], 
         DiskBox[5, 0.04332645822938179], DiskBox[6, 0.04332645822938179], 
         DiskBox[7, 0.04332645822938179], DiskBox[8, 0.04332645822938179], 
         DiskBox[9, 0.04332645822938179], DiskBox[10, 0.04332645822938179], 
         DiskBox[11, 0.04332645822938179], DiskBox[12, 0.04332645822938179], 
         DiskBox[13, 0.04332645822938179], DiskBox[14, 0.04332645822938179], 
         DiskBox[15, 0.04332645822938179], DiskBox[16, 0.04332645822938179], 
         DiskBox[17, 0.04332645822938179], DiskBox[18, 0.04332645822938179], 
         DiskBox[19, 0.04332645822938179], DiskBox[20, 0.04332645822938179], 
         DiskBox[21, 0.04332645822938179], DiskBox[22, 0.04332645822938179], 
         DiskBox[23, 0.04332645822938179], DiskBox[24, 0.04332645822938179], 
         DiskBox[25, 0.04332645822938179], DiskBox[26, 0.04332645822938179], 
         DiskBox[27, 0.04332645822938179], DiskBox[28, 0.04332645822938179], 
         DiskBox[29, 0.04332645822938179], DiskBox[30, 0.04332645822938179], 
         DiskBox[31, 0.04332645822938179], DiskBox[32, 0.04332645822938179], 
         DiskBox[33, 0.04332645822938179], DiskBox[34, 0.04332645822938179], 
         DiskBox[35, 0.04332645822938179], DiskBox[36, 0.04332645822938179], 
         DiskBox[37, 0.04332645822938179], DiskBox[38, 0.04332645822938179], 
         DiskBox[39, 0.04332645822938179], DiskBox[40, 0.04332645822938179], 
         DiskBox[41, 0.04332645822938179], DiskBox[42, 0.04332645822938179], 
         DiskBox[43, 0.04332645822938179], DiskBox[44, 0.04332645822938179], 
         DiskBox[45, 0.04332645822938179], DiskBox[46, 0.04332645822938179], 
         DiskBox[47, 0.04332645822938179], DiskBox[48, 0.04332645822938179], 
         DiskBox[49, 0.04332645822938179], DiskBox[50, 0.04332645822938179], 
         DiskBox[51, 0.04332645822938179], DiskBox[52, 0.04332645822938179], 
         DiskBox[53, 0.04332645822938179], DiskBox[54, 0.04332645822938179], 
         DiskBox[55, 0.04332645822938179], DiskBox[56, 0.04332645822938179], 
         DiskBox[57, 0.04332645822938179], DiskBox[58, 0.04332645822938179], 
         DiskBox[59, 0.04332645822938179], DiskBox[60, 0.04332645822938179], 
         DiskBox[61, 0.04332645822938179], DiskBox[62, 0.04332645822938179], 
         DiskBox[63, 0.04332645822938179], DiskBox[64, 0.04332645822938179], 
         DiskBox[65, 0.04332645822938179], DiskBox[66, 0.04332645822938179], 
         DiskBox[67, 0.04332645822938179], DiskBox[68, 0.04332645822938179], 
         DiskBox[69, 0.04332645822938179], DiskBox[70, 0.04332645822938179], 
         DiskBox[71, 0.04332645822938179], DiskBox[72, 0.04332645822938179], 
         DiskBox[73, 0.04332645822938179], DiskBox[74, 0.04332645822938179], 
         DiskBox[75, 0.04332645822938179], DiskBox[76, 0.04332645822938179], 
         DiskBox[77, 0.04332645822938179], DiskBox[78, 0.04332645822938179], 
         DiskBox[79, 0.04332645822938179], DiskBox[80, 0.04332645822938179], 
         DiskBox[81, 0.04332645822938179], DiskBox[82, 0.04332645822938179], 
         DiskBox[83, 0.04332645822938179], DiskBox[84, 0.04332645822938179], 
         DiskBox[85, 0.04332645822938179], DiskBox[86, 0.04332645822938179], 
         DiskBox[87, 0.04332645822938179], DiskBox[88, 0.04332645822938179], 
         DiskBox[89, 0.04332645822938179], DiskBox[90, 0.04332645822938179], 
         DiskBox[91, 0.04332645822938179], DiskBox[92, 0.04332645822938179], 
         DiskBox[93, 0.04332645822938179], DiskBox[94, 0.04332645822938179], 
         DiskBox[95, 0.04332645822938179], DiskBox[96, 0.04332645822938179], 
         DiskBox[97, 0.04332645822938179], DiskBox[98, 0.04332645822938179], 
         DiskBox[99, 0.04332645822938179], 
         DiskBox[100, 0.04332645822938179]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell[TextData[{
 "We can compute the betweenness centrality of each vertex using IGraph/M",
 StyleBox[" ...",
  FontSlant->"Italic"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGBetweenness", "[", "g", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1118.259108030769`", ",", "1058.1544399589388`", ",", "540.6005208645511`",
    ",", "127.3648559403391`", ",", "1175.5263706543888`", ",", 
   "678.1748354763747`", ",", "206.92859001986085`", ",", 
   "128.5757508405605`", ",", "204.019455488099`", ",", "535.3155843090262`", 
   ",", "487.8576243740224`", ",", "391.66883756668733`", ",", "0.`", ",", 
   "135.0386799862945`", ",", "0.`", ",", "52.53242295486936`", ",", 
   "104.27963032769715`", ",", "12.228571422238492`", ",", 
   "75.87976189129286`", ",", "110.15476187282027`", ",", "68.8281745832002`",
    ",", "13.90952380616191`", ",", "46.42086564057522`", ",", 
   "99.32985746606738`", ",", "0.`", ",", "168.19612507784802`", ",", 
   "213.8706172414459`", ",", "358.85480596726075`", ",", "0.`", ",", 
   "64.95717891940635`", ",", "5.126190474036904`", ",", 
   "102.36883403246722`", ",", "17.977968097944704`", ",", 
   "15.569047611111312`", ",", "95.72658728087916`", ",", 
   "8.458426700146976`", ",", "25.49841268385704`", ",", 
   "13.027380946337496`", ",", "0.`", ",", "71.20119045639802`", ",", 
   "47.28953633054691`", ",", "32.44444443971945`", ",", "8.208333330625`", 
   ",", "0.`", ",", "27.028571417923807`", ",", "10.935714280173807`", ",", 
   "4.6023809504`", ",", "0.`", ",", "14.70949882869346`", ",", 
   "24.794444436987497`", ",", "79.12499998074584`", ",", 
   "7.383008654324782`", ",", "22.081746021683326`", ",", 
   "43.96349205141766`", ",", "11.713492055575003`", ",", 
   "10.995238085854764`", ",", "40.87817459504881`", ",", 
   "11.242857139311907`", ",", "0.`", ",", "60.04307022445197`", ",", 
   "9.366666663375003`", ",", "32.452871139564216`", ",", "85.4487484527108`",
    ",", "100.43095236349764`", ",", "15.204992633592447`", ",", 
   "93.28756461626297`", ",", "60.05476189192381`", ",", "9.1999999989`", ",",
    "0.`", ",", "0.`", ",", "10.512028951480488`", ",", "9.374383369423995`", 
   ",", "8.422222214533333`", ",", "45.793650781963294`", ",", 
   "3.616666664175`", ",", "9.23333332868889`", ",", "53.38971860203689`", 
   ",", "11.401190472950002`", ",", "22.095897967287964`", ",", 
   "5.2409090904`", ",", "10.264682530885123`", ",", "8.660171256835879`", 
   ",", "9.974383367183792`", ",", "11.042857139325`", ",", 
   "15.876545525136132`", ",", "12.779761899475`", ",", "0.`", ",", 
   "30.174404754034818`", ",", "0.`", ",", "0.`", ",", "4.037301585275`", ",",
    "9.699999997574999`", ",", "1.`", ",", "10.488345859685088`", ",", "0.`", 
   ",", "0.`", ",", "13.786111108525`", ",", "13.859357712038044`", ",", 
   "1.7000000000000002`", ",", "2.8095238082500003`"}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "... or using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", and obtain the same result."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BetweennessCentrality", "[", "g", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1118.2591082850756`", ",", "1058.1544402020406`", ",", 
   "540.6005210218058`", ",", "127.36485597735596`", ",", 
   "1175.5263709029189`", ",", "678.1748356390772`", ",", 
   "206.92859008896156`", ",", "128.5757508831038`", ",", 
   "204.0194555444555`", ",", "535.3155844155845`", ",", "487.8576245005425`",
    ",", "391.66883765099703`", ",", "0.`", ",", "135.03868002912122`", ",", 
   "0.`", ",", "52.53242296918767`", ",", "104.2796303670529`", ",", 
   "12.228571428571428`", ",", "75.8797619047619`", ",", 
   "110.15476190476188`", ",", "68.82817460317463`", ",", 
   "13.909523809523812`", ",", "46.420865653953875`", ",", 
   "99.3298574963049`", ",", "0.`", ",", "168.19612511671335`", ",", 
   "213.87061729120558`", ",", "358.85480603847486`", ",", "0.`", ",", 
   "64.95717893217893`", ",", "5.126190476190475`", ",", "102.368834059817`", 
   ",", "17.977968110321054`", ",", "15.56904761904762`", ",", 
   "95.7265873015873`", ",", "8.458426704014938`", ",", "25.4984126984127`", 
   ",", "13.027380952380948`", ",", "0.`", ",", "71.20119047619046`", ",", 
   "47.28953634085212`", ",", "32.44444444444444`", ",", "8.208333333333334`",
    ",", "0.`", ",", "27.028571428571436`", ",", "10.935714285714282`", ",", 
   "4.602380952380953`", ",", "0.`", ",", "14.709498834498834`", ",", 
   "24.794444444444444`", ",", "79.12500000000001`", ",", 
   "7.383008658008656`", ",", "22.08174603174603`", ",", "43.96349206349207`",
    ",", "11.713492063492064`", ",", "10.995238095238099`", ",", 
   "40.87817460317461`", ",", "11.242857142857144`", ",", "0.`", ",", 
   "60.043070246746716`", ",", "9.366666666666669`", ",", 
   "32.45287114845938`", ",", "85.44874847374845`", ",", 
   "100.43095238095239`", ",", "15.20499263808087`", ",", "93.2875646412411`",
    ",", "60.05476190476192`", ",", "9.2`", ",", "0.`", ",", "0.`", ",", 
   "10.512028962609456`", ",", "9.374383378059848`", ",", "8.42222222222222`",
    ",", "45.79365079365079`", ",", "3.6166666666666663`", ",", 
   "9.233333333333333`", ",", "53.389718614718625`", ",", 
   "11.401190476190477`", ",", "22.095897974574445`", ",", 
   "5.24090909090909`", ",", "10.264682539682543`", ",", "8.660171261487049`",
    ",", "9.974383378059844`", ",", "11.042857142857141`", ",", 
   "15.876545530492898`", ",", "12.779761904761905`", ",", "0.`", ",", 
   "30.174404761904764`", ",", "0.`", ",", "0.`", ",", "4.037301587301587`", 
   ",", "9.699999999999998`", ",", "1.`", ",", "10.488345864661653`", ",", 
   "0.`", ",", "0.`", ",", "13.786111111111111`", ",", "13.859357717445954`", 
   ",", "1.7000000000000002`", ",", "2.8095238095238093`"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Let us now assign weights to the edges. Many IGraph/M functions, including ",
 Cell[BoxData[
  FormBox["IGBetweenness", TraditionalForm]]],
 ", support edge weights."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wg", "=", 
   RowBox[{"SetProperty", "[", 
    RowBox[{"g", ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", 
        RowBox[{"EdgeCount", "[", "g", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGBetweenness", "[", "wg", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1569.`", ",", "1509.`", ",", "697.`", ",", "506.`", ",", "1510.`", ",", 
   "948.`", ",", "173.`", ",", "0.`", ",", "106.`", ",", "827.`", ",", 
   "663.`", ",", "379.`", ",", "0.`", ",", "318.`", ",", "0.`", ",", "360.`", 
   ",", "0.`", ",", "0.`", ",", "83.`", ",", "129.`", ",", "1.`", ",", "0.`", 
   ",", "227.`", ",", "582.`", ",", "0.`", ",", "91.`", ",", "236.`", ",", 
   "213.`", ",", "0.`", ",", "60.`", ",", "0.`", ",", "334.`", ",", "1.`", 
   ",", "53.`", ",", "549.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "10.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "68.`", 
   ",", "68.`", ",", "17.`", ",", "357.`", ",", "27.`", ",", "16.`", ",", 
   "80.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "437.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "52.`", ",", "22.`", ",", "0.`", ",", "0.`", ",", 
   "62.`", ",", "139.`", ",", "93.`", ",", "187.`", ",", "1.`", ",", "7.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "16.`", ",", "0.`", ",", "69.`", 
   ",", "10.`", ",", "98.`", ",", "0.`", ",", "1.`", ",", "4.`", ",", "21.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "43.`", ",", "0.`", ",", "0.`", ",", "98.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "63.`", 
   ",", "25.`", ",", "4.`"}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Notice that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 10.2 does not include functionality to compute weighted betweenness. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"BetweennessCentrality", "[", "]"}], TraditionalForm]]],
 " ignores the weights."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BetweennessCentrality", "[", "wg", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1118.2591082850756`", ",", "1058.1544402020406`", ",", 
   "540.6005210218058`", ",", "127.36485597735596`", ",", 
   "1175.5263709029189`", ",", "678.1748356390772`", ",", 
   "206.92859008896156`", ",", "128.5757508831038`", ",", 
   "204.0194555444555`", ",", "535.3155844155845`", ",", "487.8576245005425`",
    ",", "391.66883765099703`", ",", "0.`", ",", "135.03868002912122`", ",", 
   "0.`", ",", "52.53242296918767`", ",", "104.2796303670529`", ",", 
   "12.228571428571428`", ",", "75.8797619047619`", ",", 
   "110.15476190476188`", ",", "68.82817460317463`", ",", 
   "13.909523809523812`", ",", "46.420865653953875`", ",", 
   "99.3298574963049`", ",", "0.`", ",", "168.19612511671335`", ",", 
   "213.87061729120558`", ",", "358.85480603847486`", ",", "0.`", ",", 
   "64.95717893217893`", ",", "5.126190476190475`", ",", "102.368834059817`", 
   ",", "17.977968110321054`", ",", "15.56904761904762`", ",", 
   "95.7265873015873`", ",", "8.458426704014938`", ",", "25.4984126984127`", 
   ",", "13.027380952380948`", ",", "0.`", ",", "71.20119047619046`", ",", 
   "47.28953634085212`", ",", "32.44444444444444`", ",", "8.208333333333334`",
    ",", "0.`", ",", "27.028571428571436`", ",", "10.935714285714282`", ",", 
   "4.602380952380953`", ",", "0.`", ",", "14.709498834498834`", ",", 
   "24.794444444444444`", ",", "79.12500000000001`", ",", 
   "7.383008658008656`", ",", "22.08174603174603`", ",", "43.96349206349207`",
    ",", "11.713492063492064`", ",", "10.995238095238099`", ",", 
   "40.87817460317461`", ",", "11.242857142857144`", ",", "0.`", ",", 
   "60.043070246746716`", ",", "9.366666666666669`", ",", 
   "32.45287114845938`", ",", "85.44874847374845`", ",", 
   "100.43095238095239`", ",", "15.20499263808087`", ",", "93.2875646412411`",
    ",", "60.05476190476192`", ",", "9.2`", ",", "0.`", ",", "0.`", ",", 
   "10.512028962609456`", ",", "9.374383378059848`", ",", "8.42222222222222`",
    ",", "45.79365079365079`", ",", "3.6166666666666663`", ",", 
   "9.233333333333333`", ",", "53.389718614718625`", ",", 
   "11.401190476190477`", ",", "22.095897974574445`", ",", 
   "5.24090909090909`", ",", "10.264682539682543`", ",", "8.660171261487049`",
    ",", "9.974383378059844`", ",", "11.042857142857141`", ",", 
   "15.876545530492898`", ",", "12.779761904761905`", ",", "0.`", ",", 
   "30.174404761904764`", ",", "0.`", ",", "0.`", ",", "4.037301587301587`", 
   ",", "9.699999999999998`", ",", "1.`", ",", "10.488345864661653`", ",", 
   "0.`", ",", "0.`", ",", "13.786111111111111`", ",", "13.859357717445954`", 
   ",", "1.7000000000000002`", ",", "2.8095238095238093`"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Let us delete the minimum feedback edge set to obtain an acyclic graph:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"acg", "=", 
  RowBox[{"EdgeDelete", "[", 
   RowBox[{"g", ",", 
    RowBox[{"IGFeedbackArcSet", "[", "g", "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100}, {
      Null, SparseArray[
       Automatic, {100, 100}, 0, {
        1, {{0, 20, 35, 43, 44, 56, 59, 62, 62, 62, 71, 75, 77, 77, 78, 78, 
          78, 79, 79, 80, 81, 81, 81, 81, 81, 81, 84, 86, 88, 88, 88, 88, 90, 
          90, 90, 92, 92, 92, 92, 92, 92, 92, 93, 93, 93, 94, 94, 94, 94, 94, 
          94, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 96, 97, 97, 99, 
          99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
          99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
          99}, {{2}, {3}, {4}, {5}, {10}, {17}, {19}, {25}, {26}, {32}, {
          35}, {45}, {46}, {48}, {52}, {56}, {66}, {70}, {73}, {90}, {6}, {
          9}, {13}, {15}, {28}, {29}, {37}, {42}, {53}, {55}, {63}, {69}, {
          76}, {89}, {95}, {7}, {11}, {20}, {30}, {38}, {43}, {82}, {92}, {
          27}, {8}, {12}, {23}, {24}, {39}, {51}, {59}, {60}, {64}, {81}, {
          83}, {96}, {18}, {77}, {84}, {16}, {31}, {71}, {21}, {22}, {34}, {
          44}, {54}, {58}, {67}, {74}, {97}, {62}, {72}, {85}, {87}, {61}, {
          86}, {53}, {33}, {93}, {47}, {36}, {75}, {100}, {57}, {98}, {41}, {
          65}, {80}, {94}, {40}, {91}, {50}, {49}, {68}, {99}, {78}, {79}, {
          88}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
S3yHC+bPr3N+2yAj/wb2+LYl
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 4}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 17}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 19}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 25}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 26}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 32}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 35}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 45}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 46}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 48}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 52}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 56}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 66}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 70}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 73}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{1, 90}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 9}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 13}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 15}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 28}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 29}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 37}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 42}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 53}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 55}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 63}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 69}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 76}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 89}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{2, 95}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{3, 11}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{3, 20}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{3, 30}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{3, 38}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{3, 43}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{3, 82}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{3, 92}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{4, 27}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 8}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 12}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 23}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 24}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 39}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 51}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 59}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 60}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 64}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 81}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 83}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{5, 96}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{6, 18}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{6, 77}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{6, 84}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{7, 16}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{7, 31}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{7, 71}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{10, 21}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{10, 22}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{10, 34}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{10, 44}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{10, 54}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{10, 58}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{10, 67}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{10, 74}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{10, 97}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{11, 62}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{11, 72}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{11, 85}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{11, 87}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{12, 61}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{12, 86}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{14, 53}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{17, 33}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{19, 93}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{20, 47}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{26, 36}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{26, 75}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{26, 100}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{27, 57}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{27, 98}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{28, 41}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{28, 65}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{32, 80}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{32, 94}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{35, 40}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{35, 91}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{42, 50}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{45, 49}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{51, 68}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{63, 99}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{64, 78}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{66, 79}, 0.0662533177964059]}, 
         {Arrowheads[0.], ArrowBox[{66, 88}, 0.0662533177964059]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.0662533177964059], DiskBox[2, 0.0662533177964059], 
         DiskBox[3, 0.0662533177964059], DiskBox[4, 0.0662533177964059], 
         DiskBox[5, 0.0662533177964059], DiskBox[6, 0.0662533177964059], 
         DiskBox[7, 0.0662533177964059], DiskBox[8, 0.0662533177964059], 
         DiskBox[9, 0.0662533177964059], DiskBox[10, 0.0662533177964059], 
         DiskBox[11, 0.0662533177964059], DiskBox[12, 0.0662533177964059], 
         DiskBox[13, 0.0662533177964059], DiskBox[14, 0.0662533177964059], 
         DiskBox[15, 0.0662533177964059], DiskBox[16, 0.0662533177964059], 
         DiskBox[17, 0.0662533177964059], DiskBox[18, 0.0662533177964059], 
         DiskBox[19, 0.0662533177964059], DiskBox[20, 0.0662533177964059], 
         DiskBox[21, 0.0662533177964059], DiskBox[22, 0.0662533177964059], 
         DiskBox[23, 0.0662533177964059], DiskBox[24, 0.0662533177964059], 
         DiskBox[25, 0.0662533177964059], DiskBox[26, 0.0662533177964059], 
         DiskBox[27, 0.0662533177964059], DiskBox[28, 0.0662533177964059], 
         DiskBox[29, 0.0662533177964059], DiskBox[30, 0.0662533177964059], 
         DiskBox[31, 0.0662533177964059], DiskBox[32, 0.0662533177964059], 
         DiskBox[33, 0.0662533177964059], DiskBox[34, 0.0662533177964059], 
         DiskBox[35, 0.0662533177964059], DiskBox[36, 0.0662533177964059], 
         DiskBox[37, 0.0662533177964059], DiskBox[38, 0.0662533177964059], 
         DiskBox[39, 0.0662533177964059], DiskBox[40, 0.0662533177964059], 
         DiskBox[41, 0.0662533177964059], DiskBox[42, 0.0662533177964059], 
         DiskBox[43, 0.0662533177964059], DiskBox[44, 0.0662533177964059], 
         DiskBox[45, 0.0662533177964059], DiskBox[46, 0.0662533177964059], 
         DiskBox[47, 0.0662533177964059], DiskBox[48, 0.0662533177964059], 
         DiskBox[49, 0.0662533177964059], DiskBox[50, 0.0662533177964059], 
         DiskBox[51, 0.0662533177964059], DiskBox[52, 0.0662533177964059], 
         DiskBox[53, 0.0662533177964059], DiskBox[54, 0.0662533177964059], 
         DiskBox[55, 0.0662533177964059], DiskBox[56, 0.0662533177964059], 
         DiskBox[57, 0.0662533177964059], DiskBox[58, 0.0662533177964059], 
         DiskBox[59, 0.0662533177964059], DiskBox[60, 0.0662533177964059], 
         DiskBox[61, 0.0662533177964059], DiskBox[62, 0.0662533177964059], 
         DiskBox[63, 0.0662533177964059], DiskBox[64, 0.0662533177964059], 
         DiskBox[65, 0.0662533177964059], DiskBox[66, 0.0662533177964059], 
         DiskBox[67, 0.0662533177964059], DiskBox[68, 0.0662533177964059], 
         DiskBox[69, 0.0662533177964059], DiskBox[70, 0.0662533177964059], 
         DiskBox[71, 0.0662533177964059], DiskBox[72, 0.0662533177964059], 
         DiskBox[73, 0.0662533177964059], DiskBox[74, 0.0662533177964059], 
         DiskBox[75, 0.0662533177964059], DiskBox[76, 0.0662533177964059], 
         DiskBox[77, 0.0662533177964059], DiskBox[78, 0.0662533177964059], 
         DiskBox[79, 0.0662533177964059], DiskBox[80, 0.0662533177964059], 
         DiskBox[81, 0.0662533177964059], DiskBox[82, 0.0662533177964059], 
         DiskBox[83, 0.0662533177964059], DiskBox[84, 0.0662533177964059], 
         DiskBox[85, 0.0662533177964059], DiskBox[86, 0.0662533177964059], 
         DiskBox[87, 0.0662533177964059], DiskBox[88, 0.0662533177964059], 
         DiskBox[89, 0.0662533177964059], DiskBox[90, 0.0662533177964059], 
         DiskBox[91, 0.0662533177964059], DiskBox[92, 0.0662533177964059], 
         DiskBox[93, 0.0662533177964059], DiskBox[94, 0.0662533177964059], 
         DiskBox[95, 0.0662533177964059], DiskBox[96, 0.0662533177964059], 
         DiskBox[97, 0.0662533177964059], DiskBox[98, 0.0662533177964059], 
         DiskBox[99, 0.0662533177964059], DiskBox[100, 0.0662533177964059]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell["And try out a few of igraph\[CloseCurlyQuote]s layout algorithms.", \
"Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"IGSeedRandom", "[", "42", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"IGLayoutGraphOpt", "[", "acg", "]"}], ",", 
   RowBox[{"IGLayoutKamadaKawai", "[", "acg", "]"}], ",", 
   RowBox[{"IGLayoutFruchtermanReingold", "[", "acg", "]"}]}], 
  "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}, {
        Null, SparseArray[
         Automatic, {100, 100}, 0, {
          1, {{0, 20, 35, 43, 44, 56, 59, 62, 62, 62, 71, 75, 77, 77, 78, 78, 
            78, 79, 79, 80, 81, 81, 81, 81, 81, 81, 84, 86, 88, 88, 88, 88, 
            90, 90, 90, 92, 92, 92, 92, 92, 92, 92, 93, 93, 93, 94, 94, 94, 
            94, 94, 94, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 96, 
            97, 97, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
            99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
            99, 99, 99, 99, 99}, {{2}, {3}, {4}, {5}, {10}, {17}, {19}, {
            25}, {26}, {32}, {35}, {45}, {46}, {48}, {52}, {56}, {66}, {70}, {
            73}, {90}, {6}, {9}, {13}, {15}, {28}, {29}, {37}, {42}, {53}, {
            55}, {63}, {69}, {76}, {89}, {95}, {7}, {11}, {20}, {30}, {38}, {
            43}, {82}, {92}, {27}, {8}, {12}, {23}, {24}, {39}, {51}, {59}, {
            60}, {64}, {81}, {83}, {96}, {18}, {77}, {84}, {16}, {31}, {71}, {
            21}, {22}, {34}, {44}, {54}, {58}, {67}, {74}, {97}, {62}, {72}, {
            85}, {87}, {61}, {86}, {53}, {33}, {93}, {47}, {36}, {75}, {
            100}, {57}, {98}, {41}, {65}, {80}, {94}, {40}, {91}, {50}, {
            49}, {68}, {99}, {78}, {79}, {88}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1}}]}, {VertexCoordinates -> CompressedData["
1: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
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 5}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 10}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 17}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 19}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 25}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 26}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 32}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 35}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 45}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 46}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 48}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 52}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 56}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 66}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 70}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 73}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{1, 90}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 9}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 13}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 15}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 28}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 29}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 37}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 42}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 53}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 55}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 63}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 69}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 76}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 89}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{2, 95}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{3, 7}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{3, 11}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{3, 20}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{3, 30}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{3, 38}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{3, 43}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{3, 82}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{3, 92}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{4, 27}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 8}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 12}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 23}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 24}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 39}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 51}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 59}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 60}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 64}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 81}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 83}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{5, 96}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{6, 18}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{6, 77}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{6, 84}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{7, 16}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{7, 31}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{7, 71}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{10, 21}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{10, 22}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{10, 34}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{10, 44}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{10, 54}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{10, 58}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{10, 67}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{10, 74}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{10, 97}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{11, 62}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{11, 72}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{11, 85}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{11, 87}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{12, 61}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{12, 86}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{14, 53}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{17, 33}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{19, 93}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{20, 47}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{26, 36}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{26, 75}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{26, 100}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{27, 57}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{27, 98}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{28, 41}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{28, 65}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{32, 80}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{32, 94}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{35, 40}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{35, 91}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{42, 50}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{45, 49}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{51, 68}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{63, 99}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{64, 78}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{66, 79}, 0.04648738573937328]}, 
           {Arrowheads[0.], ArrowBox[{66, 88}, 0.04648738573937328]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.04648738573937328], DiskBox[2, 0.04648738573937328], 
           DiskBox[3, 0.04648738573937328], DiskBox[4, 0.04648738573937328], 
           DiskBox[5, 0.04648738573937328], DiskBox[6, 0.04648738573937328], 
           DiskBox[7, 0.04648738573937328], DiskBox[8, 0.04648738573937328], 
           DiskBox[9, 0.04648738573937328], DiskBox[10, 0.04648738573937328], 
           DiskBox[11, 0.04648738573937328], DiskBox[12, 0.04648738573937328],
            DiskBox[13, 0.04648738573937328], 
           DiskBox[14, 0.04648738573937328], DiskBox[15, 0.04648738573937328],
            DiskBox[16, 0.04648738573937328], 
           DiskBox[17, 0.04648738573937328], DiskBox[18, 0.04648738573937328],
            DiskBox[19, 0.04648738573937328], 
           DiskBox[20, 0.04648738573937328], DiskBox[21, 0.04648738573937328],
            DiskBox[22, 0.04648738573937328], 
           DiskBox[23, 0.04648738573937328], DiskBox[24, 0.04648738573937328],
            DiskBox[25, 0.04648738573937328], 
           DiskBox[26, 0.04648738573937328], DiskBox[27, 0.04648738573937328],
            DiskBox[28, 0.04648738573937328], 
           DiskBox[29, 0.04648738573937328], DiskBox[30, 0.04648738573937328],
            DiskBox[31, 0.04648738573937328], 
           DiskBox[32, 0.04648738573937328], DiskBox[33, 0.04648738573937328],
            DiskBox[34, 0.04648738573937328], 
           DiskBox[35, 0.04648738573937328], DiskBox[36, 0.04648738573937328],
            DiskBox[37, 0.04648738573937328], 
           DiskBox[38, 0.04648738573937328], DiskBox[39, 0.04648738573937328],
            DiskBox[40, 0.04648738573937328], 
           DiskBox[41, 0.04648738573937328], DiskBox[42, 0.04648738573937328],
            DiskBox[43, 0.04648738573937328], 
           DiskBox[44, 0.04648738573937328], DiskBox[45, 0.04648738573937328],
            DiskBox[46, 0.04648738573937328], 
           DiskBox[47, 0.04648738573937328], DiskBox[48, 0.04648738573937328],
            DiskBox[49, 0.04648738573937328], 
           DiskBox[50, 0.04648738573937328], DiskBox[51, 0.04648738573937328],
            DiskBox[52, 0.04648738573937328], 
           DiskBox[53, 0.04648738573937328], DiskBox[54, 0.04648738573937328],
            DiskBox[55, 0.04648738573937328], 
           DiskBox[56, 0.04648738573937328], DiskBox[57, 0.04648738573937328],
            DiskBox[58, 0.04648738573937328], 
           DiskBox[59, 0.04648738573937328], DiskBox[60, 0.04648738573937328],
            DiskBox[61, 0.04648738573937328], 
           DiskBox[62, 0.04648738573937328], DiskBox[63, 0.04648738573937328],
            DiskBox[64, 0.04648738573937328], 
           DiskBox[65, 0.04648738573937328], DiskBox[66, 0.04648738573937328],
            DiskBox[67, 0.04648738573937328], 
           DiskBox[68, 0.04648738573937328], DiskBox[69, 0.04648738573937328],
            DiskBox[70, 0.04648738573937328], 
           DiskBox[71, 0.04648738573937328], DiskBox[72, 0.04648738573937328],
            DiskBox[73, 0.04648738573937328], 
           DiskBox[74, 0.04648738573937328], DiskBox[75, 0.04648738573937328],
            DiskBox[76, 0.04648738573937328], 
           DiskBox[77, 0.04648738573937328], DiskBox[78, 0.04648738573937328],
            DiskBox[79, 0.04648738573937328], 
           DiskBox[80, 0.04648738573937328], DiskBox[81, 0.04648738573937328],
            DiskBox[82, 0.04648738573937328], 
           DiskBox[83, 0.04648738573937328], DiskBox[84, 0.04648738573937328],
            DiskBox[85, 0.04648738573937328], 
           DiskBox[86, 0.04648738573937328], DiskBox[87, 0.04648738573937328],
            DiskBox[88, 0.04648738573937328], 
           DiskBox[89, 0.04648738573937328], DiskBox[90, 0.04648738573937328],
            DiskBox[91, 0.04648738573937328], 
           DiskBox[92, 0.04648738573937328], DiskBox[93, 0.04648738573937328],
            DiskBox[94, 0.04648738573937328], 
           DiskBox[95, 0.04648738573937328], DiskBox[96, 0.04648738573937328],
            DiskBox[97, 0.04648738573937328], 
           DiskBox[98, 0.04648738573937328], DiskBox[99, 0.04648738573937328],
            DiskBox[100, 0.04648738573937328]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}, {
        Null, SparseArray[
         Automatic, {100, 100}, 0, {
          1, {{0, 20, 35, 43, 44, 56, 59, 62, 62, 62, 71, 75, 77, 77, 78, 78, 
            78, 79, 79, 80, 81, 81, 81, 81, 81, 81, 84, 86, 88, 88, 88, 88, 
            90, 90, 90, 92, 92, 92, 92, 92, 92, 92, 93, 93, 93, 94, 94, 94, 
            94, 94, 94, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 96, 
            97, 97, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
            99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
            99, 99, 99, 99, 99}, {{2}, {3}, {4}, {5}, {10}, {17}, {19}, {
            25}, {26}, {32}, {35}, {45}, {46}, {48}, {52}, {56}, {66}, {70}, {
            73}, {90}, {6}, {9}, {13}, {15}, {28}, {29}, {37}, {42}, {53}, {
            55}, {63}, {69}, {76}, {89}, {95}, {7}, {11}, {20}, {30}, {38}, {
            43}, {82}, {92}, {27}, {8}, {12}, {23}, {24}, {39}, {51}, {59}, {
            60}, {64}, {81}, {83}, {96}, {18}, {77}, {84}, {16}, {31}, {71}, {
            21}, {22}, {34}, {44}, {54}, {58}, {67}, {74}, {97}, {62}, {72}, {
            85}, {87}, {61}, {86}, {53}, {33}, {93}, {47}, {36}, {75}, {
            100}, {57}, {98}, {41}, {65}, {80}, {94}, {40}, {91}, {50}, {
            49}, {68}, {99}, {78}, {79}, {88}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1}}]}, {VertexCoordinates -> CompressedData["
1:eJwVxXk41AkfAPAZM3JWxrFtFI+8T7Uidr2izL7f39suFWvdRZGr2KIoyhmy
KaWIyUptKV3IMTnXUd9feRG7hdHYdWUYx2TQmHXNjBnv+/7xeT7GQRHux5Uo
FMqx//n/bV6suQGDWhhwFuzKCWuGLA3/S61JJP642ha9w1mMglMjLOUiMV7i
JW+94TQEzxyYCaeLBSDcc7f3dfIIRmToD6m4L0DUkMf+XsmfYK6sfzCxQYCs
Pnq0rj6VPNbf1OwbrERmDivP8Erfoonfv0cN0qnE5+vZUdbyXnQtcP/BQncA
smsXX3tlKJCbEZbhZf0AwoO2CIcfLUDj88OXU7+lku+qrOMXncXw+OarF+u7
lIgdW09auPuIQE2a/I2tQT5+YO7+xXC9Ag0e3ky2cloAZkVdI6N5Dfn5rM2+
zUoivHi3ss4sV4zKfySFuLiokir9DA//+hl8Hbhy3Pcq4rVG9qnaZ0II0lUV
/rWFhyZn/W1CitXIDj2D3bPiKXjxiMhmranG5btHOONeEjRf5t5gpS9DSlL7
tZpAHjSd7lvdn08jON7gtn37G9jJDiXsu2nEG2R/cc5ZDvzxLKplpgAO/qae
lRJJJR6MPTIagEkoCutQsAguUMRNX55b5kPTgehvDzvygVmV5Vfw0wzoy+Lz
Xs2vgLHV5K6HDovI1y7fEfrVXyhMODRm2kQly++IW5MjRVgRauA2YbOMaW7C
2DAtBW6tOd/pnvoJ0qPvlSkC1clSp/5xjZYWoI8vXF8dG0V585vntyP4YNnK
jL5g049vz2F0nQ+F8H0Z/tJ+eBItuxYfuvlQCYtIL/NeajbSNTMV1e4jUJ5R
UfC1swiOMhilM5ZUwiiAov3T3ARcrFYdr7+wiHQnS7PHeRSS4iwIzdZ5Bymm
Jr4FLAXMV1NtFlo/Yr4++9DqbBs2JP6cc69YBjO6goHB6jDU7BdVnzRRJytO
+MQ8qprHvCLjuYS9S+jpNjpB8OS4gRbdHJXCAZd5vvmdm38g8b7gou0+GnEp
zHuUuW4ClHX8uJfzOTjI2NnOb+iACh2bQqsrXAxLFMWl+1LIH3LUN/TW0AkO
L9hk7p9DuLGrrJKh+xJOkZxDqalSeFDndL9RYw7tNj6tPTNEIROnHe0jj1PJ
dg605TJWwdVOVPDRYRHSp95uCprl4pNYf2akbR/skouXBL2T0D3C7th2fxVr
ja9YE8Gj2HQkTfakQ4mI1x2LUI7n4xnOKtyqXEQHjw3F+T2NqJObVFhS2o0O
W9wEhYU0IuCA54X9Q1RSEyWmufpd4BF/fmYwl0IIci41TlYp4NfK4BTuBjbG
JxW6Wv+HSvglnH7/4ef7yJ3aN9QSqkrwXDRdQ0NlMKKjbdn4hE6yXxzVb16g
EFknsg40xHWD60WJniyESoZEZR7P+UwjWlJvGNlffg07w754vL7zb2RfoU8E
3lIhvxYIrfZbCdCtU7a5bLkK7XuGv/ymYgqSdxy8ztCgEFolafeDwulE1fyP
ZpqblIh/+Gv1HH3IAWa134fxeAn+lrfzk6ESH1wodLKvkwve7ODWKmV1klVT
qhcR0oPM1UVKS7ga6bix+uZ4yzRcFxj3l8r6sHxl+zbJh3fYPhxuJ1bhA9vC
7kQanUp4NLl6BVYtgbnt1bXR9lL4bqG5zr5gCtS6FQUudlIMdbXS0i0W4b3k
OOOSelXS041pLcrUIH6JPPuvF7Pv8ZmzWffz2zJ05ll599dPIv2kZpzKwb9x
y+/lIcVWUpAe8azq/V4CMZW9rNhwEQRpG0j56XL0TB5567itC5la5bTD5RKY
hibRn+YLMGdi7nTKUYravz41s32qTJYk3r6GA6pkwNIalfOyZdi7PmxzO02D
OJbCKol9PgsKXpyRNFiF1IiS3tvz+xJM7LMy2mggw2u3+oNN+3kwtn0Pz06j
B1s+5niqWazg7k1lX00nDkBbH6d+3WIc0s7sPRdnWAAlfY65xyRT6JN2dTA2
dRkp8RbkEa4Y7qytHzVkyyGJMzUopwkxYfCKSUC7BOUr3+vN1LwEKbXQVBQg
wO/2Ul9lTsvwvVJTaLkGlWjfpBfj9qkP8vquFg21fMIib1nMOroc3oySnjPC
NQSpvhIfw5DhyUp/XNswDp286LLmtWrkRMSt2NxDYgh2yP9oaCyH/wJUwkQB

          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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

         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 5}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 10}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 17}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 19}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 25}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 26}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 32}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 35}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 45}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 46}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 48}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 52}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 56}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 66}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 70}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 73}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{1, 90}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 9}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 13}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 15}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 28}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 29}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 37}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 42}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 53}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 55}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 63}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 69}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 76}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 89}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{2, 95}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{3, 7}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{3, 11}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{3, 20}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{3, 30}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{3, 38}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{3, 43}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{3, 82}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{3, 92}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{4, 27}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 8}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 12}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 23}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 24}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 39}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 51}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 59}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 60}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 64}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 81}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 83}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{5, 96}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{6, 18}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{6, 77}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{6, 84}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{7, 16}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{7, 31}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{7, 71}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{10, 21}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{10, 22}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{10, 34}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{10, 44}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{10, 54}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{10, 58}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{10, 67}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{10, 74}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{10, 97}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{11, 62}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{11, 72}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{11, 85}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{11, 87}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{12, 61}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{12, 86}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{14, 53}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{17, 33}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{19, 93}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{20, 47}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{26, 36}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{26, 75}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{26, 100}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{27, 57}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{27, 98}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{28, 41}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{28, 65}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{32, 80}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{32, 94}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{35, 40}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{35, 91}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{42, 50}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{45, 49}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{51, 68}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{63, 99}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{64, 78}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{66, 79}, 0.0521652930892105]}, 
           {Arrowheads[0.], ArrowBox[{66, 88}, 0.0521652930892105]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.0521652930892105], DiskBox[2, 0.0521652930892105], 
           DiskBox[3, 0.0521652930892105], DiskBox[4, 0.0521652930892105], 
           DiskBox[5, 0.0521652930892105], DiskBox[6, 0.0521652930892105], 
           DiskBox[7, 0.0521652930892105], DiskBox[8, 0.0521652930892105], 
           DiskBox[9, 0.0521652930892105], DiskBox[10, 0.0521652930892105], 
           DiskBox[11, 0.0521652930892105], DiskBox[12, 0.0521652930892105], 
           DiskBox[13, 0.0521652930892105], DiskBox[14, 0.0521652930892105], 
           DiskBox[15, 0.0521652930892105], DiskBox[16, 0.0521652930892105], 
           DiskBox[17, 0.0521652930892105], DiskBox[18, 0.0521652930892105], 
           DiskBox[19, 0.0521652930892105], DiskBox[20, 0.0521652930892105], 
           DiskBox[21, 0.0521652930892105], DiskBox[22, 0.0521652930892105], 
           DiskBox[23, 0.0521652930892105], DiskBox[24, 0.0521652930892105], 
           DiskBox[25, 0.0521652930892105], DiskBox[26, 0.0521652930892105], 
           DiskBox[27, 0.0521652930892105], DiskBox[28, 0.0521652930892105], 
           DiskBox[29, 0.0521652930892105], DiskBox[30, 0.0521652930892105], 
           DiskBox[31, 0.0521652930892105], DiskBox[32, 0.0521652930892105], 
           DiskBox[33, 0.0521652930892105], DiskBox[34, 0.0521652930892105], 
           DiskBox[35, 0.0521652930892105], DiskBox[36, 0.0521652930892105], 
           DiskBox[37, 0.0521652930892105], DiskBox[38, 0.0521652930892105], 
           DiskBox[39, 0.0521652930892105], DiskBox[40, 0.0521652930892105], 
           DiskBox[41, 0.0521652930892105], DiskBox[42, 0.0521652930892105], 
           DiskBox[43, 0.0521652930892105], DiskBox[44, 0.0521652930892105], 
           DiskBox[45, 0.0521652930892105], DiskBox[46, 0.0521652930892105], 
           DiskBox[47, 0.0521652930892105], DiskBox[48, 0.0521652930892105], 
           DiskBox[49, 0.0521652930892105], DiskBox[50, 0.0521652930892105], 
           DiskBox[51, 0.0521652930892105], DiskBox[52, 0.0521652930892105], 
           DiskBox[53, 0.0521652930892105], DiskBox[54, 0.0521652930892105], 
           DiskBox[55, 0.0521652930892105], DiskBox[56, 0.0521652930892105], 
           DiskBox[57, 0.0521652930892105], DiskBox[58, 0.0521652930892105], 
           DiskBox[59, 0.0521652930892105], DiskBox[60, 0.0521652930892105], 
           DiskBox[61, 0.0521652930892105], DiskBox[62, 0.0521652930892105], 
           DiskBox[63, 0.0521652930892105], DiskBox[64, 0.0521652930892105], 
           DiskBox[65, 0.0521652930892105], DiskBox[66, 0.0521652930892105], 
           DiskBox[67, 0.0521652930892105], DiskBox[68, 0.0521652930892105], 
           DiskBox[69, 0.0521652930892105], DiskBox[70, 0.0521652930892105], 
           DiskBox[71, 0.0521652930892105], DiskBox[72, 0.0521652930892105], 
           DiskBox[73, 0.0521652930892105], DiskBox[74, 0.0521652930892105], 
           DiskBox[75, 0.0521652930892105], DiskBox[76, 0.0521652930892105], 
           DiskBox[77, 0.0521652930892105], DiskBox[78, 0.0521652930892105], 
           DiskBox[79, 0.0521652930892105], DiskBox[80, 0.0521652930892105], 
           DiskBox[81, 0.0521652930892105], DiskBox[82, 0.0521652930892105], 
           DiskBox[83, 0.0521652930892105], DiskBox[84, 0.0521652930892105], 
           DiskBox[85, 0.0521652930892105], DiskBox[86, 0.0521652930892105], 
           DiskBox[87, 0.0521652930892105], DiskBox[88, 0.0521652930892105], 
           DiskBox[89, 0.0521652930892105], DiskBox[90, 0.0521652930892105], 
           DiskBox[91, 0.0521652930892105], DiskBox[92, 0.0521652930892105], 
           DiskBox[93, 0.0521652930892105], DiskBox[94, 0.0521652930892105], 
           DiskBox[95, 0.0521652930892105], DiskBox[96, 0.0521652930892105], 
           DiskBox[97, 0.0521652930892105], DiskBox[98, 0.0521652930892105], 
           DiskBox[99, 0.0521652930892105], 
           DiskBox[100, 0.0521652930892105]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
        19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}, {
        Null, SparseArray[
         Automatic, {100, 100}, 0, {
          1, {{0, 20, 35, 43, 44, 56, 59, 62, 62, 62, 71, 75, 77, 77, 78, 78, 
            78, 79, 79, 80, 81, 81, 81, 81, 81, 81, 84, 86, 88, 88, 88, 88, 
            90, 90, 90, 92, 92, 92, 92, 92, 92, 92, 93, 93, 93, 94, 94, 94, 
            94, 94, 94, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 96, 
            97, 97, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
            99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
            99, 99, 99, 99, 99}, {{2}, {3}, {4}, {5}, {10}, {17}, {19}, {
            25}, {26}, {32}, {35}, {45}, {46}, {48}, {52}, {56}, {66}, {70}, {
            73}, {90}, {6}, {9}, {13}, {15}, {28}, {29}, {37}, {42}, {53}, {
            55}, {63}, {69}, {76}, {89}, {95}, {7}, {11}, {20}, {30}, {38}, {
            43}, {82}, {92}, {27}, {8}, {12}, {23}, {24}, {39}, {51}, {59}, {
            60}, {64}, {81}, {83}, {96}, {18}, {77}, {84}, {16}, {31}, {71}, {
            21}, {22}, {34}, {44}, {54}, {58}, {67}, {74}, {97}, {62}, {72}, {
            85}, {87}, {61}, {86}, {53}, {33}, {93}, {47}, {36}, {75}, {
            100}, {57}, {98}, {41}, {65}, {80}, {94}, {40}, {91}, {50}, {
            49}, {68}, {99}, {78}, {79}, {88}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1, 1}}]}, {VertexCoordinates -> CompressedData["
1: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
eEMAQD1JMIc=
          "]}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
eEMAQD1JMIc=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 5}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 10}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 17}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 19}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 25}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 26}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 32}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 35}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 45}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 46}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 48}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 52}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 56}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 66}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 70}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 73}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{1, 90}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 9}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 13}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 15}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 28}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 29}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 37}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 42}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 53}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 55}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 63}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 69}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 76}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 89}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{2, 95}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{3, 7}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{3, 11}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{3, 20}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{3, 30}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{3, 38}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{3, 43}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{3, 82}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{3, 92}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{4, 27}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 8}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 12}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 23}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 24}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 39}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 51}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 59}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 60}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 64}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 81}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 83}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{5, 96}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{6, 18}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{6, 77}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{6, 84}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{7, 16}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{7, 31}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{7, 71}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{10, 21}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{10, 22}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{10, 34}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{10, 44}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{10, 54}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{10, 58}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{10, 67}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{10, 74}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{10, 97}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{11, 62}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{11, 72}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{11, 85}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{11, 87}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{12, 61}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{12, 86}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{14, 53}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{17, 33}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{19, 93}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{20, 47}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{26, 36}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{26, 75}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{26, 100}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{27, 57}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{27, 98}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{28, 41}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{28, 65}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{32, 80}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{32, 94}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{35, 40}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{35, 91}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{42, 50}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{45, 49}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{51, 68}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{63, 99}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{64, 78}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{66, 79}, 0.05580864918738966]}, 
           {Arrowheads[0.], ArrowBox[{66, 88}, 0.05580864918738966]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.05580864918738966], DiskBox[2, 0.05580864918738966], 
           DiskBox[3, 0.05580864918738966], DiskBox[4, 0.05580864918738966], 
           DiskBox[5, 0.05580864918738966], DiskBox[6, 0.05580864918738966], 
           DiskBox[7, 0.05580864918738966], DiskBox[8, 0.05580864918738966], 
           DiskBox[9, 0.05580864918738966], DiskBox[10, 0.05580864918738966], 
           DiskBox[11, 0.05580864918738966], DiskBox[12, 0.05580864918738966],
            DiskBox[13, 0.05580864918738966], 
           DiskBox[14, 0.05580864918738966], DiskBox[15, 0.05580864918738966],
            DiskBox[16, 0.05580864918738966], 
           DiskBox[17, 0.05580864918738966], DiskBox[18, 0.05580864918738966],
            DiskBox[19, 0.05580864918738966], 
           DiskBox[20, 0.05580864918738966], DiskBox[21, 0.05580864918738966],
            DiskBox[22, 0.05580864918738966], 
           DiskBox[23, 0.05580864918738966], DiskBox[24, 0.05580864918738966],
            DiskBox[25, 0.05580864918738966], 
           DiskBox[26, 0.05580864918738966], DiskBox[27, 0.05580864918738966],
            DiskBox[28, 0.05580864918738966], 
           DiskBox[29, 0.05580864918738966], DiskBox[30, 0.05580864918738966],
            DiskBox[31, 0.05580864918738966], 
           DiskBox[32, 0.05580864918738966], DiskBox[33, 0.05580864918738966],
            DiskBox[34, 0.05580864918738966], 
           DiskBox[35, 0.05580864918738966], DiskBox[36, 0.05580864918738966],
            DiskBox[37, 0.05580864918738966], 
           DiskBox[38, 0.05580864918738966], DiskBox[39, 0.05580864918738966],
            DiskBox[40, 0.05580864918738966], 
           DiskBox[41, 0.05580864918738966], DiskBox[42, 0.05580864918738966],
            DiskBox[43, 0.05580864918738966], 
           DiskBox[44, 0.05580864918738966], DiskBox[45, 0.05580864918738966],
            DiskBox[46, 0.05580864918738966], 
           DiskBox[47, 0.05580864918738966], DiskBox[48, 0.05580864918738966],
            DiskBox[49, 0.05580864918738966], 
           DiskBox[50, 0.05580864918738966], DiskBox[51, 0.05580864918738966],
            DiskBox[52, 0.05580864918738966], 
           DiskBox[53, 0.05580864918738966], DiskBox[54, 0.05580864918738966],
            DiskBox[55, 0.05580864918738966], 
           DiskBox[56, 0.05580864918738966], DiskBox[57, 0.05580864918738966],
            DiskBox[58, 0.05580864918738966], 
           DiskBox[59, 0.05580864918738966], DiskBox[60, 0.05580864918738966],
            DiskBox[61, 0.05580864918738966], 
           DiskBox[62, 0.05580864918738966], DiskBox[63, 0.05580864918738966],
            DiskBox[64, 0.05580864918738966], 
           DiskBox[65, 0.05580864918738966], DiskBox[66, 0.05580864918738966],
            DiskBox[67, 0.05580864918738966], 
           DiskBox[68, 0.05580864918738966], DiskBox[69, 0.05580864918738966],
            DiskBox[70, 0.05580864918738966], 
           DiskBox[71, 0.05580864918738966], DiskBox[72, 0.05580864918738966],
            DiskBox[73, 0.05580864918738966], 
           DiskBox[74, 0.05580864918738966], DiskBox[75, 0.05580864918738966],
            DiskBox[76, 0.05580864918738966], 
           DiskBox[77, 0.05580864918738966], DiskBox[78, 0.05580864918738966],
            DiskBox[79, 0.05580864918738966], 
           DiskBox[80, 0.05580864918738966], DiskBox[81, 0.05580864918738966],
            DiskBox[82, 0.05580864918738966], 
           DiskBox[83, 0.05580864918738966], DiskBox[84, 0.05580864918738966],
            DiskBox[85, 0.05580864918738966], 
           DiskBox[86, 0.05580864918738966], DiskBox[87, 0.05580864918738966],
            DiskBox[88, 0.05580864918738966], 
           DiskBox[89, 0.05580864918738966], DiskBox[90, 0.05580864918738966],
            DiskBox[91, 0.05580864918738966], 
           DiskBox[92, 0.05580864918738966], DiskBox[93, 0.05580864918738966],
            DiskBox[94, 0.05580864918738966], 
           DiskBox[95, 0.05580864918738966], DiskBox[96, 0.05580864918738966],
            DiskBox[97, 0.05580864918738966], 
           DiskBox[98, 0.05580864918738966], DiskBox[99, 0.05580864918738966],
            DiskBox[100, 0.05580864918738966]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output"]
}, Open  ]],

Cell["Layout functions typically have many options to tune:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "IGLayoutGraphOpt", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"MaxIterations\"\>", "\[Rule]", "500"}], ",", 
   RowBox[{"\<\"NodeCharge\"\>", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"\<\"NodeMass\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"SpringLength\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"SpringConstant\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"MaxStepMovement\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"Continue\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"Align\"\>", "\[Rule]", "True"}]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Increasing the number of iterations will usually improve the result.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLayoutGraphOpt", "[", 
  RowBox[{"acg", ",", 
   RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "5000"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100}, {
      Null, SparseArray[
       Automatic, {100, 100}, 0, {
        1, {{0, 20, 35, 43, 44, 56, 59, 62, 62, 62, 71, 75, 77, 77, 78, 78, 
          78, 79, 79, 80, 81, 81, 81, 81, 81, 81, 84, 86, 88, 88, 88, 88, 90, 
          90, 90, 92, 92, 92, 92, 92, 92, 92, 93, 93, 93, 94, 94, 94, 94, 94, 
          94, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 96, 97, 97, 99, 
          99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
          99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 
          99}, {{2}, {3}, {4}, {5}, {10}, {17}, {19}, {25}, {26}, {32}, {
          35}, {45}, {46}, {48}, {52}, {56}, {66}, {70}, {73}, {90}, {6}, {
          9}, {13}, {15}, {28}, {29}, {37}, {42}, {53}, {55}, {63}, {69}, {
          76}, {89}, {95}, {7}, {11}, {20}, {30}, {38}, {43}, {82}, {92}, {
          27}, {8}, {12}, {23}, {24}, {39}, {51}, {59}, {60}, {64}, {81}, {
          83}, {96}, {18}, {77}, {84}, {16}, {31}, {71}, {21}, {22}, {34}, {
          44}, {54}, {58}, {67}, {74}, {97}, {62}, {72}, {85}, {87}, {61}, {
          86}, {53}, {33}, {93}, {47}, {36}, {75}, {100}, {57}, {98}, {41}, {
          65}, {80}, {94}, {40}, {91}, {50}, {49}, {68}, {99}, {78}, {79}, {
          88}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {
      VertexCoordinates -> CompressedData["
1:eJwVk3k81PkfgOd2RMVWznTQr9pGdGjY8P7a3XlNMULlXI2lITZHzlrs1i+b
8nO3aZeftGuHiCVpNyb5fHUIizBCppjRHChmXFumaWbbP57X8+/zz7MpLO5w
OIlAIHA/8q/PLfwcIOS3Q+mzmhOn54eALoxaKvuKhEerz3HXspvQj9+dt9HM
ETFnEVXdFXcLgt3VeXvClGBcaide+esUPHeoPNCZNA5qq6+g0OMDamUPVGeK
9PAst36dJ9cl6JXDQf+ABR3M1cvp86wYCdQBP1evQAgLMR2uge/fog08ZqF4
lwaZ/BVBYGx6irbFR1yb0nuA/jNPt+vyIGG3iiKivDU6WGPJB2PWKwm6uz69
CtlKgJAr8kkYo+K8RLnB3TEKPn1hOt4lthmdZRWpMjNX4ETWq7X30xughXI0
ZKyXiudZJAd84TuMGjdciiO+0cFKhduXmgsU8AXPORCetSOWYN1fySYzIK2Q
Bq0aMsDp88KbLSwx4tlnJ2ouy6D/RbhfcVUTiq46ALUsGvZQa0SpkfPgIHkQ
bfBug+Asp/K7/kTs+g5b+evyCZQwclJ1pIGKWeRv20l7+RwYFrGhwCLhCW3i
SK7uJOx82RxUVfwOycXxlo9SB8BpoHY5s64BzcUP7w5xkEOGtTnH9c4CrGQ9
tDRPXwaDqmudHNUCvGv1ZcRyyXgzx0sWgSmQnC3PupFCwLuZqPhP5TAs2IoC
CxhErPWR92weZxCF/ta0/6VSH2u+d9Sz6dMJMOCfkNJiRejcob1sYkYR5MeP
1LetG0YNAoGP4eACRL5N8XNWCGCvmbH1bjEZU2f3JlVHvkIzhdn9h6RysCE4
3ZTWKeDWTMpB/ikVSHN58ogWCm7JzXPb1dwJplbvdVQ9ZCwjtvHoRbtBwNaQ
JBkZkyCgSTZnzWtQ99+O/63+5TWaYdY7/MKZg79zZFU8jIqvcnYajxteRBvU
KyzT3HRwqWY0zIY1CmVZKT3rrbTwfQ6GcOwMHHouiXlsNozK8q091fkETIdR
cJbo2g3cVcHa2a0K4DTVOkb63UbuioF7ccQJ4J+u3dJprIf5Yn114RdK4ayD
Wffmm6NA16/lbGV2QepK+rR66Al88+K231PbJWB/fceM0aeH7xf1mPeFSgEJ
rIOzpudgdmehermJiNfZ7xrzjOyDMv6P8eXeEtDsmf5a31cX/ylQP+hgYBZC
/icbiiwlKGri8rZr50kY0VD/wtweAl6Eb54V0SdQ6qJRdmyeGML3c9cGdk/A
nyaDH3au1kIuNV9J/2QJVrKjNRE2vSh9Teaso5aGhSZeYvzBlwG/tCQBFxBx
bocf0yDiAcS2e3Yci1Kh1b8lQ5P4NfzQbnrsQrguXkFP1vf/SR/LKW8cvlgv
QtBuuCbpMRkn5oZ7bDWSQPT9Chta9ClI9rP/LGoHGZ8jM9NcvUk4K3Ks5urx
JaSai59tP1uA9pi4XTo5PoL0KG3vjoQPofvqu1yFGQU7E80+QKK8hfM+ndn7
Ism4rWGYUWIvEW/MaZnb+NkQMu/dXj+cIgP3w4lpT6UCAK2f72Lbx57gK5ct
A2aAenPvAZ+oFdjx0OTeupFpZOHiX/5dzklkteO0+Xl6A5i2UifvdD+AH3RX
77O6RcO8WFN9tC4lvOHsSnV5uQj8iuJTiu1apAlgX/cP/R3EYYKNP683xCXK
UWR4+A0y5L9zlHb0IouBago1j4oHjcbPxBDvgdb0hCy8Xoas/9dTwfxWjooj
9mtTXQbQ4THLzRftlWB/rONpovY9Krv0qIZtTsS2pifIZOMjMFZpyfnW7zoK
ceP5fK7SICZ+sb83Qx8XUkNuG29Solzv6nxUScN0/5/uFj87g+jrVtyoaxwH
Rv43nvIxXdyUl9mXxNTD7JccqIvPlKjx0JGWyrJ+RJ+66lKYJUUGqVccE4JJ
+LwwIqiqtRNYv3t0lwi7ELG4UFgTIgDllxsbKNs/fv7WcCp20yRoRwKkpGYy
lmaiKvIK6EAJj/W1T2IUwCuZYFxFg8izSqXz4sprtLty8lSAeQNQkxalS7Vk
/BhHEty6JEJRq0+nrnXuhy93HyeVbiHgYve6M01brqJP3d/M80ooWLUdY/Se
7D207iPqNs8vQ6Fvj8LoIQUPpNoZZWoU4LU+5cYWuhSeTZqnebCX4R/IRSt+

        "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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

       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 4}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 17}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 19}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 25}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 26}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 32}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 35}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 45}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 46}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 48}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 52}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 56}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 66}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 70}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 73}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{1, 90}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 9}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 13}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 15}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 28}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 29}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 37}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 42}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 53}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 55}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 63}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 69}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 76}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 89}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{2, 95}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{3, 11}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{3, 20}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{3, 30}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{3, 38}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{3, 43}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{3, 82}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{3, 92}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{4, 27}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 8}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 12}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 23}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 24}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 39}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 51}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 59}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 60}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 64}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 81}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 83}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{5, 96}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{6, 18}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{6, 77}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{6, 84}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{7, 16}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{7, 31}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{7, 71}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{10, 21}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{10, 22}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{10, 34}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{10, 44}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{10, 54}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{10, 58}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{10, 67}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{10, 74}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{10, 97}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{11, 62}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{11, 72}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{11, 85}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{11, 87}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{12, 61}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{12, 86}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{14, 53}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{17, 33}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{19, 93}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{20, 47}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{26, 36}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{26, 75}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{26, 100}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{27, 57}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{27, 98}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{28, 41}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{28, 65}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{32, 80}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{32, 94}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{35, 40}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{35, 91}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{42, 50}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{45, 49}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{51, 68}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{63, 99}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{64, 78}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{66, 79}, 0.05368814165845892]}, 
         {Arrowheads[0.], ArrowBox[{66, 88}, 0.05368814165845892]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.05368814165845892], DiskBox[2, 0.05368814165845892], 
         DiskBox[3, 0.05368814165845892], DiskBox[4, 0.05368814165845892], 
         DiskBox[5, 0.05368814165845892], DiskBox[6, 0.05368814165845892], 
         DiskBox[7, 0.05368814165845892], DiskBox[8, 0.05368814165845892], 
         DiskBox[9, 0.05368814165845892], DiskBox[10, 0.05368814165845892], 
         DiskBox[11, 0.05368814165845892], DiskBox[12, 0.05368814165845892], 
         DiskBox[13, 0.05368814165845892], DiskBox[14, 0.05368814165845892], 
         DiskBox[15, 0.05368814165845892], DiskBox[16, 0.05368814165845892], 
         DiskBox[17, 0.05368814165845892], DiskBox[18, 0.05368814165845892], 
         DiskBox[19, 0.05368814165845892], DiskBox[20, 0.05368814165845892], 
         DiskBox[21, 0.05368814165845892], DiskBox[22, 0.05368814165845892], 
         DiskBox[23, 0.05368814165845892], DiskBox[24, 0.05368814165845892], 
         DiskBox[25, 0.05368814165845892], DiskBox[26, 0.05368814165845892], 
         DiskBox[27, 0.05368814165845892], DiskBox[28, 0.05368814165845892], 
         DiskBox[29, 0.05368814165845892], DiskBox[30, 0.05368814165845892], 
         DiskBox[31, 0.05368814165845892], DiskBox[32, 0.05368814165845892], 
         DiskBox[33, 0.05368814165845892], DiskBox[34, 0.05368814165845892], 
         DiskBox[35, 0.05368814165845892], DiskBox[36, 0.05368814165845892], 
         DiskBox[37, 0.05368814165845892], DiskBox[38, 0.05368814165845892], 
         DiskBox[39, 0.05368814165845892], DiskBox[40, 0.05368814165845892], 
         DiskBox[41, 0.05368814165845892], DiskBox[42, 0.05368814165845892], 
         DiskBox[43, 0.05368814165845892], DiskBox[44, 0.05368814165845892], 
         DiskBox[45, 0.05368814165845892], DiskBox[46, 0.05368814165845892], 
         DiskBox[47, 0.05368814165845892], DiskBox[48, 0.05368814165845892], 
         DiskBox[49, 0.05368814165845892], DiskBox[50, 0.05368814165845892], 
         DiskBox[51, 0.05368814165845892], DiskBox[52, 0.05368814165845892], 
         DiskBox[53, 0.05368814165845892], DiskBox[54, 0.05368814165845892], 
         DiskBox[55, 0.05368814165845892], DiskBox[56, 0.05368814165845892], 
         DiskBox[57, 0.05368814165845892], DiskBox[58, 0.05368814165845892], 
         DiskBox[59, 0.05368814165845892], DiskBox[60, 0.05368814165845892], 
         DiskBox[61, 0.05368814165845892], DiskBox[62, 0.05368814165845892], 
         DiskBox[63, 0.05368814165845892], DiskBox[64, 0.05368814165845892], 
         DiskBox[65, 0.05368814165845892], DiskBox[66, 0.05368814165845892], 
         DiskBox[67, 0.05368814165845892], DiskBox[68, 0.05368814165845892], 
         DiskBox[69, 0.05368814165845892], DiskBox[70, 0.05368814165845892], 
         DiskBox[71, 0.05368814165845892], DiskBox[72, 0.05368814165845892], 
         DiskBox[73, 0.05368814165845892], DiskBox[74, 0.05368814165845892], 
         DiskBox[75, 0.05368814165845892], DiskBox[76, 0.05368814165845892], 
         DiskBox[77, 0.05368814165845892], DiskBox[78, 0.05368814165845892], 
         DiskBox[79, 0.05368814165845892], DiskBox[80, 0.05368814165845892], 
         DiskBox[81, 0.05368814165845892], DiskBox[82, 0.05368814165845892], 
         DiskBox[83, 0.05368814165845892], DiskBox[84, 0.05368814165845892], 
         DiskBox[85, 0.05368814165845892], DiskBox[86, 0.05368814165845892], 
         DiskBox[87, 0.05368814165845892], DiskBox[88, 0.05368814165845892], 
         DiskBox[89, 0.05368814165845892], DiskBox[90, 0.05368814165845892], 
         DiskBox[91, 0.05368814165845892], DiskBox[92, 0.05368814165845892], 
         DiskBox[93, 0.05368814165845892], DiskBox[94, 0.05368814165845892], 
         DiskBox[95, 0.05368814165845892], DiskBox[96, 0.05368814165845892], 
         DiskBox[97, 0.05368814165845892], DiskBox[98, 0.05368814165845892], 
         DiskBox[99, 0.05368814165845892], 
         DiskBox[100, 0.05368814165845892]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell[TextData[StyleBox["A final note",
 FontWeight->"Bold"]], "Text"],

Cell[TextData[{
 "Please refer to the usage messages for information on how to use each \
function. For more information on the meaning of various function options, \
the algorithms used by the functions, references, etc. please refer to ",
 ButtonBox["the C/igraph documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/c/doc/"], None},
  ButtonNote->"http://igraph.org/c/doc/"],
 ". The igraph documentation provides article references for most nontrivial \
algorithms. Note that IGraph/M is currently built using the development \
version of igraph (0.8.0-pre) while the online igraph documentation is for \
the last released version (0.7.1). Some new functionality may not yet be \
described in the online documentation."
}], "Text"],

Cell["\<\
The following sections provide general information on each functionality \
area, and show common usage patterns.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graph creation", "Section"],

Cell[TextData[{
 "All the graph creation functions in IGraph/M take any standard ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox["Graph", TraditionalForm]]],
 " option such as ",
 Cell[BoxData[
  FormBox["VertexLabels", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["GraphStyle", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["VertexStyle", TraditionalForm]]],
 ", etc."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLCF", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", "7", ",", 
   RowBox[{"GraphStyle", "\[Rule]", "\"\<SmallNetwork\>\""}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}, {
      Null, {{1, 2}, {1, 6}, {1, 14}, {2, 3}, {2, 11}, {3, 4}, {3, 8}, {4, 
       5}, {4, 13}, {5, 6}, {5, 10}, {6, 7}, {7, 8}, {7, 12}, {8, 9}, {9, 
       10}, {9, 14}, {10, 11}, {11, 12}, {12, 13}, {13, 14}}}, {
      GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, GraphStyle -> 
       "SmallNetwork"}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.625, 0.5, 0.7], 
        Thickness[Large], 
        Opacity[1]], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$13", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}]}, {
       Directive[
        Hue[0.125, 0.7, 0.9], 
        EdgeForm[]], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{-0.4667448391289874, 
           0.8352466678795624}, {-0.4010226391061302, 
           0.8352466678795624}, {-0.3681615390947015, 
           0.8352466678795624}, {-0.3681615390947015, 
           0.868107767890991}, {-0.3681615390947015, 
           0.9338299679138482}, {-0.3681615390947015, 
           0.9666910679252768}, {-0.4010226391061302, 
           0.9666910679252768}, {-0.4667448391289874, 
           0.9666910679252768}, {-0.49960593914041607`, 
           0.9666910679252768}, {-0.49960593914041607`, 
           0.9338299679138482}, {-0.49960593914041607`, 
           0.868107767890991}, {-0.49960593914041607`, 
           0.8352466678795624}, {-0.4667448391289874, 0.8352466678795624}}}], 
          "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{-0.8146925824794589, 
           0.557767601835877}, {-0.7489703824566016, 
           0.557767601835877}, {-0.716109282445173, 
           0.557767601835877}, {-0.716109282445173, 
           0.5906287018473056}, {-0.716109282445173, 
           0.6563509018701629}, {-0.716109282445173, 
           0.6892120018815915}, {-0.7489703824566016, 
           0.6892120018815915}, {-0.8146925824794589, 
           0.6892120018815915}, {-0.8475536824908875, 
           0.6892120018815915}, {-0.8475536824908875, 
           0.6563509018701629}, {-0.8475536824908875, 
           0.5906287018473056}, {-0.8475536824908875, 
           0.557767601835877}, {-0.8146925824794589, 0.557767601835877}}}], 
          "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{-1.0077890121932525`, 
           0.1567987339334581}, {-0.9420668121703951, 
           0.1567987339334581}, {-0.9092057121589665, 
           0.1567987339334581}, {-0.9092057121589665, 
           0.18965983394488675`}, {-0.9092057121589665, 
           0.255382033967744}, {-0.9092057121589665, 
           0.28824313397917267`}, {-0.9420668121703951, 
           0.28824313397917267`}, {-1.0077890121932525`, 
           0.28824313397917267`}, {-1.040650112204681, 
           0.28824313397917267`}, {-1.040650112204681, 
           0.255382033967744}, {-1.040650112204681, 
           0.18965983394488675`}, {-1.040650112204681, 
           0.1567987339334581}, {-1.0077890121932525`, 0.1567987339334581}}}],
           "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 
           2}}}, {{{-1.0077890121932522`, -0.2882431339791707}, \
{-0.9420668121703949, -0.2882431339791707}, {-0.9092057121589663, \
-0.2882431339791707}, {-0.9092057121589663, -0.25538203396774206`}, \
{-0.9092057121589663, -0.18965983394488478`}, {-0.9092057121589663, \
-0.15679873393345617`}, {-0.9420668121703949, -0.15679873393345617`}, \
{-1.0077890121932522`, -0.15679873393345617`}, {-1.0406501122046807`, \
-0.15679873393345617`}, {-1.0406501122046807`, -0.18965983394488478`}, \
{-1.0406501122046807`, -0.25538203396774206`}, {-1.0406501122046807`, \
-0.2882431339791707}, {-1.0077890121932522`, -0.2882431339791707}}}], 
          "DynamicName", BoxID -> "VertexID$4"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 
           2}}}, {{{-0.814692582479458, -0.6892120018815899}, \
{-0.7489703824566007, -0.6892120018815899}, {-0.7161092824451721, \
-0.6892120018815899}, {-0.7161092824451721, -0.6563509018701613}, \
{-0.7161092824451721, -0.5906287018473041}, {-0.7161092824451721, \
-0.5577676018358755}, {-0.7489703824566007, -0.5577676018358755}, \
{-0.814692582479458, -0.5577676018358755}, {-0.8475536824908866, \
-0.5577676018358755}, {-0.8475536824908866, -0.5906287018473041}, \
{-0.8475536824908866, -0.6563509018701613}, {-0.8475536824908866, \
-0.6892120018815899}, {-0.814692582479458, -0.6892120018815899}}}], 
          "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 
           2}}}, {{{-0.4667448391289862, -0.9666910679252759}, \
{-0.40102263910612895`, -0.9666910679252759}, {-0.3681615390947003, \
-0.9666910679252759}, {-0.3681615390947003, -0.9338299679138473}, \
{-0.3681615390947003, -0.8681077678909901}, {-0.3681615390947003, \
-0.8352466678795615}, {-0.40102263910612895`, -0.8352466678795615}, \
{-0.4667448391289862, -0.8352466678795615}, {-0.49960593914041485`, \
-0.8352466678795615}, {-0.49960593914041485`, -0.8681077678909901}, \
{-0.49960593914041485`, -0.9338299679138473}, {-0.49960593914041485`, \
-0.9666910679252759}, {-0.4667448391289862, -0.9666910679252759}}}], 
          "DynamicName", BoxID -> "VertexID$6"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 
           2}}}, {{{-0.03286110001142803, -1.0657222000228572`}, {
           0.03286110001142924, -1.0657222000228572`}, {
           0.06572220002285788, -1.0657222000228572`}, {
           0.06572220002285788, -1.0328611000114287`}, {
           0.06572220002285788, -0.9671388999885714}, {
           0.06572220002285788, -0.9342777999771428}, {
           0.03286110001142924, -0.9342777999771428}, {-0.03286110001142803, \
-0.9342777999771428}, {-0.06572220002285666, -0.9342777999771428}, \
{-0.06572220002285666, -0.9671388999885714}, {-0.06572220002285666, \
-1.0328611000114287`}, {-0.06572220002285666, -1.0657222000228572`}, \
{-0.03286110001142803, -1.0657222000228572`}}}], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.40102263910613023`, -0.9666910679252768}, {
           0.46674483912898745`, -0.9666910679252768}, {
           0.4996059391404161, -0.9666910679252768}, {
           0.4996059391404161, -0.9338299679138482}, {
           0.4996059391404161, -0.868107767890991}, {
           0.4996059391404161, -0.8352466678795624}, {
           0.46674483912898745`, -0.8352466678795624}, {
           0.40102263910613023`, -0.8352466678795624}, {
           0.36816153909470156`, -0.8352466678795624}, {
           0.36816153909470156`, -0.868107767890991}, {
           0.36816153909470156`, -0.9338299679138482}, {
           0.36816153909470156`, -0.9666910679252768}, {
           0.40102263910613023`, -0.9666910679252768}}}], "DynamicName", 
          BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.7489703824566016, -0.6892120018815916}, {
           0.8146925824794589, -0.6892120018815916}, {
           0.8475536824908875, -0.6892120018815916}, {
           0.8475536824908875, -0.656350901870163}, {
           0.8475536824908875, -0.5906287018473058}, {
           0.8475536824908875, -0.5577676018358771}, {
           0.8146925824794589, -0.5577676018358771}, {
           0.7489703824566016, -0.5577676018358771}, {
           0.716109282445173, -0.5577676018358771}, {
           0.716109282445173, -0.5906287018473058}, {
           0.716109282445173, -0.656350901870163}, {
           0.716109282445173, -0.6892120018815916}, {
           0.7489703824566016, -0.6892120018815916}}}], "DynamicName", BoxID -> 
          "VertexID$9"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          DynamicLocation["VertexID$9", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{
           0.9420668121703951, -0.2882431339791728}, {
           1.0077890121932525`, -0.2882431339791728}, {
           1.040650112204681, -0.2882431339791728}, {
           1.040650112204681, -0.2553820339677441}, {
           1.040650112204681, -0.18965983394488686`}, {
           1.040650112204681, -0.15679873393345822`}, {
           1.0077890121932525`, -0.15679873393345822`}, {
           0.9420668121703951, -0.15679873393345822`}, {
           0.9092057121589665, -0.15679873393345822`}, {
           0.9092057121589665, -0.18965983394488686`}, {
           0.9092057121589665, -0.2553820339677441}, {
           0.9092057121589665, -0.2882431339791728}, {
           0.9420668121703951, -0.2882431339791728}}}], "DynamicName", BoxID -> 
          "VertexID$10"], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          DynamicLocation["VertexID$10", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{0.9420668121703948, 
           0.156798733933456}, {1.007789012193252, 0.156798733933456}, {
           1.0406501122046807`, 0.156798733933456}, {1.0406501122046807`, 
           0.18965983394488464`}, {1.0406501122046807`, 0.2553820339677419}, {
           1.0406501122046807`, 0.28824313397917056`}, {1.007789012193252, 
           0.28824313397917056`}, {0.9420668121703948, 
           0.28824313397917056`}, {0.9092057121589662, 
           0.28824313397917056`}, {0.9092057121589662, 0.2553820339677419}, {
           0.9092057121589662, 0.18965983394488464`}, {0.9092057121589662, 
           0.156798733933456}, {0.9420668121703948, 0.156798733933456}}}], 
          "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          DynamicLocation["VertexID$11", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{0.7489703824566007, 
           0.5577676018358754}, {0.814692582479458, 0.5577676018358754}, {
           0.8475536824908866, 0.5577676018358754}, {0.8475536824908866, 
           0.590628701847304}, {0.8475536824908866, 0.6563509018701612}, {
           0.8475536824908866, 0.6892120018815898}, {0.814692582479458, 
           0.6892120018815898}, {0.7489703824566007, 0.6892120018815898}, {
           0.7161092824451721, 0.6892120018815898}, {0.7161092824451721, 
           0.6563509018701612}, {0.7161092824451721, 0.590628701847304}, {
           0.7161092824451721, 0.5577676018358754}, {0.7489703824566007, 
           0.5577676018358754}}}], "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          DynamicLocation["VertexID$12", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{0.40102263910612884`, 
           0.8352466678795614}, {0.46674483912898607`, 0.8352466678795614}, {
           0.49960593914041473`, 0.8352466678795614}, {0.49960593914041473`, 
           0.86810776789099}, {0.49960593914041473`, 0.9338299679138472}, {
           0.49960593914041473`, 0.9666910679252758}, {0.46674483912898607`, 
           0.9666910679252758}, {0.40102263910612884`, 0.9666910679252758}, {
           0.3681615390947002, 0.9666910679252758}, {0.3681615390947002, 
           0.9338299679138472}, {0.3681615390947002, 0.86810776789099}, {
           0.3681615390947002, 0.8352466678795614}, {0.40102263910612884`, 
           0.8352466678795614}}}], "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          DynamicLocation["VertexID$13", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          
          FilledCurveBox[{{{0, 2, 1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}, {0, 1, 
           1}, {1, 2, 2}, {0, 1, 1}, {1, 2, 2}}}, {{{-0.03286110001142934, 
           0.9342777999771428}, {0.032861100011427925`, 0.9342777999771428}, {
           0.06572220002285656, 0.9342777999771428}, {0.06572220002285656, 
           0.9671388999885714}, {0.06572220002285656, 1.0328611000114287`}, {
           0.06572220002285656, 1.0657222000228572`}, {0.032861100011427925`, 
           1.0657222000228572`}, {-0.03286110001142934, 
           1.0657222000228572`}, {-0.06572220002285797, 
           1.0657222000228572`}, {-0.06572220002285797, 
           1.0328611000114287`}, {-0.06572220002285797, 
           0.9671388999885714}, {-0.06572220002285797, 
           0.9342777999771428}, {-0.03286110001142934, 0.9342777999771428}}}],
           "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          DynamicLocation["VertexID$14", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> 
        "VertexLabelID$14"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{3.760693309010094, 
       355.2393066909899}, {-182.2393066909899, 177.2393066909899}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Many included graph creation functions implement random graph models. These \
use igraph\[CloseCurlyQuote]s (not ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s) random number generator, which can be re-seeded using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGSeedRandom", "[", "]"}], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell["IGLCF", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGLCF"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGLCF[shifts, repeats] creates a graph from LCF \
notation.\\nIGLCF[shifts, repeats, vertexCount] creates a graph from LCF \
notation with the number of vertices specified.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info183666170810-3785256"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox["IGLCF", TraditionalForm]]],
 " creates a graph based on LCF notation."
}], "Text"],

Cell[TextData[{
 "The M\[ODoubleDot]bius\[Dash]Kantor graph is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"[", 
     RowBox[{"5", ",", 
      RowBox[{"-", "5"}]}], "]"}], "8"], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLCF", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", "8", ",", 
   RowBox[{"GraphStyle", "->", "\"\<DiagramGreen\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {
      Null, {{1, 2}, {1, 6}, {1, 16}, {2, 3}, {2, 13}, {3, 4}, {3, 8}, {4, 
       5}, {4, 15}, {5, 6}, {5, 10}, {6, 7}, {7, 8}, {7, 12}, {8, 9}, {9, 
       10}, {9, 14}, {10, 11}, {11, 12}, {11, 16}, {12, 13}, {13, 14}, {14, 
       15}, {15, 16}}}, {
      GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, GraphStyle -> 
       "DiagramGreen"}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Hue[0.25, 0.4, 0.5], 
        Opacity[1]], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$2", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$1", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$3", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$3", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$5", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$6", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$7", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$8", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$7", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$8", Automatic, Center], 
         DynamicLocation["VertexID$9", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$10", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$9", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$10", Automatic, Center], 
         DynamicLocation["VertexID$11", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$12", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$12", Automatic, Center], 
         DynamicLocation["VertexID$13", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$13", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$14", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       LineBox[{
         DynamicLocation["VertexID$15", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}]}, {
       Directive[
        Hue[0.25, 0.4, 0.8], 
        EdgeForm[]], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.5324231927762786, 
           0.8240527427277825}, {-0.23294367195390236`, 1.0237063222947915`}],
           "DynamicName", BoxID -> "VertexID$1"], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          DynamicLocation["VertexID$1", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.8568465415977361, 
           0.6072799914030437}, {-0.5573670207753599, 0.8069335709700528}], 
          "DynamicName", BoxID -> "VertexID$2"], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          DynamicLocation["VertexID$2", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-1.073619292922475, 
           0.28285664258158577`}, {-0.774139772100099, 0.4825102221485948}], 
          "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          DynamicLocation["VertexID$3", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-1.149739760411188, -0.09982678978350351}, \
{-0.8502602395888119, 0.09982678978350554}], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          DynamicLocation["VertexID$4", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-1.0736192929224746`, -0.48251022214859374`}, \
{-0.7741397721000984, -0.2828566425815847}], "DynamicName", BoxID -> 
          "VertexID$5"], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          DynamicLocation["VertexID$5", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.8568465415977352, -0.8069335709700514}, \
{-0.557367020775359, -0.6072799914030422}], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          DynamicLocation["VertexID$6", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.5324231927762773, -1.023706322294791}, \
{-0.2329436719539011, -0.824052742727782}], "DynamicName", BoxID -> 
          "VertexID$7"], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          DynamicLocation["VertexID$7", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.14973976041118747`, -1.0998267897835046`}, {
           0.1497397604111887, -0.9001732102164954}], "DynamicName", BoxID -> 
          "VertexID$8"], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          DynamicLocation["VertexID$8", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.23294367195390225`, -1.0237063222947915`}, {
           0.5324231927762784, -0.8240527427277824}], "DynamicName", BoxID -> 
          "VertexID$9"], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          DynamicLocation["VertexID$9", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.55736702077536, -0.8069335709700529}, {
           0.8568465415977362, -0.6072799914030438}], "DynamicName", BoxID -> 
          "VertexID$10"], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          DynamicLocation["VertexID$10", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.7741397721000988, -0.4825102221485949}, {
           1.073619292922475, -0.2828566425815859}], "DynamicName", BoxID -> 
          "VertexID$11"], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          DynamicLocation["VertexID$11", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.8502602395888119, -0.09982678978350566}, {
           1.149739760411188, 0.09982678978350339}], "DynamicName", BoxID -> 
          "VertexID$12"], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          DynamicLocation["VertexID$12", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.7741397721000985, 0.2828566425815846}, {
           1.0736192929224746`, 0.4825102221485936}], "DynamicName", BoxID -> 
          "VertexID$13"], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          DynamicLocation["VertexID$13", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.5573670207753589, 0.6072799914030428}, {
           0.8568465415977351, 0.8069335709700519}], "DynamicName", BoxID -> 
          "VertexID$14"], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          DynamicLocation["VertexID$14", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{0.23294367195390142`, 0.824052742727782}, {
           0.5324231927762776, 1.023706322294791}], "DynamicName", BoxID -> 
          "VertexID$15"], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          DynamicLocation["VertexID$15", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          
          RectangleBox[{-0.1497397604111879, 0.9001732102164954}, {
           0.14973976041118828`, 1.0998267897835046`}], "DynamicName", BoxID -> 
          "VertexID$16"], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          DynamicLocation["VertexID$16", None, Center], BaseStyle -> 
          "Graphics"]}, "DynamicName", BoxID -> 
        "VertexLabelID$16"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{7.179999999999978, 
       351.82000000000005`}, {-167.10720000000003`, 162.57114799018103`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell[TextData[{
 "The Pappus graph is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"[", 
     RowBox[{"5", ",", "7", ",", 
      RowBox[{"-", "7"}], ",", "7", ",", 
      RowBox[{"-", "7"}], ",", 
      RowBox[{"-", "5"}]}], "]"}], "3"], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLCF", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", 
     RowBox[{"-", "7"}], ",", "7", ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", "3", ",", 
   RowBox[{"GraphStyle", "->", "\"\<ThickEdge\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}, {
      Null, {{1, 2}, {1, 6}, {1, 18}, {2, 3}, {2, 9}, {3, 4}, {3, 14}, {4, 
       5}, {4, 11}, {5, 6}, {5, 16}, {6, 7}, {7, 8}, {7, 12}, {8, 9}, {8, 
       15}, {9, 10}, {10, 11}, {10, 17}, {11, 12}, {12, 13}, {13, 14}, {13, 
       18}, {14, 15}, {15, 16}, {16, 17}, {17, 18}}}, {
      GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "CircularEmbedding"}, GraphStyle -> 
       "ThickEdge"}]], Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
       Directive[
        Opacity[0.3], 
        Thickness[0.03], 
        Hue[0.12, 1, 0.7]], {
        CapForm["Round"], 
        LineBox[{{-0.34202014332566943`, 
         0.9396926207859086}, {-0.6427876096865399, 0.7660444431189786}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.34202014332566943`, 
         0.9396926207859086}, {-0.8660254037844383, -0.4999999999999994}}]}, {
       
        CapForm["Round"], 
        LineBox[{{-0.34202014332566943`, 0.9396926207859086}, {
         1.8369701987210297`*^-16, 1.}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.6427876096865399, 
         0.7660444431189786}, {-0.866025403784439, 0.5000000000000008}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.6427876096865399, 0.7660444431189786}, {
         6.049014748177263*^-16, -1.}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.866025403784439, 
         0.5000000000000008}, {-0.9848077530122081, 0.17364817766693114`}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.866025403784439, 0.5000000000000008}, {
         0.9848077530122079, 0.17364817766692991`}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.9848077530122081, 
         0.17364817766693114`}, {-0.9848077530122079, \
-0.17364817766692958`}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.9848077530122081, 0.17364817766693114`}, {
         0.64278760968654, -0.7660444431189787}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.9848077530122079, -0.17364817766692958`}, \
{-0.8660254037844383, -0.4999999999999994}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.9848077530122079, -0.17364817766692958`}, {
         0.6427876096865388, 0.7660444431189778}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.8660254037844383, -0.4999999999999994}, \
{-0.6427876096865389, -0.7660444431189773}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.6427876096865389, -0.7660444431189773}, \
{-0.3420201433256682, -0.9396926207859082}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.6427876096865389, -0.7660444431189773}, {
         0.8660254037844389, -0.5000000000000004}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.3420201433256682, -0.9396926207859082}, {
         6.049014748177263*^-16, -1.}}]}, {
        CapForm["Round"], 
        LineBox[{{-0.3420201433256682, -0.9396926207859082}, {
         0.8660254037844386, 0.4999999999999993}}]}, {
        CapForm["Round"], 
        LineBox[{{6.049014748177263*^-16, -1.}, {
         0.3420201433256693, -0.9396926207859085}}]}, {
        CapForm["Round"], 
        LineBox[{{0.3420201433256693, -0.9396926207859085}, {
         0.64278760968654, -0.7660444431189787}}]}, {
        CapForm["Round"], 
        LineBox[{{0.3420201433256693, -0.9396926207859085}, {
         0.34202014332566855`, 0.9396926207859081}}]}, {
        CapForm["Round"], 
        LineBox[{{0.64278760968654, -0.7660444431189787}, {
         0.8660254037844389, -0.5000000000000004}}]}, {
        CapForm["Round"], 
        LineBox[{{0.8660254037844389, -0.5000000000000004}, {
         0.984807753012208, -0.17364817766693127`}}]}, {
        CapForm["Round"], 
        LineBox[{{0.984807753012208, -0.17364817766693127`}, {
         0.9848077530122079, 0.17364817766692991`}}]}, {
        CapForm["Round"], 
        LineBox[{{0.984807753012208, -0.17364817766693127`}, {
         1.8369701987210297`*^-16, 1.}}]}, {
        CapForm["Round"], 
        LineBox[{{0.9848077530122079, 0.17364817766692991`}, {
         0.8660254037844386, 0.4999999999999993}}]}, {
        CapForm["Round"], 
        LineBox[{{0.8660254037844386, 0.4999999999999993}, {
         0.6427876096865388, 0.7660444431189778}}]}, {
        CapForm["Round"], 
        LineBox[{{0.6427876096865388, 0.7660444431189778}, {
         0.34202014332566855`, 0.9396926207859081}}]}, {
        CapForm["Round"], 
        LineBox[{{0.34202014332566855`, 0.9396926207859081}, {
         1.8369701987210297`*^-16, 1.}}]}}, {
       Directive[
        Hue[0.6, 0.7, 0.6], 
        EdgeForm[{}]], 
       TagBox[
        DiskBox[{-0.34202014332566943`, 0.9396926207859086}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$1"], 
       TagBox[
        DiskBox[{-0.6427876096865399, 0.7660444431189786}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$2"], 
       TagBox[
        DiskBox[{-0.866025403784439, 0.5000000000000008}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$3"], 
       TagBox[
        DiskBox[{-0.9848077530122081, 0.17364817766693114`}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$4"], 
       TagBox[
        DiskBox[{-0.9848077530122079, -0.17364817766692958`}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$5"], 
       TagBox[
        DiskBox[{-0.8660254037844383, -0.4999999999999994}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$6"], 
       TagBox[
        DiskBox[{-0.6427876096865389, -0.7660444431189773}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$7"], 
       TagBox[
        DiskBox[{-0.3420201433256682, -0.9396926207859082}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$8"], 
       TagBox[
        DiskBox[{6.049014748177263*^-16, -1.}, 0.014035121340383754`], 
        "DynamicName", BoxID -> "VertexID$9"], 
       TagBox[
        DiskBox[{0.3420201433256693, -0.9396926207859085}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$10"], 
       TagBox[
        DiskBox[{0.64278760968654, -0.7660444431189787}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$11"], 
       TagBox[
        DiskBox[{0.8660254037844389, -0.5000000000000004}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$12"], 
       TagBox[
        DiskBox[{0.984807753012208, -0.17364817766693127`}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$13"], 
       TagBox[
        DiskBox[{0.9848077530122079, 0.17364817766692991`}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$14"], 
       TagBox[
        DiskBox[{0.8660254037844386, 0.4999999999999993}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$15"], 
       TagBox[
        DiskBox[{0.6427876096865388, 0.7660444431189778}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$16"], 
       TagBox[
        DiskBox[{0.34202014332566855`, 0.9396926207859081}, 
         0.014035121340383754`], "DynamicName", BoxID -> "VertexID$17"], 
       TagBox[
        DiskBox[{1.8369701987210297`*^-16, 1.}, 0.014035121340383754`], 
        "DynamicName", BoxID -> "VertexID$18"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{0.46944018951718824`, 
       358.53055981048277`}, {-184.8177598104828, 178.48528137423858`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell[TextData[{
 "The cuboctahedral graph is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"[", 
     RowBox[{"4", ",", "2"}], "]"}], "6"], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLayoutKamadaKawai3D", "@", 
  RowBox[{"IGLCF", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "2"}], "}"}], ",", "6"}], "]"}]}]], "Input"],

Cell[BoxData[
 Graphics3DBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}, {
      Null, {{1, 2}, {1, 5}, {1, 9}, {1, 12}, {2, 3}, {2, 4}, {2, 12}, {3, 
       4}, {3, 7}, {3, 11}, {4, 5}, {4, 6}, {5, 6}, {5, 9}, {6, 7}, {6, 8}, {
       7, 8}, {7, 11}, {8, 9}, {8, 10}, {9, 10}, {10, 11}, {10, 12}, {11, 
       12}}}, {GraphLayout -> {"Dimension" -> 3}, 
       VertexCoordinates -> {{0.2892832414218052, 0.2459929767534987, 
        0.5307532646014236}, {0.6286564638614169, -0.129332615680644, 
        0.11861058721797708`}, {
        0.3394666997848197, -0.375250621331272, -0.4121428576606499}, {
        0.1812586372583916, -0.6006068520879145, 
        0.1795786766840563}, {-0.1580317441815807, -0.22523208685009166`, 
        0.5917243908007314}, {-0.4473365614193612, -0.47135771405030397`, 
        0.061064605487779276`}, {-0.2892441190697731, -0.24609248144223325`, \
-0.5306896189429308}, {-0.6285576503713076, 
        0.12931514807448632`, -0.11863012374717677`}, {-0.3393621458422151, 
        0.3753958426345124, 0.41206060246398707`}, {-0.18129081244866915`, 
        0.6006895444569361, -0.1796660067236557}, {0.1579192626762628, 
        0.22518848585980103`, -0.5916662875235956}, {0.4472387283302102, 
        0.4712903736632249, -0.0609972326579467}}}]]}, 
    TagBox[
     GraphicsGroup3DBox[
      GraphicsComplex3DBox[{{0.2892832414218052, 0.2459929767534987, 
       0.5307532646014236}, {0.6286564638614169, -0.129332615680644, 
       0.11861058721797708`}, {
       0.3394666997848197, -0.375250621331272, -0.4121428576606499}, {
       0.1812586372583916, -0.6006068520879145, 
       0.1795786766840563}, {-0.1580317441815807, -0.22523208685009166`, 
       0.5917243908007314}, {-0.4473365614193612, -0.47135771405030397`, 
       0.061064605487779276`}, {-0.2892441190697731, -0.24609248144223325`, \
-0.5306896189429308}, {-0.6285576503713076, 
       0.12931514807448632`, -0.11863012374717677`}, {-0.3393621458422151, 
       0.3753958426345124, 0.41206060246398707`}, {-0.18129081244866915`, 
       0.6006895444569361, -0.1796660067236557}, {0.1579192626762628, 
       0.22518848585980103`, -0.5916662875235956}, {0.4472387283302102, 
       0.4712903736632249, -0.0609972326579467}}, {
        {Hue[0.6, 0.2, 0.8], 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{1, 2}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{1, 5}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{1, 9}], 0.03257051951982487]}, 
         {Arrowheads[0.], 
          Arrow3DBox[TubeBox[{1, 12}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{2, 3}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{2, 4}], 0.03257051951982487]}, 
         {Arrowheads[0.], 
          Arrow3DBox[TubeBox[{2, 12}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{3, 4}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{3, 7}], 0.03257051951982487]}, 
         {Arrowheads[0.], 
          Arrow3DBox[TubeBox[{3, 11}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{4, 5}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{4, 6}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{5, 6}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{5, 9}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{6, 7}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{6, 8}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{7, 8}], 0.03257051951982487]}, 
         {Arrowheads[0.], 
          Arrow3DBox[TubeBox[{7, 11}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{8, 9}], 0.03257051951982487]}, 
         {Arrowheads[0.], 
          Arrow3DBox[TubeBox[{8, 10}], 0.03257051951982487]}, 
         {Arrowheads[0.], 
          Arrow3DBox[TubeBox[{9, 10}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{10, 11}], 0.03257051951982487]}, 
         {Arrowheads[0.], Arrow3DBox[TubeBox[{10, 12}], 0.03257051951982487]}, 
         {Arrowheads[0.], 
          Arrow3DBox[TubeBox[{11, 12}], 0.03257051951982487]}}, 
        {Hue[0.6, 0.6, 1], SphereBox[1, 0.03257051951982487], 
         SphereBox[2, 0.03257051951982487], SphereBox[3, 0.03257051951982487],
          SphereBox[4, 0.03257051951982487], 
         SphereBox[5, 0.03257051951982487], SphereBox[6, 0.03257051951982487],
          SphereBox[7, 0.03257051951982487], 
         SphereBox[8, 0.03257051951982487], SphereBox[9, 0.03257051951982487],
          SphereBox[10, 0.03257051951982487], 
         SphereBox[11, 0.03257051951982487], 
         SphereBox[12, 0.03257051951982487]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  Boxed->False,
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  Lighting->Dynamic[
    FEPrivate`If[
     FEPrivate`SameQ[
     FEPrivate`$OperatingSystem, "Windows"], {{"Directional", 
       GrayLevel[0.7], 
       ImageScaled[{1, 1, 0}]}, {"Point", 
       GrayLevel[0.9], 
       ImageScaled[{0, 0, 3.5}], {0, 0, 0.07}}}, {{"Directional", 
       GrayLevel[0.7], 
       ImageScaled[{1, 1, 0}]}, {"Point", 
       GrayLevel[0.9], 
       ImageScaled[{0, 0, 0}], {0, 0, 0.07}}}]]]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IGGraphAtlas", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGGraphAtlas"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGGraphAtlas[n] returns graph number n from An Atlas of Graphs \
by Ronald C. Read and Robin J. Wilson, Oxford University Press, 1998. This \
function is provided for convenience; if you are looking for a specific named \
graph, use the builtin GraphData function.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info223666170810-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGGraphAtlas", "[", "789", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7}, {
      Null, {{1, 7}, {2, 5}, {2, 6}, {2, 7}, {3, 5}, {3, 6}, {3, 7}, {4, 5}, {
       4, 6}, {4, 7}, {5, 6}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{2.918332524390773, 0.6874310907325094}, {
       0.6743461028810798, 0.}, {0.809057999510449, 0.688083634264115}, {
       0.6739748462442171, 1.375520221490266}, {0.0008641569947026584, 
       0.41447514294544513`}, {0., 0.9599234455414128}, {1.6736568734775241`, 
       0.68790535156638}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 7}, 0.029650982006492257`]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.029650982006492257`]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.029650982006492257`]}, 
         {Arrowheads[0.], ArrowBox[{2, 7}, 0.029650982006492257`]}, 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.029650982006492257`]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.029650982006492257`]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.029650982006492257`]}, 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.029650982006492257`]}, 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.029650982006492257`]}, 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.029650982006492257`]}, 
         {Arrowheads[0.], ArrowBox[{5, 6}, 0.029650982006492257`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.029650982006492257`], DiskBox[2, 0.029650982006492257`],
          DiskBox[3, 0.029650982006492257`], 
         DiskBox[4, 0.029650982006492257`], DiskBox[5, 0.029650982006492257`],
          DiskBox[6, 0.029650982006492257`], 
         DiskBox[7, 0.029650982006492257`]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IGMakeLattice", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGMakeLattice"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGMakeLattice[{d1, d2, \[Ellipsis]}] generates a lattice graph \
of the given dimensions.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info243666170810-3785256"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGMakeLattice", "[", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["d", "1"], ",", 
      SubscriptBox["d", "2"], ",", "\[Ellipsis]"}], "}"}], "]"}], 
   TraditionalForm]]],
 " creates a lattice graph of the given dimensions. The available options are:"
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Radius\>\"", TraditionalForm]]],
 " controls the size of the neighbourhood within which vertices will be \
connected."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\"\<Periodic\>\"", "\[Rule]", "True"}], TraditionalForm]]],
 " to creates a periodic lattice."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\"\<Mutual\>\"", "\[Rule]", "True"}], TraditionalForm]]],
 " inserts directed edges in both directions when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"DirectedEdges", "\[Rule]", "True"}], TraditionalForm]]],
 " is used."
}], "Item"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IGDegreeSequenceGame", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGDegreeSequenceGame"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGDegreeSequenceGame[degrees] generates an undirected random \
graph with the given degree sequence. Available Method options: \
{\\\"VigerLatapy\\\", \\\"SimpleNoMultiple\\\", \
\\\"Simple\\\"}.\\nIGDegreeSequenceGame[indegrees, outdegrees] generates a \
directed random graph with the given in- and out-degree sequences.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info253666170810-3785256"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox["IGDegreeSequenceGame", TraditionalForm]]],
 " takes the following values for its ",
 Cell[BoxData[
  FormBox["Method", TraditionalForm]]],
 " option:"
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Simple\>\"", TraditionalForm]]],
 " may generate both self-loops and multiple edges."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<SimpleNoMultiple\>\"", TraditionalForm]]],
 " avoids self-loops and multiple edges, but it does not guarantee uniform \
sampling from the space of all graphs with the given degree sequence."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<VigerLatapy\>\"", TraditionalForm]]],
 " can sample undirected, connected simple graphs uniformly and uses \
Monte-Carlo methods to randomize the graphs. This generator should be \
favoured if undirected and connected graphs are to be generated and execution \
time is not a concern. igraph uses the original implementation of Fabien \
Viger; see ",
 ButtonBox["http://www-rp.lip6.fr/~latapy/FV/generation.html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www-rp.lip6.fr/~latapy/FV/generation.html"], None},
  ButtonNote->"http://www-rp.lip6.fr/~latapy/FV/generation.html"],
 " and the paper cited on it for the details of the algorithm."
}], "Item"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IGKRegularGame", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGKRegularGame"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGKRegularGame[n, k] generates a k-regular graph on n \
vertices, i.e. a graph in which all vertices have degree k.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info263666170810-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGKRegularGame", "[", 
  RowBox[{"10", ",", "3"}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{1, 2}, {1, 3}, {1, 10}, {2, 3}, {2, 4}, {3, 5}, {4, 9}, {4, 
       10}, {5, 7}, {5, 8}, {6, 8}, {6, 9}, {6, 10}, {7, 8}, {7, 9}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 1.4808587107944993`}, {0.06062070949607823, 
       0.854296062899419}, {0.727279104141402, 1.79871103345245}, {
       0.782690728425201, 0.00017577376275712542`}, {2.0121916877392696`, 
       1.7968772734565717`}, {1.9212762004422128`, 0.7564397942124175}, {
       2.677716319727957, 0.853901956003885}, {2.7393990159331936`, 
       1.4806760417774092`}, {1.9551931812213281`, 0.}, {0.8170266926095849, 
       0.7561994745164774}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{4, 10}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{5, 7}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{5, 8}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{6, 8}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{6, 10}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.02834105139357075]}, 
         {Arrowheads[0.], ArrowBox[{7, 9}, 0.02834105139357075]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02834105139357075], DiskBox[2, 0.02834105139357075], 
         DiskBox[3, 0.02834105139357075], DiskBox[4, 0.02834105139357075], 
         DiskBox[5, 0.02834105139357075], DiskBox[6, 0.02834105139357075], 
         DiskBox[7, 0.02834105139357075], DiskBox[8, 0.02834105139357075], 
         DiskBox[9, 0.02834105139357075], DiskBox[10, 0.02834105139357075]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell["Not all parameters are valid:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGKRegularGame", "[", 
  RowBox[{"5", ",", "3"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"IGraphM", "::", "error"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"games.c:931 - No \
simple undirected graph can realize the given degree \
sequence\\\\\\\"\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"IGraphM", "::", "error"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"igraph returned \
with error: Invalid value\\\\\\\"\\\"}]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG"],

Cell[BoxData[
 RowBox[{"LibraryFunctionError", "[", 
  RowBox[{"\<\"LIBRARY_FUNCTION_ERROR\"\>", ",", "6"}], "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGGraphicalQ", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "3"}], "}"}], 
  "]"}]], "Input"],

Cell[BoxData["False"], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IGStochasticBlockModelGame", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGStochasticBlockModelGame"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGStochasticBlockModelGame[ratesMatrix, blockSizes] samples \
from a stochastic block model.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info303666170811-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGStochasticBlockModelGame", "[", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.9", "0.1", "0.2"},
       {"0.1", "1", "0.05"},
       {"0.2", "0.05", "0.9"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "8"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21}, {
      Null, {{1, 2}, {1, 3}, {2, 3}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2, 5}, {
       3, 5}, {4, 5}, {2, 6}, {3, 6}, {4, 6}, {5, 10}, {6, 11}, {1, 14}, {3, 
       17}, {5, 17}, {2, 18}, {3, 18}, {5, 18}, {4, 20}, {2, 21}, {5, 21}, {6,
        21}, {7, 8}, {7, 9}, {8, 9}, {7, 10}, {8, 10}, {9, 10}, {7, 11}, {8, 
       11}, {9, 11}, {10, 11}, {7, 12}, {8, 12}, {9, 12}, {10, 12}, {11, 
       12}, {7, 13}, {8, 13}, {9, 13}, {10, 13}, {11, 13}, {12, 13}, {11, 
       17}, {8, 18}, {8, 21}, {14, 15}, {14, 16}, {15, 16}, {14, 17}, {16, 
       17}, {14, 18}, {15, 18}, {16, 18}, {17, 18}, {14, 19}, {15, 19}, {16, 
       19}, {17, 19}, {18, 19}, {14, 20}, {15, 20}, {16, 20}, {18, 20}, {19, 
       20}, {14, 21}, {15, 21}, {16, 21}, {17, 21}, {18, 21}, {19, 21}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQbbNM/+E6eQGHtp51ob6F/+2vPXmlIRPH6cBdd0Tl
ym0Ghz3npyo7RXI5mDnY3XUS/G3vs2hLqoMjr0OGk+fR7a5MDgw3JuY+yWF1
OOPn+iX/9U/7284OvJPNmR2s379crTCDwUEjdsGM0vPX7LcvKXT92f/e/lbZ
MsmTk7/a73i+cbZ08Av7goYkk0TNw/ZsCrHaLFLf7A9UP736cOlr+3+pKxN9
jb7bv+T8nFcx7ZP91s0ruU97f7IvEDZ4rHTsur3W1nmFScUP7BmgIGallZS8
xGv7Y2wZsl/s+R1EJgt/myjx0v7yhGs3xdkEHe6cLP5+2f2E/VrdBwpr5vM4
wPQJbon/xH2f1cH+YuKOCVyP7YsKlDdzmXA5CPOEihpveWX/LWf9ni+FfA5a
5Z23EiIu2D+Z4G46cYKgQxrvaf91h97aL+tfy3p4E7sD2++++gWeb+0B/ZCU
cA==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{1, 4}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{1, 14}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{2, 18}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{2, 21}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{3, 17}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{3, 18}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{4, 20}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{5, 10}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{5, 17}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{5, 18}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{5, 21}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{6, 11}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{6, 21}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{7, 9}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{7, 11}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{7, 12}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{7, 13}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{8, 10}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{8, 11}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{8, 12}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{8, 13}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{8, 18}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{8, 21}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{9, 10}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{9, 11}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{9, 12}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{9, 13}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{10, 11}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{10, 12}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{10, 13}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{11, 12}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{11, 13}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{11, 17}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{12, 13}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{14, 15}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{14, 16}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{14, 17}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{14, 18}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{14, 19}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{14, 20}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{14, 21}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{15, 16}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{15, 18}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{15, 19}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{15, 20}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{15, 21}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{16, 17}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{16, 18}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{16, 19}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{16, 20}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{16, 21}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{17, 18}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{17, 19}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{17, 21}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{18, 19}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{18, 20}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{18, 21}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{19, 20}, 0.03944888510096911]}, 
         {Arrowheads[0.], ArrowBox[{19, 21}, 0.03944888510096911]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03944888510096911], DiskBox[2, 0.03944888510096911], 
         DiskBox[3, 0.03944888510096911], DiskBox[4, 0.03944888510096911], 
         DiskBox[5, 0.03944888510096911], DiskBox[6, 0.03944888510096911], 
         DiskBox[7, 0.03944888510096911], DiskBox[8, 0.03944888510096911], 
         DiskBox[9, 0.03944888510096911], DiskBox[10, 0.03944888510096911], 
         DiskBox[11, 0.03944888510096911], DiskBox[12, 0.03944888510096911], 
         DiskBox[13, 0.03944888510096911], DiskBox[14, 0.03944888510096911], 
         DiskBox[15, 0.03944888510096911], DiskBox[16, 0.03944888510096911], 
         DiskBox[17, 0.03944888510096911], DiskBox[18, 0.03944888510096911], 
         DiskBox[19, 0.03944888510096911], DiskBox[20, 0.03944888510096911], 
         DiskBox[21, 0.03944888510096911]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IGForestFireGame", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGForestFireGame"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGForestFireGame[n, fwprob]\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info323666170812-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGForestFireGame", "[", 
  RowBox[{"100", ",", "0.2", ",", "1", ",", "2", ",", " ", 
   RowBox[{"GraphLayout", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<EdgeLayout\>\"", "\[Rule]", "\"\<HierarchicalEdgeBundling\>\""}], 
     "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
       38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
       56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
       74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
       92, 93, 94, 95, 96, 97, 98, 99, 100}, {Null, CompressedData["
1:eJwVxdlaqlAYAFD/LbBB5mQmTDBLSU2xLLXAKZVKs5wa1az73v/ufGfdLHf/
97JHiUTCh0Ti/4AgCQQiCBJIRCIKKJJKUgQFmKSTNEUDgxlIMSkqhVPAYpbk
CC7FszzFEwISQBBEUiREXuIkUmJlUQYZy7xMHkAapbFCKISKVEGVNUUTNawR
GtIojdElnddJHRmKoRmsCaZuIUuyCDtpC7Zqpw+1Q9ZBjulYGTqDjrQjOctm
VRdc20Wu4dEe6Uke7+me5TEe8sDjck7OzLnH3DF5rOaVPJEX8pCHk9QJfUqd
4oJZgOJBEfuWj3zPV33JB9/19TPnzCmdlXIlvcSUrTIuQ1muFCvZClSy5+q5
Wz2q8rVSTQiSgRpAYAe4HtRrF9KFfZm9FBtGg746vBKvmWu56TRx66rVbNtt
oU3eVG74W/lWCashDo0QwkbIRm4kR82oHdGdcqfeVbpEN9MLe1bP6OX7hb7Z
5wbNgTTIDbp33p1/Fw75ITvMjsIROxqOYNQbd8bhODOmx964G1uxEuMYYuJ+
cN9/qD1cPJw/ph/jSTTJTaNpe3r/1H8SZ9rsetaYMTP3WXuGl5OXzNyY0/Ng
gRbCor6ARWc5WbZW1dV8nVnT6/Wr/Ipf4c14g/fl++R9+MF+eJ83n/4n9zX6
mm6UTbiJN4Vta4u3q22wo3ewo3anu+D74Lv4vdyv9uZP8wf/Ln7/AXvXWXg=

       "]}, {
      GraphLayout -> {
        "Dimension" -> 2, "EdgeLayout" -> "HierarchicalEdgeBundling"}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJzVWV1ozlEYf2crmayxd0xGpLnxdSFJqeeCoozZZmEbCgtZtDSa1fIRq01R
NMRWc8EmRCFm9cyFyY0ZLdnWvmyYbV4XkzCbOL/nrfe4OJ3O/x12s573nPN8
/H6/5znn3WZt25eWM8bn832N8Pl+/U470zEtOu4WDS/v5qZAgNOrOXtCUxtv
rDuy9k50P6XNTVhWlNTJxxfsGHkY1UebM/OjZjd0cdXguYsH3/TSw4i7w/U5
3fxhT9b28VXvyT9zYkbDux6efP9F5L30d9SeVbm5L7qOIl8fXr+TAzxFfc6T
1D7KPRSZkzj0hEbGJV3v2RvgS2MTv01saqCOGbHTLw9/ZORFBcgTfqgDfnGO
CuCnX+XBNSovuqry5K0qb/FLZYgzsn5FXMy+j5TSu3BJoP4ljYH/gPLPJfGt
rRsG++nykaSnX6iFezID5TV1A5xQXbUq89QrPqFw4VSFE2Uq3HidwpG61X6a
qvZTqfLH5fAHm2AHzyeDh5PYfwHriE+TEX+T8IR4xcgnBbxJvn7ER74k+aJ+
TkX94JV1nrcAv07wUiz4gbcDwD8ZfnwZyq/w3gy+eqGTWvAj/OYpfkVHLLoS
HUFXwd/yeSzqeos6cY5Ej8JvuspL9MS7oCepS+r0/f75xGOz/YvmXKlcJvvL
kJ/gJjgKz+BN8mLpA+BFpQovvgQehVfNptXwlwUdTEF9Qd7h148464C31Cm4
9QHHs6H9ROgDlr7IgE6OQTfQkeiK80P7M9h30oeV0DH6hPeHzhP60Zj/tn/e
1VrgSvHQrehSw5MLgbOc70YfSl9KHoUqL84Gf9Wo5zA+H8a+88Bd6r8PfQwA
H9FnF+LEheqL06Ab6RP45SLEAQ9BXoB7kIcqxG9H32BOsfTNQGh9wkuQJy0+
5Ybiw5grLHMmuqQieWnBNcFbeCXhWeZqBfISXpTeb9dq84QrtDklfb0GeX3w
3VpZNtRI41IX38w72MyvRo4O3Z7Wxi1lG5533nhM/9q6ra36+xn6u9U6nul8
3uLGFw9q2sgf4z/2o/mR5/EV743QQYs1X7p9IrZ8wefv7bR745f5k+JP/7Fu
ijfa9Zn8m2zX+CZ/Xtu6nmzP6/XYrut4j3b80bbDXa+rHW6+bM+b9uvzxfa8
LZ62+0397Iqn1/eTad31fnD173of2fr3el57Pa9M89s1nuu6qx5t8fda//+b
bZovXts6P675/u371na/rf5t56Mt3q7r/7q+9Ptet/V5qNu288x1v2l+ef2e
M/mzfe977c/2PeS1nm35srXDrX+v9Wb7nnOdn/q6rp+/jZftfLPN3+vvF7bf
b8KtZ1N+tv1vOq/Pf32/vu5ar6mfTHp0fa/bvhdc7xPT92vb/rGdP6a/d3r9
fnf179pftuum/ab8w31/hPt+tOXPFi9X/Lz+/4Lu/yeJgSe9
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 101, 102, 2}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 103, 104, 3}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 105, 106, 4}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 107, 108, 5}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 109, 110, 6}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 111, 7}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 112, 9}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 113, 10}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 114, 115, 11}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 116, 117, 14}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 118, 119, 17}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 120, 121, 19}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 122, 123, 25}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 124, 125, 33}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 126, 127, 34}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 128, 129, 37}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 130, 38}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 131, 132, 41}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 133, 134, 42}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 135, 45}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 136, 137, 46}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 138, 139, 50}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 140, 141, 62}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 142, 143, 71}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 144, 73}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 145, 82}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 146, 147, 84}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 148, 149, 89}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 150, 90}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{1, 151, 152, 96}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 153, 4}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 154, 5}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 155, 6}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 156, 14}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 157, 158, 19}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 159, 21}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 160, 22}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 161, 162, 24}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 163, 164, 26}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 165, 166, 29}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 167, 31}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 168, 33}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 169, 170, 34}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 171, 172, 42}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{2, 173, 84}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{3, 174, 6}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{3, 175, 8}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{3, 176, 27}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{3, 177, 50}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 178, 5}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 179, 6}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 180, 181, 12}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 182, 14}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 183, 15}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 184, 185, 20}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 186, 21}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 187, 22}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 188, 27}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 189, 37}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 190, 191, 65}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{4, 192, 193, 74}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{5, 194, 6}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{5, 195, 8}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{5, 196, 197, 12}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{5, 198, 15}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{5, 199, 200, 16}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{5, 201, 202, 18}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{5, 203, 204, 23}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{5, 205, 206, 34}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{5, 207, 36}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{5, 208, 209, 60}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{6, 210, 8}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{6, 211, 212, 10}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{6, 213, 214, 13}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{6, 215, 22}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{6, 216, 39}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{6, 217, 96}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 218, 9}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 219, 10}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 220, 221, 11}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 222, 223, 17}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 224, 225, 20}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 226, 227, 22}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 228, 229, 40}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 230, 231, 42}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 232, 45}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 233, 234, 51}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 235, 58}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 236, 237, 62}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 238, 73}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 239, 240, 88}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 241, 95}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{7, 242, 243, 100}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{8, 244, 245, 30}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{8, 246, 247, 34}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{8, 248, 39}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{8, 249, 250, 55}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{8, 251, 252, 64}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{8, 253, 254, 72}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{8, 255, 256, 83}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{8, 257, 258, 87}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{8, 259, 96}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{9, 260, 10}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{9, 261, 262, 23}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{9, 263, 264, 34}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{9, 265, 45}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{9, 266, 56}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{9, 267, 80}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{10, 268, 269, 13}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{10, 270, 38}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{11, 271, 13}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{11, 272, 17}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{11, 273, 25}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{11, 274, 29}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{11, 275, 32}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{11, 276, 63}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{11, 277, 70}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{11, 278, 71}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{11, 279, 91}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{12, 280, 16}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{12, 281, 35}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{12, 282, 283, 36}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{12, 284, 68}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{12, 285, 93}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{13, 286, 16}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{13, 287, 17}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{13, 288, 23}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{13, 289, 290, 34}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{13, 291, 49}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{13, 292, 61}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{13, 293, 70}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{14, 294, 15}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{14, 295, 21}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{14, 296, 27}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{14, 297, 37}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{14, 298, 50}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{14, 299, 300, 59}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{14, 301, 84}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{15, 302, 303, 17}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{15, 304, 22}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{15, 305, 306, 54}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{15, 307, 308, 56}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{15, 309, 310, 80}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{16, 311, 23}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{16, 312, 313, 26}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{16, 314, 315, 34}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{16, 316, 317, 42}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{16, 318, 52}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{16, 319, 68}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{17, 320, 321, 22}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{17, 322, 32}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{17, 323, 46}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{17, 324, 57}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{17, 325, 61}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{17, 326, 63}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{17, 327, 328, 88}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{18, 329, 41}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{18, 330, 97}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{19, 331, 28}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{19, 332, 76}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{20, 333, 334, 22}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{20, 335, 24}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{20, 336, 337, 37}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{20, 338, 62}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{20, 339, 65}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{20, 340, 341, 73}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{20, 342, 94}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{21, 343, 27}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{21, 344, 33}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{21, 345, 37}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{21, 346, 347, 42}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{21, 348, 349, 47}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{21, 350, 50}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{22, 351, 352, 24}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{22, 353, 354, 28}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{22, 355, 31}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{22, 356, 357, 80}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{22, 358, 81}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{23, 359, 360, 26}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{23, 361, 362, 34}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{23, 363, 43}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{23, 364, 44}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{24, 365, 34}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{24, 366, 54}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{24, 367, 62}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{24, 368, 66}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{24, 369, 83}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{24, 370, 89}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{25, 371, 29}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{25, 372, 35}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{25, 373, 40}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{25, 374, 67}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{25, 375, 99}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{26, 376, 30}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{26, 377, 34}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{26, 378, 42}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{26, 379, 380, 45}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{26, 381, 66}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{26, 382, 383, 73}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{27, 384, 33}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{27, 385, 50}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{27, 386, 387, 53}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{27, 388, 389, 59}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{28, 390, 55}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{29, 391, 35}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{29, 392, 43}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{29, 393, 44}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{29, 394, 57}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{30, 395, 66}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{30, 396, 72}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{30, 397, 83}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{30, 398, 87}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{31, 399, 48}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{32, 400, 46}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{32, 401, 402, 47}], 0.02261146496815286]}, 
         
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{32, 403, 53}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{32, 404, 71}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{33, 405, 36}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{33, 406, 407, 42}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{33, 408, 48}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{33, 409, 410, 63}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{33, 411, 81}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{34, 412, 42}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{34, 413, 69}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{34, 414, 72}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{34, 415, 92}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{35, 416, 44}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{35, 417, 68}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{35, 418, 78}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{37, 419, 420, 67}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{38, 421, 82}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{39, 422, 96}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{40, 423, 67}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{40, 424, 425, 95}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{41, 426, 427, 46}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{41, 428, 97}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{42, 429, 69}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{42, 430, 92}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{43, 431, 44}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{44, 432, 49}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{45, 433, 434, 64}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{46, 435, 436, 60}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{47, 437, 76}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{48, 438, 439, 62}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{48, 440, 441, 86}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{49, 442, 52}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{49, 443, 75}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{50, 444, 51}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{50, 445, 84}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{50, 446, 96}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{50, 447, 448, 97}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{51, 449, 450, 65}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{51, 451, 84}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{52, 452, 75}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{54, 453, 62}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{54, 454, 455, 80}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{55, 456, 457, 58}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{56, 458, 80}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{57, 459, 59}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{57, 460, 63}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{57, 461, 68}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{57, 462, 99}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{58, 463, 86}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{58, 464, 95}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{59, 465, 63}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{59, 466, 78}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{60, 467, 92}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{62, 468, 66}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{62, 469, 470, 70}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{62, 471, 472, 71}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{62, 473, 72}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{62, 474, 94}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{63, 475, 476, 77}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{63, 477, 78}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{64, 478, 72}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{64, 479, 480, 85}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{65, 481, 69}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{65, 482, 483, 73}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{66, 484, 72}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{67, 485, 75}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{67, 486, 79}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{68, 487, 74}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{70, 488, 71}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{70, 489, 91}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{71, 490, 93}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{73, 491, 77}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{73, 492, 493, 94}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{74, 494, 79}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{77, 495, 85}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{77, 496, 90}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{78, 497, 498, 94}], 
           0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{83, 499, 87}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{84, 500, 100}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{85, 501, 90}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{85, 502, 98}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{86, 503, 95}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{86, 504, 98}], 0.02261146496815286]}, 
         {Arrowheads[0.], 
          ArrowBox[BezierCurveBox[{87, 505, 88}], 0.02261146496815286]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
         DiskBox[3, 0.02261146496815286], DiskBox[4, 0.02261146496815286], 
         DiskBox[5, 0.02261146496815286], DiskBox[6, 0.02261146496815286], 
         DiskBox[7, 0.02261146496815286], DiskBox[8, 0.02261146496815286], 
         DiskBox[9, 0.02261146496815286], DiskBox[10, 0.02261146496815286], 
         DiskBox[11, 0.02261146496815286], DiskBox[12, 0.02261146496815286], 
         DiskBox[13, 0.02261146496815286], DiskBox[14, 0.02261146496815286], 
         DiskBox[15, 0.02261146496815286], DiskBox[16, 0.02261146496815286], 
         DiskBox[17, 0.02261146496815286], DiskBox[18, 0.02261146496815286], 
         DiskBox[19, 0.02261146496815286], DiskBox[20, 0.02261146496815286], 
         DiskBox[21, 0.02261146496815286], DiskBox[22, 0.02261146496815286], 
         DiskBox[23, 0.02261146496815286], DiskBox[24, 0.02261146496815286], 
         DiskBox[25, 0.02261146496815286], DiskBox[26, 0.02261146496815286], 
         DiskBox[27, 0.02261146496815286], DiskBox[28, 0.02261146496815286], 
         DiskBox[29, 0.02261146496815286], DiskBox[30, 0.02261146496815286], 
         DiskBox[31, 0.02261146496815286], DiskBox[32, 0.02261146496815286], 
         DiskBox[33, 0.02261146496815286], DiskBox[34, 0.02261146496815286], 
         DiskBox[35, 0.02261146496815286], DiskBox[36, 0.02261146496815286], 
         DiskBox[37, 0.02261146496815286], DiskBox[38, 0.02261146496815286], 
         DiskBox[39, 0.02261146496815286], DiskBox[40, 0.02261146496815286], 
         DiskBox[41, 0.02261146496815286], DiskBox[42, 0.02261146496815286], 
         DiskBox[43, 0.02261146496815286], DiskBox[44, 0.02261146496815286], 
         DiskBox[45, 0.02261146496815286], DiskBox[46, 0.02261146496815286], 
         DiskBox[47, 0.02261146496815286], DiskBox[48, 0.02261146496815286], 
         DiskBox[49, 0.02261146496815286], DiskBox[50, 0.02261146496815286], 
         DiskBox[51, 0.02261146496815286], DiskBox[52, 0.02261146496815286], 
         DiskBox[53, 0.02261146496815286], DiskBox[54, 0.02261146496815286], 
         DiskBox[55, 0.02261146496815286], DiskBox[56, 0.02261146496815286], 
         DiskBox[57, 0.02261146496815286], DiskBox[58, 0.02261146496815286], 
         DiskBox[59, 0.02261146496815286], DiskBox[60, 0.02261146496815286], 
         DiskBox[61, 0.02261146496815286], DiskBox[62, 0.02261146496815286], 
         DiskBox[63, 0.02261146496815286], DiskBox[64, 0.02261146496815286], 
         DiskBox[65, 0.02261146496815286], DiskBox[66, 0.02261146496815286], 
         DiskBox[67, 0.02261146496815286], DiskBox[68, 0.02261146496815286], 
         DiskBox[69, 0.02261146496815286], DiskBox[70, 0.02261146496815286], 
         DiskBox[71, 0.02261146496815286], DiskBox[72, 0.02261146496815286], 
         DiskBox[73, 0.02261146496815286], DiskBox[74, 0.02261146496815286], 
         DiskBox[75, 0.02261146496815286], DiskBox[76, 0.02261146496815286], 
         DiskBox[77, 0.02261146496815286], DiskBox[78, 0.02261146496815286], 
         DiskBox[79, 0.02261146496815286], DiskBox[80, 0.02261146496815286], 
         DiskBox[81, 0.02261146496815286], DiskBox[82, 0.02261146496815286], 
         DiskBox[83, 0.02261146496815286], DiskBox[84, 0.02261146496815286], 
         DiskBox[85, 0.02261146496815286], DiskBox[86, 0.02261146496815286], 
         DiskBox[87, 0.02261146496815286], DiskBox[88, 0.02261146496815286], 
         DiskBox[89, 0.02261146496815286], DiskBox[90, 0.02261146496815286], 
         DiskBox[91, 0.02261146496815286], DiskBox[92, 0.02261146496815286], 
         DiskBox[93, 0.02261146496815286], DiskBox[94, 0.02261146496815286], 
         DiskBox[95, 0.02261146496815286], DiskBox[96, 0.02261146496815286], 
         DiskBox[97, 0.02261146496815286], DiskBox[98, 0.02261146496815286], 
         DiskBox[99, 0.02261146496815286], 
         DiskBox[100, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Random bipartite graphs", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGBipartiteGameGNM"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGBipartiteGameGNM[n1, n2, m] generates a bipartite random \
graph with n1 and n2 vertices in the two partitions and m edges.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info343666170812-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGBipartiteGameGNP"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGBipartiteGameGNP[n1, n2, p] generates a bipartite Bernoulli \
random graph with n1 and n2 vertices in the two partitions and connection \
probability p.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info353666170812-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGBipartiteGameGNP", "[", 
  RowBox[{"5", ",", "5", ",", "0.5", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{2, 6}, {5, 6}, {1, 7}, {2, 7}, {4, 7}, {5, 7}, {1, 8}, {3, 8}, {
       4, 8}, {5, 9}, {1, 10}, {5, 10}}}, {
      GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "BipartiteEmbedding"}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0., -0.40901699437494754`}, {
          1.0225424859373689`, -0.20450849718747377`}}, 
          0.014153898559956357`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., -0.40901699437494754`}, {1.0225424859373689`, 0.}}, 
          0.014153898559956357`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., -0.40901699437494754`}, {1.0225424859373689`, 
          0.40901699437494754`}}, 0.014153898559956357`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., -0.20450849718747377`}, {
          1.0225424859373689`, -0.40901699437494754`}}, 
          0.014153898559956357`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., -0.20450849718747377`}, {
          1.0225424859373689`, -0.20450849718747377`}}, 
          0.014153898559956357`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {1.0225424859373689`, 0.}}, 
          0.014153898559956357`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.20450849718747377`}, {
          1.0225424859373689`, -0.20450849718747377`}}, 
          0.014153898559956357`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.20450849718747377`}, {1.0225424859373689`, 0.}}, 
          0.014153898559956357`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.40901699437494754`}, {
          1.0225424859373689`, -0.40901699437494754`}}, 
          0.014153898559956357`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.40901699437494754`}, {
          1.0225424859373689`, -0.20450849718747377`}}, 
          0.014153898559956357`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.40901699437494754`}, {1.0225424859373689`, 
          0.20450849718747377`}}, 0.014153898559956357`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.40901699437494754`}, {1.0225424859373689`, 
          0.40901699437494754`}}, 0.014153898559956357`]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., -0.40901699437494754`}, 0.014153898559956357`], 
         InsetBox["1", 
          Offset[{2, 2}, {0.014153898559956357`, -0.3948630958149912}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., -0.20450849718747377`}, 0.014153898559956357`], 
         InsetBox["2", 
          Offset[{2, 2}, {0.014153898559956357`, -0.1903545986275174}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.014153898559956357`], 
         InsetBox["3", 
          Offset[{2, 2}, {0.014153898559956357`, 0.014153898559956357`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.20450849718747377`}, 0.014153898559956357`], 
         InsetBox["4", 
          Offset[{2, 2}, {0.014153898559956357`, 0.21866239574743013`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.40901699437494754`}, 0.014153898559956357`], 
         InsetBox["5", 
          Offset[{2, 2}, {0.014153898559956357`, 0.4231708929349039}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0225424859373689`, -0.40901699437494754`}, 
          0.014153898559956357`], 
         InsetBox["6", 
          Offset[{2, 2}, {1.0366963844973252`, -0.3948630958149912}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0225424859373689`, -0.20450849718747377`}, 
          0.014153898559956357`], 
         InsetBox["7", 
          Offset[{2, 2}, {1.0366963844973252`, -0.1903545986275174}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0225424859373689`, 0.}, 0.014153898559956357`], 
         InsetBox["8", 
          Offset[{2, 2}, {1.0366963844973252`, 0.014153898559956357`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0225424859373689`, 0.20450849718747377`}, 
          0.014153898559956357`], 
         InsetBox["9", 
          Offset[{2, 2}, {1.0366963844973252`, 0.21866239574743013`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0225424859373689`, 0.40901699437494754`}, 
          0.014153898559956357`], 
         InsetBox["10", 
          Offset[{2, 2}, {1.0366963844973252`, 0.4231708929349039}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Structural properties", "Section"],

Cell[CellGroupData[{

Cell["Centrality measures", "Subsection"],

Cell[CellGroupData[{

Cell["Betweenness", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGBetweenness"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGBetweenness[graph] gives a list of betweenness centralities \
for the vertices of graph. Available Method options: {\\\"Precise\\\", \
\\\"Fast\\\"}.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info373666170812-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGBetweennessEstimate"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGBetweennessEstimate[graph, cutoff] estimates vertex \
betweenness by considering only paths of at most length cutoff. Available \
Method options: {\\\"Precise\\\", \\\"Fast\\\"}.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info383666170813-3785256"]
}, Open  ]],

Cell["Weighted graphs are supported.", "Text"],

Cell[TextData[{
 "Available ",
 Cell[BoxData[
  FormBox["Method", TraditionalForm]]],
 " options:"
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Precise\>\"", TraditionalForm]]],
 " is accurate, but slow. This is the default."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Fast\>\"", TraditionalForm]]],
 " is fast, but may give incorrect results for large graphs with lots of \
shortest paths."
}], "Item"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"30", ",", "30"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Max", "@", 
   RowBox[{"IGBetweenness", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Precise\>\""}]}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.27196`", ",", "18980.52414303636`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Max", "@", 
   RowBox[{"IGBetweenness", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Fast\>\""}]}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.039658`", ",", "18980.524324323203`"}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "For this large grid graph, the ",
 Cell[BoxData[
  FormBox["\"\<Fast\>\"", TraditionalForm]]],
 " method no longer gives accurate results:"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"40", ",", "40"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Max", "@", 
   RowBox[{"IGBetweenness", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Precise\>\""}]}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.980722`", ",", "45701.7295998485`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Max", "@", 
   RowBox[{"IGBetweenness", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Fast\>\""}]}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.11762`", ",", "78169.68917727846`"}], "}"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Closeness", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGCloseness"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGCloseness[graph] gives a list of closeness centralities for \
the vertices of graph.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info453666170814-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGClosenessEstimate"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGClosenessEstimate[graph, cutoff] estimates closeness \
centrality by considering only paths of at most length cutoff.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info463666170814-3785256"]
}, Open  ]],

Cell["Weighted graphs are supported.", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["PageRank", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGPageRank"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGPageRank[graph] gives a list of PageRank centralities for \
the vertices of the graph.\\nIGPageRank[graph, damping] gives a list of \
PageRank centralities for the vertices of the graph using damping factor \
damping.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info473666170815-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGPersonalizedPageRank"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGPersonalizedPageRank[graph, reset] gives a list of \
personalized PageRank centralities for the vertices of the \
graph.\\nIGPersonalizedPageRank[graph, reset, damping] gives a list of \
personalized PageRank centralities for the vertices of the graph using \
damping factor damping.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info483666170815-3785256"]
}, Open  ]],

Cell["Weighted graphs are supported.", "Text"],

Cell["The default damping factor is 0.85.", "Text"],

Cell[TextData[{
 "The following ",
 Cell[BoxData[
  FormBox["Method", TraditionalForm]]],
 " options are available:"
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<PowerIteration\>\"", TraditionalForm]]],
 ", deprecated, not recommended. Takes suboptions ",
 Cell[BoxData[
  FormBox["\"\<MaxIterations\>\"", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["\"\<Epsilon\>\"", TraditionalForm]]],
 "."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Arnoldi\>\"", TraditionalForm]]],
 " uses ARPACK"
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<PRPACK\>\"", TraditionalForm]]],
 " uses ",
 ButtonBox["PRPACK",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/DavidKurokawa/prpack/"], None},
  ButtonNote->"https://github.com/DavidKurokawa/prpack/"],
 ". It is the default."
}], "Item"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Eigenvector centrality", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGEigenvectorCentrality"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGEigenvectorCentrality[graph]\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info493666170815-3785256"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kleinberg\[CloseCurlyQuote]s hub and authority scores", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGHubScore"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGHubScore[graph] returns Kleinberg's hub score for each \
vertex.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info503666170815-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGAuthorityScore"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGAuthorityScore[graph] returns Kleinberg's authority score \
for each vertex.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info513666170815-3785256"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Burt\[CloseCurlyQuote]s constraint score", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGConstraintScore"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGConstraintScore[graph] returns Burt's constraint score for \
each vertex.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info523666170815-3785256"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Topological sorting and acyclic graphs", "Subsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGFeedbackArcSet", "[", "]"}], TraditionalForm]]],
 " returns a set of edges the removal of which makes the graph acyclic. With ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\"\<Exact\>\"", "\[Rule]", "True"}], TraditionalForm]]],
 " it finds a minimal feedback arc set. With ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\"\<Exact\>\"", "\[Rule]", "False"}], TraditionalForm]]],
 " it finds a feedback arc set (not necessarily minimal) using the heuristic \
of Eades, Lin and Smyth (1993)."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Chordal graphs", "Subsection"],

Cell["\<\
The maximum cardinality search algorithm visits the vertices of the graph in \
such an order so that every time the vertex with the most already visited \
neighbors is visited next. The visiting order is animated below:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
        Null, SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 7, 9, 14, 15, 15, 16, 16, 17, 17, 17}, {{2}, {3}, {4}, {
            5}, {6}, {9}, {10}, {3}, {6}, {4}, {5}, {7}, {8}, {10}, {8}, {
            7}, {9}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1}}]}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1.701679475037652, 0.8260879357521795}, {
         1.0129069790428793`, 0.0014765014337609905`}, {1.302137880167063, 
         0.82550322495179}, {1.9891395817563833`, 0.}, {1.9190652882622004`, 
         1.7282901125912526`}, {0.4543054799878108, 0.3626527729689047}, {0., 
         0.9265105414569058}, {2.550199662950018, 0.3612980310766506}, {
         3.004367978190639, 0.926728084419895}, {1.0848780974451706`, 
         1.7273098555045692`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 5}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 6}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 9}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 10}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{3, 5}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{3, 7}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{3, 8}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{3, 10}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{4, 8}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.030270836788843694`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.030270836788843694`], 
           DiskBox[2, 0.030270836788843694`], 
           DiskBox[3, 0.030270836788843694`], 
           DiskBox[4, 0.030270836788843694`], 
           DiskBox[5, 0.030270836788843694`], 
           DiskBox[6, 0.030270836788843694`], 
           DiskBox[7, 0.030270836788843694`], 
           DiskBox[8, 0.030270836788843694`], 
           DiskBox[9, 0.030270836788843694`], 
           DiskBox[10, 0.030270836788843694`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seq", "=", 
  RowBox[{"InversePermutation", "@", 
   RowBox[{"IGMaximumCardinalitySearch", "[", "g", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7", ",", "6", ",", "2", ",", "9", ",", "8", ",", "4", ",", "5", ",", "3", 
   ",", "10", ",", "1"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HighlightGraph", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{"g", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Take", "[", 
       RowBox[{"seq", ",", 
        RowBox[{"-", "i"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], "//", "ListAnimate"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Clustering coefficient", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IG*ClusteringCoefficient"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGAverageLocalClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info563666170816-3785256", {
            "IGAverageLocalClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLocalClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info563666170816-3785256", {
            "IGLocalClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGGlobalClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info563666170816-3785256", {
            "IGGlobalClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGWeightedClusteringCoefficient",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info563666170816-3785256", {
            "IGWeightedClusteringCoefficient", "IGraphM`"}},
          ButtonNote->"IGraphM`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.475]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell["Clustering coefficient calculations ignore edge directions.", "Text"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["IGWeightedClusteringCoefficient", TraditionalForm]]],
 " computes the weighted local clustering coefficient, as defined by A. \
Barrat et al. (2004) ",
 ButtonBox["http://arxiv.org/abs/cond-mat/0311416",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://arxiv.org/abs/cond-mat/0311416"], None},
  ButtonNote->"http://arxiv.org/abs/cond-mat/0311416"]
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Shortest paths", "Subsection"],

Cell[CellGroupData[{

Cell["IGDistanceMatrix", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGDistanceMatrix"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGDistanceMatrix[graph] computes the shortest path length \
between each vertex pair in graph. Available Method options: \
{\\\"Unweighted\\\", \\\"Dijkstra\\\", \\\"BellmanFord\\\", \\\"Johnson\\\"}.\
\\nIGDistanceMatrix[graph, fromVertices] computes the shortest path lengths \
between from the given vertices to each vertex in \
graph.\\nIGDistanceMatrix[graph, fromVertices, toVertices] computes the \
shortest path lengths between the given vertices in graph.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info573666170816-3785256"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox["IGDistanceMatrix", TraditionalForm]]],
 " takes the following ",
 Cell[BoxData[
  FormBox["Method", TraditionalForm]]],
 " options:"
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["Automatic", TraditionalForm]]],
 " selects a method automatically. As of version 0.2.0, ",
 Cell[BoxData[
  FormBox["\"\<Unweighted\>\"", TraditionalForm]]],
 " is selected for unweighted graphs, ",
 Cell[BoxData[
  FormBox["\"\<Dijkstra\>\"", TraditionalForm]]],
 " for weighted graphs with only positive weights, and ",
 Cell[BoxData[
  FormBox["\"\<Johnson\>\"", TraditionalForm]]],
 " otherwise."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Unweighted\>\"", TraditionalForm]]],
 " ignores weights"
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Dijkstra\>\"", TraditionalForm]]],
 " uses Dijkstra\[CloseCurlyQuote]s algorithm. All weights must be \
non-negative."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<BellmanFord\>\"", TraditionalForm]]],
 " uses the Bellman\[Dash]Ford algorithm. Negative weights are supported but \
all cycles must have a non-negative total weight."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Johnson\>\"", TraditionalForm]]],
 " uses the Johnson algorithm. Negative weights are supported but all cycles \
must have a non-negative total weight."
}], "Item"]
}, Open  ]],

Cell[TextData[{
 "The igraph C core may override explicit method settings when appropriate. \
For example, if the graph is not weighted, it always uses ",
 Cell[BoxData[
  FormBox["\"\<Unweighted\>\"", TraditionalForm]]],
 "."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGDistanceCounts", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGDistanceCounts"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGDistanceCounts[graph] computes a histogram of unweighted \
shortest path lengths between all vertex pairs. The kth element of the result \
is the count of shortest paths of length k.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info583666170816-3785256"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGDistanceCounts", "[", "]"}], TraditionalForm]]],
 " counts all-pair ",
 StyleBox["unweighted",
  FontSlant->"Italic"],
 " shortest path lengths in the graph. For weighted path lengths, or to \
restrict the computation to certain start and end vertex sets, use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGDistanceHistogram", "[", "]"}], TraditionalForm]]],
 "."
}], "Text"],

Cell[TextData[{
 "Compute how the shortest path length distribution changes as we rewire a \
grid graph ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 " times."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Normalize", "[", 
      RowBox[{
       RowBox[{"IGDistanceCounts", "@", 
        RowBox[{"IGRewire", "[", 
         RowBox[{
          RowBox[{"GridGraph", "[", 
           RowBox[{"{", 
            RowBox[{"50", ",", "50"}], "}"}], "]"}], ",", "k"}], "]"}]}], ",",
        "Total"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"StringTemplate", "[", "\"\<rewiring steps: ``\>\"", "]"}], 
       "[", "k", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "5", ",", "10", ",", "20", ",", "50", ",", "100"}], 
      "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxdlXtQlFUYhxesEbxhE5Gw3AQSAlu5iCjI8uO6rtz2yi02CESUBBKEFFE+
rq6ALEphGiuY8IelEuFQqSBhmDpomo6t5DTTDKQst51ECBkhm33PP+18O7vP
9+wz880575ldnZYryzDl8XjbXr3/+zS+DEGd1txfUZ2JQXQDRQt976QIdhKb
QTr0YKS3JI94JQ6dq7b1cd1LbIkfJW+ae9cdIF6F9tar1y8mlRLbIvXQ5LW+
O+XEjjhdu3r0c+cqYie0GVQeRxLVxC44OXku//nH1cRr8E2/VadrVi2xG1a1
n9HtC68jdofJ1PmRFpN64rWIeeh8U3+PsQC1TX5l/Q1HiT1xf1v2smTRMWIv
BESLUx6NMfbG7/mxeTsqGoh9MDC9KHD9ik+J12PNlL4rs5qxL3jV6t/em2W8
AXsepjZ2JH1G7IfjMzN6u3bGG1Gx9NcB7TTjTZB65vskezUS+8OqIuXVxTgA
4y78bJQy3owxT/d1VxoZB8Lj+kqFUwtjIa6Zyu9rtYyDMPBaQWuihjGg0r/o
4QqIOUBzb4eNUMJ8MIp0IReuODAfDF+75XmuQ+x5Q6DrjlSd1RJzISjWlWVm
RzEfik01G9SnDLQeXOj/1isMyV4uo8+smQ/D36nbbXOa2XqHw+S0b4gJn5gL
R4uFlUJXy/YnAk9v1Yjtn9N+chEwGGxs5uVsf0W42yzq/vIs7T8nQuiohzJn
TEN+C6YdLTsH8ml+uC3Q20rKu0bYfIkRy396sTSmhrwYxvNxmPxWiLRf66rd
aF65rRjcmdY0fJ7NcyQCQ5tCFodWko+EcFzy+MQTNv9RaPfYWyT6oox8FFL6
zAWXVOy8RMOh4OXiJgFHPhpFFo3eAv5B8jGwKn4w/NXUfvIx6PiuLdJ0ZB/5
WOjFs5XqmU/IxyLtUk/XUYdC8hJ8Xz+8sDt1j5EhQZ1CVX7gBzrfnARlR95K
N3PfbeReCbKq5kpvp+VSL0XdiyUHH2l3US9Fe9XG+ceLsqiXwsI/PYJryKRe
ijHnrJMfRWZQL4NavlYock+nXgYnnbrgsuBD6mV4Vtpt9ueFD6iXodnfRmUX
8T71ctz4Zzi32DGBejnGB/+4EROgpF6O+oW+yaEGGfVyrKuU7NK4SqhX4Lhl
TW3gk0jqFbiV1LvkZ72IegVmrbvTkhVh1CvgpHl55pR9MPVKaCbmLqvUm6lX
4q59AZJL/KhXwvzdlKmit32oV6JgRcb4TI2A+jjc3P7LQAjPjfo4vBE78VNS
oRP1cThRmOGq7uBTH4c5IX/idRdL6uPR0HO1M8d7GfXxWF7ifls8YEp9PD3P
jNDYx6N1/s6xbwf1RuYlEA8aGQnQzy+16Nvfb2SOcRv93sD+F3jMs6//Aj/1
vYI=
      "], {{{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[
          PolygonBox[{{1, 99, 100, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88,
            87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 
           71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55,
            54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
           38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22,
            21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 
           3, 2}}]]}, {}, {}}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.011000000000000001`], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98}]}}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"rewiring steps: 0\"", TraditionalForm],
    PlotRange->{{0., 98.}, {0, 0.022095238095238095`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJw103tIU1EcwPFlSzRLlw9oMXSK1XywfKTLObff5qab2yxGihYmTbS0fGAv
tcxpmulMtNRM06YlVipa08AIo5VkkD18ocQSKXRpklJWYq4H/s6By72f+/3j
nHsux1Wdrkq0oFAo/H/X//vaWBDo6ZpphT5WgC8g+3XUeJAsGW0Fg59D73w0
ZKJpYO4aqHZ5n4V2hDdF4oupq+fRWyFeZphSNBagGTCfvdRbMlyEZoINe2TL
LfcStBucpq+v2VtbhnaH3z26RVfbCvQOyF/ps3Q2VqJZYK1dHnXsuYr2BONK
TBSrshrtDbeZObKizGtoNnSr2xwNsdfRPjDM5WzvEtejfWFj2jNeimcD2g/M
gwc5AoebaH/4mmywdsjVoXdDXXR8iiitCR0ALbFDKV7ezehAoA5d2dZ2mJgD
H0QGrkJNvAdmVqw2PckiDoIH+d/cZwuJufClQOintycOhsD+ziqeiczHA2Gn
forSSRwCrZP0DXUJxHwIsjgeV25HLIBPeX2PIx+S9QOEZEgkE/vQGgC3OF4Z
/T75XiFwfQsnVccasQvhnkmV6iS9gV0Emucs9stfuJ8aEZh4y5ziPLLfoaAf
nzR1nanCHgpRr3445+ST/yeGwUVt4YT4MnYxeDQn1CstL2GXgL24YlRfcwG7
BJrbX1A5q3nYw+Bp6Tnd/pls7GEQQFMax2pPYg8H6uZHh+aG0rGHQ3F7KcN/
51HsUnBq6W3w8FJjl8KR8rDlJd0B7DKQM5ndXnMq7DIIbo2h1bnIsEdAko/P
XXOHAHsErMsdEBk7/LHLoZ9G/X5CzsIuh8oxIycpjoFdARn8pqXpKVvsCjhl
mzj/U2vmr3UldDRGF4ywZ9esUcKuP1LtO8Zb7JEwa7axM5ytRi+Qc0shnTz9
BYV4Ce0=
      "], {{{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[
          PolygonBox[{{1, 61, 62, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 
           49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33,
            32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
           16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
           2}}]]}, {}, {}}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.011000000000000001`], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60}]}}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"rewiring steps: 5\"", TraditionalForm],
    PlotRange->{{0., 60.}, {0, 0.0361703081232493}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJw1038s1HEcx/HL+qOcX5W1qCzWxCnD3YXovI674yQiPyq1fnC2aqJS0dk6
do5Qug4XUhF3bZfZ0losY9ooq9hFjK2lH5e7qYz8Qc6q3fv73b77fh/f52ff
7/fz/eF5KidJZsdiscL/rf+3tmU2osNNYYrrOBxBB3ClcbrcNfM0eQ3Mod4F
nfYXyS743ZwmDdYXkF1ROW7Xoz6kIG+C4agshb1DSd6C7rIJ4VJ8GXkbNg8I
h4yvK8leqJ3nPhgcu0XeDsXyUGF9oYbsjclfayf+xNeSffApWSvdmlhH5qDd
qVkpunqXvBPW/CLLQu99sj/Sw85nehxpIgcgycr1OTPeTA4Eqyt5YFHSQg7C
skU9bG5sJXPBr0i9ULNLR+ahc+jl0xf9jPnIKdJxj4v15N0oOZfdHlLDOBhn
W98XGEsYh2AkD25+PMahuNwz//WmjDnfHljmHnu4NzDXD8Or6utidRtzf+Eo
1vPNq9IekvfCcWa9r7OBmZ8ApvifAQkGZv4RSM9TBU5xmOcDWLNmqkdXtDYr
gOXnGxxj3KqpC3HD2vvjs5reh0KIYX1V3R2/CuqRyE4PDgr9UEI9EqNtIVpf
ZRH1KAwc0Mg13+XUo5CiEjj4mS5RF4FfGqSsn8mlLsKsUZPobWW+NzFY/Qdd
l7ozqIvRJ1od/Sz/GHUJZC7lVSdGUqhL8KVdq8owJVCPxqTuo0H1SEI9GrmC
pgXTlIB6DJZKdT1ePB71GLTdSy0e8edQl8KzwSHLnedJXYqxQfbc4vRG6rGQ
99ufXMd2oh4Lx2uct9I3dtT3wbLCdu6TLwhsnfE3m1lxNN5IPQ4tK+9uP5no
or6fxteQZ5n/ksV0Zu8vV8sKIg==
      "], {{{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[
          PolygonBox[{{1, 59, 60, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 
           47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31,
            30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 
           14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
           2}}]]}, {}, {}}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.011000000000000001`], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58}]}}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"rewiring steps: 10\"", TraditionalForm],
    PlotRange->{{0., 58.}, {0, 0.046060344137655064`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJw102tIU2Ecx/FRTh1jZiXRcF62wtwo897SdL+5iyMLwpmRhoGaJhFNohcx
ymUYoc1NydRBWpqzOax0UV5ezCa+KYuEhCaNsEhwOphQ0W1bxf7ngcN5PucL
z8M5h0dYfaH0zCYWi5X17/p/Dw+/zME3rBxxnJTRA+Q02KddXQ3kaGhf10v7
Wi+SY+Fip3Se26Ynx2HS6R/2ua+Rd0JjXlPkeW6QBTi1/a5IMHuLnIzFWl7D
U08HWYQP0pzoxm9d5N142RusnpyykFNQf3w5EMm+R07F0eaR5MPeAbIE9ysj
5vs5VvJexK64U2t5NnIahtMLlt/P2MnpUI22Vyw6RskZaH6S1jMf85icifK4
q2U17xhn4blCa0o0M85GFN+Wq7M/IufAGdltN8Uz6+WiynCJU7eZ2e8ARr6Y
ds02PiRLYZqwSX3GIfJBnMiXJ6++Yt4nD4lKn2vtez85H036QEhbynyPQwgs
iBLmrLfJBRjb+uOYNcJMLgRvo3t6vPwmWYZ4q/fT6Snm/wB/2DXiCdblsA3A
s6RVyb6POupyWAZjJBXOOupyZLcYW3k9VdSL8OttRodMWUa9CHcsned/b5RQ
V+C6ej23q0VBXYEBty6Kw82nrgTvp2i97UUmdSXGvgorBz+LqauQoJIbS5qE
1FXwtM/sMV3ZQV2NPrU4qbeSS12Ns338yDljqDDci7E/pGlbEPjDNhTjQfBN
5/jSEnUNvEHuFpd+jjrjIep+5hywmM5M/wKyRNik
      "], {{{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[
          PolygonBox[{{1, 50, 51, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
           38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22,
            21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 
           3, 2}}]]}, {}, {}}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
          49}]}}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"rewiring steps: 20\"", TraditionalForm],
    PlotRange->{{0., 49.}, {0, 0.062167266906762705`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQEf7DdLNjzz2RxpDxVwOLfvj9duhSwon8PhggDL
TbN/JVC+gEP29ozzn9zroXwRhxKRvgr17jYoX8LBOVWlZMPDfihfxmEmyw8L
efVpUL6Cw5Xb63dP8ZgH5Ss5bCs3mzzHZgmUr+JglvXn1fvEVVC+moPgm0UC
bxZtgPI1HM4WXHF5ILsFytdy4Mnqv/nZazuUr+NQn5RmOrN0J5Sv52Dn3rHk
w38Y38Ah5WHYBb/SHVC+oQNzVEt0gPpWKN/I4fpaDaV1T2H2GTuwXBdf68e7
Eso3cVjQEbvA1WchlG/q8Nku+tDnuTD/mTk8O3r5utD/bijf3OF9aaHGc40G
KN/CYd2Gcx0GBYVQvqXDiVsLf7dvSoDyrRwEd8hvEE3wgfKtHbgeXFaKYzeG
8m0cBKL/tl3rFoLybR0y5kmyHe19bwfh2zno//fovihzwA4WvwwowM4BxgIA
yyyFEg==
      "], {{{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[
          PolygonBox[{{1, 31, 32, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 
           19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
           2}}]]}, {}, {}}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}]}}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"rewiring steps: 50\"", TraditionalForm],
    PlotRange->{{0., 30.}, {0, 0.10156158463385354`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQEf7DdLNjzz2RxpDxVwUNq9qX4HbzaUz+Fw0f9R
b2NKOZQv4HDyDvNCQ7lmKF/EIe+LygyX/D4oX8KhRrngnvGJ6VC+jEMCzzM9
FqtFUL6CQ/Kmy48EvFdD+UoOMba/FeJWb4byVRz2715pcnL+LihfzeHZhuc6
V4sPQPkaDjoSGuGSMoegfC2H6TzZx+96HYTydRxWMByUt7TbA+XrOehcuCrE
PxFmvoHD1YzG1tsvl0H5hg6/fXpCtZdOg/KNHFLX9HLInm6C8o0dzus8W97I
kAXlmzj80g3ZVSfhB+WbOizmuhei90ELyjdz+Dxv8r/H51mgfHMHuf2Wa3pL
LtpB+BYOr/5x8x+qnmoHC38GFGDhAGMBAPP3Z8w=
      "], {{{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[
          PolygonBox[{{1, 25, 26, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
           13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}]]}, {}, {}}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24}]}}}], {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"rewiring steps: 100\"", TraditionalForm],
    PlotRange->{{0., 24.}, {0, 0.1414825130052021}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IGDistanceHistogram", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGDistanceHistogram"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGDistanceHistogram[graph, binsize] computes a histogram of \
weighted all-pair shortest path lengths in graph with the given bin size. In \
case of undirected graphs, path lengths are double counted. Available Method \
options: {\\\"Dijkstra\\\", \
\\\"BellmanFord\\\"}.\\nIGDistanceHistogram[graph, binsize, from] computes a \
histogram of weighted shortest path lengths in graph for the given starting \
vertices and bin size.\\nIGDistanceHistogram[graph, binsize, from, to] \
computes a histogram of weighted shortest path lengths in graph for the given \
starting and ending vertices and bin size.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info603666170818-3785256"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGDistanceHistogram", "[", "]"}], TraditionalForm]]],
 " computes the weighted shortest path length histogram between the specified \
start and end vertex sets. The start and end vertex sets do not need to be \
the same. Note that if the graph is undirected, path lengths between ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]]],
 " will be double counted (from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"s", "\[Rule]", "t"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "\[Rule]", "s"}], TraditionalForm]]],
 ") if ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]]],
 " appear both in the starting and ending vertex sets."
}], "Text"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGDistanceHistogram", "[", "]"}], TraditionalForm]]],
 " is useful when the result of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGDistanceMatrix", "[", "]"}], TraditionalForm]]],
 " (or ",
 Cell[BoxData[
  FormBox["GraphDistanceMatrix", TraditionalForm]]],
 ") does not fit in memory."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGAveragePathLength", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGAveragePathLength"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGAveragePathLength[graph] returns the average of all-pair \
unweighted shortest path lengths of the graph.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info613666170818-3785256"]
}, Open  ]],

Cell["\<\
If the graph is unconnected, the average of the shortest path lengths within \
the components will be returned.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGGirth", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGGirth"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGGirth[graph] returns the length of the shortest cycle of the \
graph. The graph is treated as undirected, self-loops and multi-edges are \
ignored.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info623666170818-3785256"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IGDiameter and IGFindDiameter", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGDiameter"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGDiameter[graph] computes the diameter of graph. Available \
Method options: {\\\"Unweighted\\\", \\\"Dijkstra\\\"}.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info633666170818-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGFindDiameter"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGFindDiameter[graph] returns a longest shortest path in \
graph, i.e. a shortest path with length equal to the graph diameter. \
Available Method options: {\\\"Unweighted\\\", \\\"Dijkstra\\\"}.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info643666170818-3785256"]
}, Open  ]],

Cell["The available options are:", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["Method", TraditionalForm]]],
 " can take the values ",
 Cell[BoxData[
  FormBox["\"\<Unweighted\>\"", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\"\<Dijkstra\>\"", TraditionalForm]]],
 " or ",
 Cell[BoxData[
  FormBox["Automatic", TraditionalForm]]],
 ". ",
 Cell[BoxData[
  FormBox["\"\<Dijkstra\>\"", TraditionalForm]]],
 " takes edge weights into account. ",
 Cell[BoxData[
  FormBox["Automatic", TraditionalForm]]],
 " chooses based on whether the graph is weighted."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<ByComponents\>\"", TraditionalForm]]],
 " controls how unconnected graphs are handled. If ",
 Cell[BoxData[
  FormBox["False", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["Infinity", TraditionalForm]]],
 " is returned. If ",
 Cell[BoxData[
  FormBox["True", TraditionalForm]]],
 ", the largest diameter within a component is returned."
}], "Item"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Bipartite graphs", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGBipartiteQ"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGBipartiteQ[graph] tests if graph is bipartite.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info653666170818-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGBipartitePartitions"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGBipartitePartitions[graph] partitions the vertices of a \
bipartite graph.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info663666170819-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"IGBipartiteGameGNM", "[", 
   RowBox[{"5", ",", "5", ",", "10", ",", 
    RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
      Null, {{2, 6}, {3, 6}, {5, 6}, {2, 7}, {3, 7}, {5, 7}, {2, 8}, {5, 8}, {
       2, 9}, {4, 10}}}, {
      GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "BipartiteEmbedding"}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0.11634663779512877`, -0.7563749617533747}, {
          1.1403919561283224`, -0.8843806265450239}}, 0.016072210673220594`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.11634663779512877`, -0.7563749617533747}, {
          1.1403919561283224`, -0.6283692969617255}}, 0.016072210673220594`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.11634663779512877`, -0.7563749617533747}, {
          1.1403919561283224`, -0.3723579673784271}}, 0.016072210673220594`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.11634663779512877`, -0.7563749617533747}, {
          1.1403919561283224`, -0.11634663779512866`}}, 
          0.016072210673220594`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.11634663779512877`, -0.5003636321700763}, {
          1.1403919561283224`, -0.8843806265450239}}, 0.016072210673220594`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.11634663779512877`, -0.5003636321700763}, {
          1.1403919561283224`, -0.6283692969617255}}, 0.016072210673220594`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.11634663779512877`, -1.1170739021352813`}, {
          1.1163466377951288`, -1.1170739021352813`}}, 
          0.016072210673220594`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.11634663779512877`, -0.24435230258677787`}, {
          1.1403919561283224`, -0.8843806265450239}}, 0.016072210673220594`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.11634663779512877`, -0.24435230258677787`}, {
          1.1403919561283224`, -0.6283692969617255}}, 0.016072210673220594`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.11634663779512877`, -0.24435230258677787`}, {
          1.1403919561283224`, -0.3723579673784271}}, 
          0.016072210673220594`]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.11634663779512877`, -1.3497671777255387`}, 
          0.016072210673220594`], 
         InsetBox["1", 
          Offset[{2, 2}, {0.13241884846834936`, -1.3336949670523182`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.11634663779512877`, -0.7563749617533747}, 
          0.016072210673220594`], 
         InsetBox["2", 
          Offset[{2, 2}, {0.13241884846834936`, -0.7403027510801541}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.11634663779512877`, -0.5003636321700763}, 
          0.016072210673220594`], 
         InsetBox["3", 
          Offset[{2, 2}, {0.13241884846834936`, -0.48429142149685567`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.11634663779512877`, -1.1170739021352813`}, 
          0.016072210673220594`], 
         InsetBox["4", 
          Offset[{2, 2}, {0.13241884846834936`, -1.1010016914620608`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.11634663779512877`, -0.24435230258677787`}, 
          0.016072210673220594`], 
         InsetBox["5", 
          Offset[{2, 2}, {0.13241884846834936`, -0.22828009191355728`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1403919561283224`, -0.8843806265450239}, 
          0.016072210673220594`], 
         InsetBox["6", 
          Offset[{2, 2}, {1.156464166801543, -0.8683084158718033}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1403919561283224`, -0.6283692969617255}, 
          0.016072210673220594`], 
         InsetBox["7", 
          Offset[{2, 2}, {1.156464166801543, -0.6122970862885049}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1403919561283224`, -0.3723579673784271}, 
          0.016072210673220594`], 
         InsetBox["8", 
          Offset[{2, 2}, {1.156464166801543, -0.35628575670520646`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1403919561283224`, -0.11634663779512866`}, 
          0.016072210673220594`], 
         InsetBox["9", 
          Offset[{2, 2}, {1.156464166801543, -0.10027442712190807`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1163466377951288`, -1.1170739021352813`}, 
          0.016072210673220594`], 
         InsetBox["10", 
          Offset[{2, 2}, {1.1324188484683493`, -1.1010016914620608`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGBipartitePartitions", "[", "g", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "8", ",", "9", ",", "10"}], "}"}]}], 
  "}"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Similarity measures", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGBibliographicCoupling"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGBibliographicCoupling[graph] returns the bibliographic \
coupling between all vertex pairs in graph. The bibliographic coupling of two \
vertices is the number of vertices they both connect to (with directed edges)\
\\nIGBibliographicCoupling[graph, vertex] returns the bibliographic coupling \
of vertex with all other vertices in graph.\\nIGBibliographicCoupling[graph, \
{vertex1, vertex2, \[Ellipsis]}] returns the bibliographic coupling of \
vertex1, vertex2, \[Ellipsis] with all other vertices in graph.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info693666170819-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGCocitationCoupling"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGCocitationCoupling[graph] returns the cocitation coupling \
between all vertex pairs in graph. The cocitation coupling of two vertices is \
the number of vertices connecting to both of them (with directed \
edges).\\nIGCocitationCoupling[graph, vertex] returns the cocitation coupling \
of vertex with all other vertices in graph.\\nIGCocitationCoupling[graph, \
{vertex1, vertex2, \[Ellipsis]}] returns the cocitation coupling of vertex1, \
vertex2, \[Ellipsis] with all other vertices in graph.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info703666170819-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGDiceSimilarity"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGDiceSimilarity[graph]\\nIGDiceSimilarity[graph, {vertex1, \
vertex2, \[Ellipsis]}]\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info713666170819-3785256"]
}, Open  ]],

Cell["\<\
The Dice similarity coefficient of two vertices is twice the number of common \
neighbors divided by the sum of the degrees of the vertices.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGJaccardSimilarity"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGJaccardSimilarity[graph]\\nIGJaccardSimilarity[graph, \
{vertex1, vertex2, \[Ellipsis]}]\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info723666170819-3785256"]
}, Open  ]],

Cell["\<\
The Jaccard similarity coefficient of two vertices is the number of common \
neighbors divided by the number of vertices that are neighbors of at least \
one of the two vertices being considered.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGInverseLogWeightedSimilarity"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGInverseLogWeightedSimilarity[graph]\\\
nIGInverseLogWeightedSimilarity[graph, \
vertex]\\nIGInverseLogWeightedSimilarity[graph, {vertex1, vertex2, \
\[Ellipsis]}]\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info733666170819-3785256"]
}, Open  ]],

Cell["\<\
The inverse log-weighted similarity of two vertices is the number of their \
common neighbors, weighted by the inverse logarithm of their degrees. It is \
based on the assumption that two vertices should be considered more similar \
if they share a low-degree common neighbor, since high-degree common \
neighbors are more likely to appear even by pure chance.

Isolated vertices will have zero similarity to any other vertex. \
Self-similarities are not calculated.

Reference: Lada A. Adamic and Eytan Adar: Friends and neighbors on the Web. \
Social Networks, 25(3):211-230, 2003.\
\>", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Motifs and subgraphs", "Section"],

Cell[CellGroupData[{

Cell["Motifs", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGMotifs"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGMotifs[graph, motifSize] returns the motif distribution of \
graph. See IGIsoclass and IGData for motif ordering.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info743666170820-3785256"]
}, Open  ]],

Cell[TextData[{
 "IGMotifs counts connected induced subgraphs. As of version 0.2.0, only size \
3 and 4 motifs are supported directly. See ",
 Cell[BoxData[
  FormBox["IGLADSubisomorphismCount", TraditionalForm]]],
 " to count larger induced subgraphs."
}], "Text"],

Cell[TextData[{
 "Motif counts are returned ordered by their ",
 Cell[BoxData[
  FormBox["IGIsoclass", TraditionalForm]]],
 ". ",
 Cell[BoxData[
  FormBox["Indeterminate", TraditionalForm]]],
 " is returned for non-connected subgraphs."
}], "Text"],

Cell[TextData[{
 "To count non-connected size-3 subgraphs, use ",
 Cell[BoxData[
  FormBox["IGTriadCensus", TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection"],

Cell["\<\
Let us find the size-4 motifs that stand out in the E. coli metabolic network \
by comparing the motif counts to that of a rewired graph:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<NetworkGraph\>\"", ",", "\"\<MetabolicNetworkEscherichiaColi\>\""}],
      "}"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rg", "=", 
   RowBox[{"IGRewire", "[", 
    RowBox[{"g", ",", "50000"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ratios", "=", 
  RowBox[{"N", "@", 
   RowBox[{"Quiet", "[", 
    FractionBox[
     RowBox[{"IGMotifs", "[", 
      RowBox[{"g", ",", "4"}], "]"}], 
     RowBox[{"IGMotifs", "[", 
      RowBox[{"rg", ",", "4"}], "]"}]], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
   "1.3017131140513296`", ",", "Indeterminate", ",", "Indeterminate", ",", 
   "Indeterminate", ",", "1.3058695843217802`", ",", "0.3603924026250607`", 
   ",", "Indeterminate", ",", "Indeterminate", ",", "Indeterminate", ",", 
   "0.5608749734534754`", ",", "0.5803616064923274`", ",", "0.`", ",", 
   "Indeterminate", ",", "0.019124818625151373`", ",", "0.`", ",", "0.`", ",",
    "4.291390728476821`", ",", "0.`", ",", "0.`", ",", "Indeterminate", ",", 
   "Indeterminate", ",", "1.2815164729629296`", ",", "0.35605338281064336`", 
   ",", "0.1738494135121557`", ",", "Indeterminate", ",", "Indeterminate", 
   ",", "0.6362850196944835`", ",", "0.`", ",", "0.021387376231590136`", ",", 
   "0.`", ",", "Indeterminate", ",", "Indeterminate", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "Indeterminate", ",", "0.2197450794937621`", 
   ",", "0.6704412886204836`", ",", "0.`", ",", "0.2227267630900325`", ",", 
   "0.`", ",", "0.1941461267605634`", ",", "0.06923076923076923`", ",", "0.`",
    ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "1.2376414532459799`", ",", "0.`", ",", "0.08`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "Indeterminate", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "30.215123859191657`", ",", "0.`", ",", "0.208955223880597`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.20512820512820512`", ",", 
   "0.`", ",", "0.`", ",", "1.2422067820320584`", ",", "0.`", ",", "0.`", ",",
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.3488461392716846`", ",", "0.13571539624881626`", ",", 
   "1.4737616478666014`", ",", "0.`", ",", "0.0239199702248568`", ",", "0.`", 
   ",", "0.23907921671623344`", ",", "0.`", ",", "0.05541517818245186`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.693950177935943`", ",", "0.`", ",", 
   "0.7272727272727273`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",",
    "0.`", ",", "0.`", ",", "0.`", ",", "Indeterminate", ",", 
   "0.2399103139013453`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "2.7120622568093387`", ",", "0.`", ",", "0.`", ",", "38.05615942028985`", 
   ",", "0.`", ",", "0.609375`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "Indeterminate", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "4.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.16666666666666666`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "Indeterminate", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "Indeterminate", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"largeRatios", "=", 
  RowBox[{"Select", "[", 
   RowBox[{"ratios", ",", 
    RowBox[{
     RowBox[{"#", ">", "5"}], "&"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"30.215123859191657`", ",", "38.05615942028985`"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
There are two motifs that are more than 30 times more common in the metabolic \
network than in the rewired graph.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Extract", "[", 
    RowBox[{
     RowBox[{"IGData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<AllDirectedGraphs\>\"", ",", "4"}], "}"}], "]"}], ",", 
     RowBox[{"FirstPosition", "[", 
      RowBox[{"ratios", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
  "largeRatios"}]], "Input",
 CellChangeTimes->{{3.6642667484180593`*^9, 3.664266777741116*^9}, {
  3.664266860768724*^9, 3.664266868234413*^9}, {3.664266954052833*^9, 
  3.664266964982087*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 0, 2, 3, 4}, {{3}, {4}, {1}, {1}}}, Pattern}], Null}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
           2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
            Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.7071067811865475, -0.7071067811865475}, {
         0.7071067811865475, 0.7071067811865475}, {-0.7071067811865475, 
         0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           ArrowBox[{2, 3}, 0.017674226532102905`], 
           ArrowBox[{2, 4}, 0.017674226532102905`], 
           ArrowBox[{3, 1}, 0.017674226532102905`], 
           ArrowBox[{4, 1}, 0.017674226532102905`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.017674226532102905`], 
           DiskBox[2, 0.017674226532102905`], 
           DiskBox[3, 0.017674226532102905`], 
           DiskBox[4, 0.017674226532102905`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 1, 2, 3, 4}, {{4}, {3}, {1}, {2}}}, Pattern}], Null}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
           2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
            Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.7071067811865475, -0.7071067811865475}, {
         0.7071067811865475, 0.7071067811865475}, {-0.7071067811865475, 
         0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           ArrowBox[{{1, 4}, {2, 3}, {3, 1}, {4, 2}}, 0.017674226532102905`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.017674226532102905`], 
           DiskBox[2, 0.017674226532102905`], 
           DiskBox[3, 0.017674226532102905`], 
           DiskBox[4, 0.017674226532102905`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
The Davidson\[Dash]Harel algorithm attempts to reduce edge crossings and can \
draw these subgraphs in a clearer way:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLayoutDavidsonHarel", "/@", "%"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 0, 2, 3, 4}, {{3}, {4}, {1}, {1}}}, Pattern}], Null}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.0873820667118213, 
          0.19796007218177353`}, {-0.08788328176105162, -0.2011052924585263}, \
{-0.20571906938282747`, 0.0864704020255283}, {
          0.2062202844320578, -0.08332518174877554}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.0873820667118213, 
         0.19796007218177353`}, {-0.08788328176105162, -0.2011052924585263}, \
{-0.20571906938282747`, 0.0864704020255283}, {
         0.2062202844320578, -0.08332518174877554}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           ArrowBox[{2, 3}, 0.00524398797406349], 
           ArrowBox[{2, 4}, 0.00524398797406349], 
           ArrowBox[{3, 1}, 0.00524398797406349], 
           ArrowBox[{4, 1}, 0.00524398797406349]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.00524398797406349], DiskBox[2, 0.00524398797406349], 
           DiskBox[3, 0.00524398797406349], 
           DiskBox[4, 0.00524398797406349]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 1, 2, 3, 4}, {{4}, {3}, {1}, {2}}}, Pattern}], Null}, {
        GraphLayout -> {"Dimension" -> 2}, 
         VertexCoordinates -> {{0.2180085131696838, 
          0.03457642177622401}, {-0.22460031480231546`, \
-0.032482364152014526`}, {
          0.03794468621848451, -0.21500260529051352`}, {-0.03135288458585285, 
          0.21290854766630396`}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.2180085131696838, 
         0.03457642177622401}, {-0.22460031480231546`, \
-0.032482364152014526`}, {
         0.03794468621848451, -0.21500260529051352`}, {-0.03135288458585285, 
         0.21290854766630396`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           ArrowBox[{{1, 4}, {2, 3}, {3, 1}, {4, 2}}, 
            0.005634410380083551]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.005634410380083551], DiskBox[2, 0.005634410380083551],
            DiskBox[3, 0.005634410380083551], 
           DiskBox[4, 0.005634410380083551]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Triad and dyad census", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGTriadCensus"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGTriadCensus[graph] classifies triads in the graph into 16 \
possible states, labelled using MAN (mutual, asymmetric, null) notation.\"\>",
   "MSG"]], "Print", "PrintUsage",
 CellTags->"Info813666170830-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGDyadCensus"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGDyadCensus[graph] classifies dyad in the graph into mutual, \
asymmetric or null states.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info823666170830-3785256"]
}, Open  ]],

Cell[TextData[{
 "See ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGData", "[", "\"\<MANTriadLabels\>\"", "]"}], 
   TraditionalForm]]],
 " for the mapping between MAN labels and graphs."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Finding triangles", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGTriangles"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGTriangles[graph] lists all triangles in the graph. Edge \
directions are ignored.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info833666170830-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGAdjacentTriangleCount"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGAdjacentTriangleCount[graph] counts the triangles each \
vertex participates in. Edge directions are \
ignored.\\nIGAdjacentTriangleCount[graph, vertex] counts the triangles vertex \
participates in.\\nIGAdjacentTriangleCount[graph, {vertex1, vertex2, \
\[Ellipsis]}] counts the triangles the specified vertices participate \
in.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info843666170831-3785256"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Isomorphism", "Section"],

Cell[TextData[{
 "igraph implements three isomorphism testing algorithms: BLISS, VF2 and LAD. \
These support slightly different functionality. Most of IGraph/M\
\[CloseCurlyQuote]s isomorphism related functions include the name of the \
algorithm as a prefix, e.g. ",
 Cell[BoxData[
  FormBox["IGBlissIsomorphicQ", TraditionalForm]]],
 ". Functions named as ",
 Cell[BoxData[
  FormBox["\[Ellipsis]GetIsomorphism", TraditionalForm]]],
 " will find a single isomorphism. Functions names as ",
 Cell[BoxData[
  FormBox["\[Ellipsis]FindIsomorphisms", TraditionalForm]]],
 " can find multiple isomorphisms. Both return a result in a format \
compatible with the built-in ",
 Cell[BoxData[
  FormBox["FindGraphIsomorphism", TraditionalForm]]],
 "."
}], "Text"],

Cell["\<\
All three algorithms support vertex coloured graphs. Please refer to the VF2 \
section below for the syntax.\
\>", "Text"],

Cell[TextData[{
 "Additionally, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGIsomorphicQ", "[", "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGSubisomorphicQ", "[", "]"}], TraditionalForm]]],
 " try to select the best algorithm for the given graphs. For graphs without \
multiple edges, they use igraph\[CloseCurlyQuote]s default algorithm \
selection. For multigraphs, they use VF2 after transforming the multigraphs \
to an edge coloured simple graph."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGIsomorphicQ"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGIsomorphicQ[graph1, graph2] tests if graph1 and graph2 are \
isomorphic.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info853666170831-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGSubisomorphicQ"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"IGSubisomorphicQ[subgraph, graph] tests if subgraph is \
contained within graph.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info863666170831-3785256"]
}, Open  ]],

Cell[CellGroupData[{

Cell["BLISS", "Subsection"],

Cell[TextData[{
 "See ",
 ButtonBox["http://www.tcs.hut.fi/Software/bliss/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.tcs.hut.fi/Software/bliss/"], None},
  ButtonNote->"http://www.tcs.hut.fi/Software/bliss/"],
 " and ",
 ButtonBox["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470920858320",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470920858320"], 
    None},
  ButtonNote->
   "http://igraph.org/c/doc/igraph-Isomorphism.html#idm470920858320"]
}], "Text"],

Cell[TextData[{
 "Bliss generally outperforms ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s built-in isomorphisms functions (including finding and \
counting automorphisms) as of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 10.3. However, this advantage will only be apparent for large and \
difficult graphs. For small ones the overhead of having to copy the graph and \
convert it to igraph format is much larger than the actual computation time."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGBliss*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGBlissAutomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info873666170831-3785256", {
            "IGBlissAutomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGBlissCanonicalLabeling",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info873666170831-3785256", {
            "IGBlissCanonicalLabeling", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGBlissIsomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info873666170831-3785256", {"IGBlissIsomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGBlissAutomorphismGroup",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info873666170831-3785256", {
            "IGBlissAutomorphismGroup", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGBlissCanonicalPermutation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info873666170831-3785256", {
            "IGBlissCanonicalPermutation", "IGraphM`"}},
          ButtonNote->"IGraphM`"], ""},
        {
         ButtonBox["IGBlissCanonicalGraph",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info873666170831-3785256", {"IGBlissCanonicalGraph", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGBlissGetIsomorphism",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info873666170831-3785256", {"IGBlissGetIsomorphism", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell[TextData[{
 "Bliss functions take a ",
 Cell[BoxData[
  FormBox["\"\<SplittingHeuristics\>\"", TraditionalForm]]],
 " option, which can influence the performance of the method. Possible values \
are:"
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 " \[Dash] First non-unit cell. Very fast but may result in large search \
spaces on difficult graphs. Use for large but easy graphs."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<FirstSmallest\>\"", TraditionalForm]]],
 " \[Dash] First smallest non-unit cell. Fast, should usually produce smaller \
search spaces than ",
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 "."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<FirstLargest\>\"", TraditionalForm]]],
 " \[Dash] First largest non-unit cell. Fast, should usually produce smaller \
search spaces than ",
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 "."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<FirstMaximallyConnected\>\"", TraditionalForm]]],
 " \[Dash] First maximally non-trivially connected non-unit cell. Not so \
fast, should usually produce smaller search spaces than ",
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\"\<FirstSmallest\>\"", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["\"\<FirstLargest\>\"", TraditionalForm]]],
 "."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<FirstSmallestMaximallyConnected\>\"", TraditionalForm]]],
 " \[Dash] First smallest maximally non-trivially connected non-unit cell. \
Not so fast, should usually produce smaller search spaces than ",
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\"\<FirstSmallest\>\"", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["\"\<FirstLargest\>\"", TraditionalForm]]],
 "."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<FirstLargestMaximallyConnected\>\"", TraditionalForm]]],
 " \[Dash] First largest maximally non-trivially connected non-unit cell. Not \
so fast, should usually produce smaller search spaces than ",
 Cell[BoxData[
  FormBox["\"\<First\>\"", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\"\<FirstSmallest\>\"", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["\"\<FirstLargest\>\"", TraditionalForm]]],
 "."
}], "Item"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Note:",
  FontWeight->"Bold"],
 " The result of the ",
 Cell[BoxData[
  FormBox["IGBlissCanonicalLabeling", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["IGBlissCanonicalPermutation", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["IGBlissanonicalGraph", TraditionalForm]]],
 " functions depend on the choice of ",
 Cell[BoxData[
  FormBox["\"\<SplittingHeuristics\>\"", TraditionalForm]]],
 ". See the ",
 ButtonBox["Bliss documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.tcs.hut.fi/Software/bliss/doxy/classbliss_1_1Graph.html#\
a08da370e34106cd7db479eca7c7375cc"], None},
  ButtonNote->
   "http://www.tcs.hut.fi/Software/bliss/doxy/classbliss_1_1Graph.html#\
a08da370e34106cd7db479eca7c7375cc"],
 " for more information. "
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["VF2", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGVF2*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGVF2FindIsomorphisms",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info883666170831-3785256", {"IGVF2FindIsomorphisms", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2IsomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info883666170831-3785256", {"IGVF2IsomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2SubisomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info883666170831-3785256", {"IGVF2SubisomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGVF2FindSubisomorphisms",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info883666170831-3785256", {
            "IGVF2FindSubisomorphisms", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2IsomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info883666170831-3785256", {"IGVF2IsomorphismCount", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGVF2SubisomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info883666170831-3785256", {
            "IGVF2SubisomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell[TextData[{
 "VF2 supports vertex coloured and edge coloured graphs. A colour \
specification consists of one of more of the ",
 Cell[BoxData[
  FormBox["\"\<VertexColors\>\"", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["\"\<EdgeColors\>\"", TraditionalForm]]],
 " options. Allowed formats for these options are a list of integers, an \
association assigning integers to the vertices/edges, or ",
 Cell[BoxData[
  FormBox["None", TraditionalForm]]],
 ". When using associations, it is not necessarily to specify a colour for \
each vertex/edge. The omitted ones are assumed to have colour ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]]],
 "."
}], "Text"],

Cell[TextData[{
 "The following graph has two automorphisms: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], TraditionalForm]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"IGVF2IsomorphismCount", "[", 
  RowBox[{"g", ",", "g"}], "]"}]}], "Input"],

Cell[BoxData["2"], "Output"]
}, Open  ]],

Cell[TextData[{
 "If we colour one of the vertices, the permutation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], TraditionalForm]]],
 " becomes forbidden, so only one automorphism remains."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGVF2IsomorphismCount", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", ",", 
     RowBox[{"\"\<VertexColors\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"g", ",", 
     RowBox[{"\"\<VertexColors\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData["1"], "Output"]
}, Open  ]],

Cell["\<\
Multigraphs are not directly supported for isomorphism checking, but we can \
map the multigraph isomorphism problem into an edge-coloured graph \
isomorphism one by designating the multiplicity of each edge as its colour.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g1", "=", 
  RowBox[{"EdgeAdd", "[", 
   RowBox[{
    RowBox[{"PathGraph", "[", 
     RowBox[{
      RowBox[{"Range", "[", "5", "]"}], ",", 
      RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
    RowBox[{"2", "\[UndirectedEdge]", "3"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {2, 3}}}, {
      VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0., 7.347880794884119*^-16}, {1., 
          6.123233995736766*^-16}}, 0.03700564971751412]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{1., 6.123233995736766*^-16}, {
          1.4999999999999987`, 0.16444074718311957`}, {2., 
          4.898587196589413*^-16}}], 0.03700564971751412]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{1., 6.123233995736766*^-16}, {
          1.4999999999999987`, -0.16444074718311805`}, {2., 
          4.898587196589413*^-16}}], 0.03700564971751412]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2., 4.898587196589413*^-16}, {3., 
          2.4492935982947064`*^-16}}, 0.03700564971751412]}, 
        {Arrowheads[0.], 
         ArrowBox[{{3., 2.4492935982947064`*^-16}, {4., 0.}}, 
          0.03700564971751412]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 7.347880794884119*^-16}, 0.03700564971751412], 
         InsetBox["1", 
          Offset[{2, 2}, {0.03700564971751412, 0.037005649717514855`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 6.123233995736766*^-16}, 0.03700564971751412], 
         InsetBox["2", 
          Offset[{2, 2}, {1.0370056497175142`, 0.03700564971751473}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2., 4.898587196589413*^-16}, 0.03700564971751412], 
         InsetBox["3", 
          Offset[{2, 2}, {2.037005649717514, 0.03700564971751461}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3., 2.4492935982947064`*^-16}, 0.03700564971751412], 
         InsetBox["4", 
          Offset[{2, 2}, {3.037005649717514, 0.03700564971751436}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 0.}, 0.03700564971751412], 
         InsetBox["5", 
          Offset[{2, 2}, {4.037005649717514, 0.03700564971751412}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g2", "=", 
  RowBox[{"EdgeAdd", "[", 
   RowBox[{
    RowBox[{"PathGraph", "[", 
     RowBox[{
      RowBox[{"Range", "[", "5", "]"}], ",", 
      RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
    RowBox[{"4", "\[UndirectedEdge]", "3"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {4, 3}}}, {
      VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0., 7.347880794884119*^-16}, {1., 
          6.123233995736766*^-16}}, 0.03700564971751412]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1., 6.123233995736766*^-16}, {2., 
          4.898587196589413*^-16}}, 0.03700564971751412]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{2., 4.898587196589413*^-16}, {2.5, 
          0.1644407471831192}, {3., 2.4492935982947064`*^-16}}], 
          0.03700564971751412]}, 
        {Arrowheads[0.], 
         ArrowBox[BezierCurveBox[{{2., 4.898587196589413*^-16}, {
          2.5000000000000004`, -0.1644407471831192}, {3., 
          2.4492935982947064`*^-16}}], 0.03700564971751412]}, 
        {Arrowheads[0.], 
         ArrowBox[{{3., 2.4492935982947064`*^-16}, {4., 0.}}, 
          0.03700564971751412]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 7.347880794884119*^-16}, 0.03700564971751412], 
         InsetBox["1", 
          Offset[{2, 2}, {0.03700564971751412, 0.037005649717514855`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 6.123233995736766*^-16}, 0.03700564971751412], 
         InsetBox["2", 
          Offset[{2, 2}, {1.0370056497175142`, 0.03700564971751473}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2., 4.898587196589413*^-16}, 0.03700564971751412], 
         InsetBox["3", 
          Offset[{2, 2}, {2.037005649717514, 0.03700564971751461}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3., 2.4492935982947064`*^-16}, 0.03700564971751412], 
         InsetBox["4", 
          Offset[{2, 2}, {3.037005649717514, 0.03700564971751436}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 0.}, 0.03700564971751412], 
         InsetBox["5", 
          Offset[{2, 2}, {4.037005649717514, 0.03700564971751412}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGVF2IsomorphicQ", "[", 
  RowBox[{"g1", ",", "g2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"IGraphM", "::", "vf2nmg"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"VF2 does not support multigraphs.\"\>"}]], "Message", \
"MSG"],

Cell[BoxData["$Failed"], "Output"]
}, Open  ]],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox["g1", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["g2", TraditionalForm]]],
 " are undirected, we need to bring their edges into a sorted canonical form \
before counting them. This ensures that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", "\[UndirectedEdge]", "3"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "\[UndirectedEdge]", "4"}], TraditionalForm]]],
 " are treated as the same edge."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colors1", "=", 
  RowBox[{"Counts", "[", 
   RowBox[{"Sort", "/@", 
    RowBox[{"EdgeList", "[", "g1", "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "\[UndirectedEdge]", "2"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"2", "\[UndirectedEdge]", "3"}], "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"3", "\[UndirectedEdge]", "4"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"4", "\[UndirectedEdge]", "5"}], "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colors2", "=", 
  RowBox[{"Counts", "[", 
   RowBox[{"Sort", "/@", 
    RowBox[{"EdgeList", "[", "g2", "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "\[UndirectedEdge]", "2"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"2", "\[UndirectedEdge]", "3"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"3", "\[UndirectedEdge]", "4"}], "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"4", "\[UndirectedEdge]", "5"}], "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGVF2IsomorphicQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graph", "@", 
      RowBox[{"Keys", "[", "colors1", "]"}]}], ",", 
     RowBox[{"\"\<EdgeColors\>\"", "\[Rule]", "colors1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graph", "@", 
      RowBox[{"Keys", "[", "colors2", "]"}]}], ",", 
     RowBox[{"\"\<EdgeColors\>\"", "\[Rule]", "colors2"}]}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox["IGIsomorphicQ", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["IGSubisomorphicQ", TraditionalForm]]],
 " check multigraph isomorphism in a similar way, based on edge colouring."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["LAD", "Subsection"],

Cell[TextData[{
 "See ",
 ButtonBox["http://liris.cnrs.fr/csolnon/LAD.html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://liris.cnrs.fr/csolnon/LAD.html"], None},
  ButtonNote->"http://liris.cnrs.fr/csolnon/LAD.html"],
 " and ",
 ButtonBox["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470934622128",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470934622128"], 
    None},
  ButtonNote->
   "http://igraph.org/c/doc/igraph-Isomorphism.html#idm470934622128"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGLAD*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGLADFindSubisomorphisms",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info983666170832-3785256", {
            "IGLADFindSubisomorphisms", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLADGetSubisomorphism",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info983666170832-3785256", {"IGLADGetSubisomorphism", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLADSubisomorphicQ",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info983666170832-3785256", {"IGLADSubisomorphicQ", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLADSubisomorphismCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info983666170832-3785256", {
            "IGLADSubisomorphismCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.2375]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell[TextData[{
 "With the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\"\<Induced\>\"", "\[Rule]", "True"}], TraditionalForm]]],
 " option LAD will search for induced subgraphs."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLADSubisomorphicQ", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", " ", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, 
         SparseArray[
         Automatic, {3, 3}, 0, {
          1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}]}, {
        GraphLayout -> "CircularEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844384, -0.4999999999999994}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.020399597244776385`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]]}], "]"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLADSubisomorphicQ", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", " ", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, 
         SparseArray[
         Automatic, {3, 3}, 0, {
          1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}]}, {
        GraphLayout -> "CircularEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844384, -0.4999999999999994}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.020399597244776385`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", 
   RowBox[{"\"\<Induced\>\"", "\[Rule]", "True"}]}], "]"}]], "Input"],

Cell[BoxData["False"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLADSubisomorphicQ", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", " ", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, 
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 3, 5, 8, 10}, {{2}, {3}, {4}, {1}, {3}, {1}, {2}, {4}, {
            3}, {1}}}, Pattern}]}, {
        GraphLayout -> "CircularEmbedding", GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]]}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-1., 1.0106430996148606`*^-15}, {
         6.049014748177263*^-16, -1.}, {
         1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], 
           DiskBox[4, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", 
   RowBox[{"\"\<Induced\>\"", "\[Rule]", "True"}]}], "]"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Maximum flow and connectivity", "Section"],

Cell[CellGroupData[{

Cell["Cohesive blocks", "Subsection"],

Cell[TextData[{
 "The following examples are based on the ones ",
 ButtonBox["in the R/igraph documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/r/doc/cohesive_blocks.html"], None},
  ButtonNote->"http://igraph.org/r/doc/cohesive_blocks.html"],
 "."
}], "Text"],

Cell["\<\
This is the network from the Moody-White paper:

J. Moody and D. R. White. Structural cohesion and embeddedness: A \
hierarchical concept of social groups. American Sociological Review, \
68(1):103\[Dash]127, Feb 2003.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mw", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<1\>\"", "\[UndirectedEdge]", "\"\<2\>\""}], ",", 
       RowBox[{"\"\<1\>\"", "\[UndirectedEdge]", "\"\<3\>\""}], ",", 
       RowBox[{"\"\<1\>\"", "\[UndirectedEdge]", "\"\<4\>\""}], ",", 
       RowBox[{"\"\<1\>\"", "\[UndirectedEdge]", "\"\<5\>\""}], ",", 
       RowBox[{"\"\<1\>\"", "\[UndirectedEdge]", "\"\<6\>\""}], ",", 
       RowBox[{"\"\<2\>\"", "\[UndirectedEdge]", "\"\<3\>\""}], ",", 
       RowBox[{"\"\<2\>\"", "\[UndirectedEdge]", "\"\<4\>\""}], ",", 
       RowBox[{"\"\<2\>\"", "\[UndirectedEdge]", "\"\<5\>\""}], ",", 
       RowBox[{"\"\<2\>\"", "\[UndirectedEdge]", "\"\<7\>\""}], ",", 
       RowBox[{"\"\<3\>\"", "\[UndirectedEdge]", "\"\<4\>\""}], ",", 
       RowBox[{"\"\<3\>\"", "\[UndirectedEdge]", "\"\<6\>\""}], ",", 
       RowBox[{"\"\<3\>\"", "\[UndirectedEdge]", "\"\<7\>\""}], ",", 
       RowBox[{"\"\<4\>\"", "\[UndirectedEdge]", "\"\<5\>\""}], ",", 
       RowBox[{"\"\<4\>\"", "\[UndirectedEdge]", "\"\<6\>\""}], ",", 
       RowBox[{"\"\<4\>\"", "\[UndirectedEdge]", "\"\<7\>\""}], ",", 
       RowBox[{"\"\<5\>\"", "\[UndirectedEdge]", "\"\<6\>\""}], ",", 
       RowBox[{"\"\<5\>\"", "\[UndirectedEdge]", "\"\<7\>\""}], ",", 
       RowBox[{"\"\<5\>\"", "\[UndirectedEdge]", "\"\<21\>\""}], ",", 
       RowBox[{"\"\<6\>\"", "\[UndirectedEdge]", "\"\<7\>\""}], ",", 
       RowBox[{"\"\<7\>\"", "\[UndirectedEdge]", "\"\<8\>\""}], ",", 
       RowBox[{"\"\<7\>\"", "\[UndirectedEdge]", "\"\<11\>\""}], ",", 
       RowBox[{"\"\<7\>\"", "\[UndirectedEdge]", "\"\<14\>\""}], ",", 
       RowBox[{"\"\<7\>\"", "\[UndirectedEdge]", "\"\<19\>\""}], ",", 
       RowBox[{"\"\<8\>\"", "\[UndirectedEdge]", "\"\<9\>\""}], ",", 
       RowBox[{"\"\<8\>\"", "\[UndirectedEdge]", "\"\<11\>\""}], ",", 
       RowBox[{"\"\<8\>\"", "\[UndirectedEdge]", "\"\<14\>\""}], ",", 
       RowBox[{"\"\<9\>\"", "\[UndirectedEdge]", "\"\<10\>\""}], ",", 
       RowBox[{"\"\<10\>\"", "\[UndirectedEdge]", "\"\<12\>\""}], ",", 
       RowBox[{"\"\<10\>\"", "\[UndirectedEdge]", "\"\<13\>\""}], ",", 
       RowBox[{"\"\<11\>\"", "\[UndirectedEdge]", "\"\<12\>\""}], ",", 
       RowBox[{"\"\<11\>\"", "\[UndirectedEdge]", "\"\<14\>\""}], ",", 
       RowBox[{"\"\<12\>\"", "\[UndirectedEdge]", "\"\<16\>\""}], ",", 
       RowBox[{"\"\<13\>\"", "\[UndirectedEdge]", "\"\<16\>\""}], ",", 
       RowBox[{"\"\<14\>\"", "\[UndirectedEdge]", "\"\<15\>\""}], ",", 
       RowBox[{"\"\<15\>\"", "\[UndirectedEdge]", "\"\<16\>\""}], ",", 
       RowBox[{"\"\<17\>\"", "\[UndirectedEdge]", "\"\<18\>\""}], ",", 
       RowBox[{"\"\<17\>\"", "\[UndirectedEdge]", "\"\<19\>\""}], ",", 
       RowBox[{"\"\<17\>\"", "\[UndirectedEdge]", "\"\<20\>\""}], ",", 
       RowBox[{"\"\<18\>\"", "\[UndirectedEdge]", "\"\<20\>\""}], ",", 
       RowBox[{"\"\<18\>\"", "\[UndirectedEdge]", "\"\<21\>\""}], ",", 
       RowBox[{"\"\<19\>\"", "\[UndirectedEdge]", "\"\<20\>\""}], ",", 
       RowBox[{"\"\<19\>\"", "\[UndirectedEdge]", "\"\<22\>\""}], ",", 
       RowBox[{"\"\<19\>\"", "\[UndirectedEdge]", "\"\<23\>\""}], ",", 
       RowBox[{"\"\<20\>\"", "\[UndirectedEdge]", "\"\<21\>\""}], ",", 
       RowBox[{"\"\<21\>\"", "\[UndirectedEdge]", "\"\<22\>\""}], ",", 
       RowBox[{"\"\<21\>\"", "\[UndirectedEdge]", "\"\<23\>\""}], ",", 
       RowBox[{"\"\<22\>\"", "\[UndirectedEdge]", "\"\<23\>\""}]}], "}"}], 
     ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"blocks", ",", "cohesion"}], "}"}], "=", 
  RowBox[{"IGCohesiveBlocks", "[", "mw", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"2\"\>", ",", "\<\"3\"\>", 
       ",", "\<\"4\"\>", ",", "\<\"5\"\>", ",", "\<\"6\"\>", ",", "\<\"7\"\>",
        ",", "\<\"21\"\>", ",", "\<\"8\"\>", ",", "\<\"11\"\>", 
       ",", "\<\"14\"\>", ",", "\<\"19\"\>", ",", "\<\"9\"\>", 
       ",", "\<\"10\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", 
       ",", "\<\"16\"\>", ",", "\<\"15\"\>", ",", "\<\"17\"\>", 
       ",", "\<\"18\"\>", ",", "\<\"20\"\>", ",", "\<\"22\"\>", 
       ",", "\<\"23\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"2\"\>", ",", "\<\"3\"\>", 
       ",", "\<\"4\"\>", ",", "\<\"5\"\>", ",", "\<\"6\"\>", ",", "\<\"7\"\>",
        ",", "\<\"21\"\>", ",", "\<\"19\"\>", ",", "\<\"17\"\>", 
       ",", "\<\"18\"\>", ",", "\<\"20\"\>", ",", "\<\"22\"\>", 
       ",", "\<\"23\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"11\"\>", 
       ",", "\<\"14\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
       ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"16\"\>", 
       ",", "\<\"15\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"2\"\>", ",", "\<\"3\"\>", 
       ",", "\<\"4\"\>", ",", "\<\"5\"\>", ",", "\<\"6\"\>", 
       ",", "\<\"7\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"11\"\>", 
       ",", "\<\"14\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "5", ",", "3"}], "}"}]}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", 
  RowBox[{"mw", ",", 
   RowBox[{"Rest", "@", "blocks"}], ",", 
   RowBox[{"CommunityRegionStyle", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "96", "]"}], "[", "i", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{"Length", "[", "blocks", "]"}], "-", "1"}]}], "}"}]}], 
     "]"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.23792049598428056`, 0.6887478786077664, 1.], Opacity[0.5], 
     EdgeForm[GrayLevel[0.5]], 
     FilledCurveBox[
      BSplineCurve[{{4.458916253092883, 1.487609867959398}, {
       5.355322730919235, -0.15127772159854447`}, {
       5.657878174116324, -0.15127772159854447`}, {6.5368235071611025`, 
       0.15322955420864603`}, {6.5368235071611025`, 0.45578499740573497`}, {
       6.509777552542472, 1.4625701252500325`}, {5.68833892011458, 
       2.97581466900685}, {5.38578347691749, 2.97581466900685}, {
       4.485894454568593, 2.8772866019255923`}, {4.458916253092883, 
       1.7901653111564868`}}, SplineClosed -> True]]}, 
    {RGBColor[1., 0.519591857134656, 0.3096724501821112], Opacity[0.5], 
     EdgeForm[GrayLevel[0.5]], 
     FilledCurveBox[
      BSplineCurve[{{-0.15127772159854447`, 1.1105093867487255`}, {
       0.549530962679411, 0.4651125583392933}, {1.3988404501825364`, 
       0.1371915926251811}, {1.7013958933796252`, 0.1371915926251811}, {
       4.761471696289973, 1.487609867959398}, {4.761471696289973, 
       1.7901653111564868`}, {1.5577516610401334`, 2.5545605227241195`}, {
       1.2551962178430447`, 2.5545605227241195`}, {0.46245939170993233`, 
       2.126946284984529}, {-0.15127772159854447`, 1.4130648299458142`}}, 
       SplineClosed -> True]]}, 
    {RGBColor[0., 0.7904150911428401, 0.7051174286912738], Opacity[0.5], 
     EdgeForm[GrayLevel[0.5]], 
     FilledCurveBox[
      BSplineCurve[{{4.458916253092883, 1.487609867959398}, {
       4.761471696289973, 1.487609867959398}, {5.485887404485983, 
       1.7616188958385481`}, {5.68833892011458, 2.6732592258097614`}, {
       5.68833892011458, 2.97581466900685}, {5.38578347691749, 
       2.97581466900685}, {4.485894454568593, 2.8772866019255923`}, {
       4.458916253092883, 1.7901653111564868`}}, SplineClosed -> True]]}, 
    {RGBColor[0.9363550506359628, 0.5065315445234129, 0.9811070357073114], 
     Opacity[0.5], EdgeForm[GrayLevel[0.5]], 
     FilledCurveBox[
      BSplineCurve[{{1.9707139692599314`, 1.2177789922767799`}, {
       2.115420917198963, 0.7120806515870742}, {2.4179763603960516`, 
       0.7120806515870742}, {4.761471696289973, 1.487609867959398}, {
       4.761471696289973, 1.7901653111564868`}, {2.334475283641911, 
       2.047013212664725}, {2.0319198404448224`, 2.047013212664725}, {
       1.9707139692599314`, 1.520334435473869}}, SplineClosed -> True]]}}, {
    {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
     LineBox[{{5.537061198516035, 2.8245369474083057`}, {5.10225274259389, 
      2.6210653049498127`}}], 
     LineBox[{{5.537061198516035, 2.8245369474083057`}, {4.637172176167137, 
      2.726008880327048}}], 
     LineBox[{{5.537061198516035, 2.8245369474083057`}, {4.990012407604223, 
      2.3337638820704143`}}], 
     LineBox[{{5.537061198516035, 2.8245369474083057`}, {5.3346096828874385`, 
      1.9128966174370927`}}], 
     LineBox[{{5.537061198516035, 2.8245369474083057`}, {4.690993902925683, 
      2.172176235833583}}], 
     LineBox[{{5.10225274259389, 2.6210653049498127`}, {4.637172176167137, 
      2.726008880327048}}], 
     LineBox[{{5.10225274259389, 2.6210653049498127`}, {4.990012407604223, 
      2.3337638820704143`}}], 
     LineBox[{{5.10225274259389, 2.6210653049498127`}, {5.3346096828874385`, 
      1.9128966174370927`}}], 
     LineBox[{{5.10225274259389, 2.6210653049498127`}, {4.610193974691428, 
      1.6388875895579424`}}], 
     LineBox[{{4.637172176167137, 2.726008880327048}, {4.990012407604223, 
      2.3337638820704143`}}], 
     LineBox[{{4.637172176167137, 2.726008880327048}, {4.690993902925683, 
      2.172176235833583}}], 
     LineBox[{{4.637172176167137, 2.726008880327048}, {4.610193974691428, 
      1.6388875895579424`}}], 
     LineBox[{{4.990012407604223, 2.3337638820704143`}, {5.3346096828874385`, 
      1.9128966174370927`}}], 
     LineBox[{{4.990012407604223, 2.3337638820704143`}, {4.690993902925683, 
      2.172176235833583}}], 
     LineBox[{{4.990012407604223, 2.3337638820704143`}, {4.610193974691428, 
      1.6388875895579424`}}], 
     LineBox[{{5.3346096828874385`, 1.9128966174370927`}, {4.690993902925683, 
      2.172176235833583}}], 
     LineBox[{{5.3346096828874385`, 1.9128966174370927`}, {4.610193974691428, 
      1.6388875895579424`}}], 
     LineBox[{{5.3346096828874385`, 1.9128966174370927`}, {5.941981719487779, 
      1.3045575744299338`}}], 
     LineBox[{{4.690993902925683, 2.172176235833583}, {4.610193974691428, 
      1.6388875895579424`}}], 
     BezierCurveBox[{{4.610193974691428, 1.6388875895579424`}, {
      4.00530280532685, 1.573178240345717}, {3.4004116359622722`, 
      1.5074688911334917`}, {2.7955204665976945`, 1.4417595419212665`}, {
      2.266698638797507, 0.8633583731856187}},
      SplineDegree->2], 
     BezierCurveBox[{{4.610193974691428, 1.6388875895579424`}, {
      4.00530280532685, 1.573178240345717}, {3.4004116359622722`, 
      1.5074688911334917`}, {2.7955204665976945`, 1.4417595419212665`}, {
      2.1219916908584757`, 1.3690567138753245`}},
      SplineDegree->2], 
     BezierCurveBox[{{4.610193974691428, 1.6388875895579424`}, {
      4.00530280532685, 1.573178240345717}, {3.4004116359622722`, 
      1.5074688911334917`}, {2.7955204665976945`, 1.4417595419212665`}, {
      2.183197562043367, 1.8957354910661806`}},
      SplineDegree->2], 
     LineBox[{{4.610193974691428, 1.6388875895579424`}, {5.189309117813626, 
      0.885068943080795}}], 
     LineBox[{{5.941981719487779, 1.3045575744299338`}, {6.385545785562558, 
      0.3045072758071905}}], 
     LineBox[{{5.941981719487779, 1.3045575744299338`}, {5.682004010131423, 
      0.40159600632527037`}}], 
     LineBox[{{5.941981719487779, 1.3045575744299338`}, {6.130601775410827, 
      0.9068475626826816}}], 
     LineBox[{{5.941981719487779, 1.3045575744299338`}, {6.358499830943927, 
      1.311292403651488}}], 
     LineBox[{{2.266698638797507, 0.8633583731856187}, {2.1219916908584757`, 
      1.3690567138753245`}}], 
     LineBox[{{2.266698638797507, 0.8633583731856187}, {2.183197562043367, 
      1.8957354910661806`}}], 
     LineBox[{{2.266698638797507, 0.8633583731856187}, {1.5501181717810808`, 
      0.28846931422372557`}}], 
     LineBox[{{2.1219916908584757`, 1.3690567138753245`}, {2.183197562043367, 
      1.8957354910661806`}}], 
     LineBox[{{2.1219916908584757`, 1.3690567138753245`}, {1.233109227786013, 
      1.3265793784484672`}}], 
     LineBox[{{2.183197562043367, 1.8957354910661806`}, {1.406473939441589, 
      2.403282801125575}}], 
     LineBox[{{5.189309117813626, 0.885068943080795}, {5.506600452517779, 
      0.}}], LineBox[{{5.189309117813626, 0.885068943080795}, {
      5.682004010131423, 0.40159600632527037`}}], 
     LineBox[{{5.189309117813626, 0.885068943080795}, {6.130601775410827, 
      0.9068475626826816}}], 
     LineBox[{{5.189309117813626, 0.885068943080795}, {6.358499830943927, 
      1.311292403651488}}], 
     LineBox[{{1.5501181717810808`, 0.28846931422372557`}, {
      0.7008086842779555, 0.6163902799378378}}], 
     LineBox[{{0.7008086842779555, 0.6163902799378378}, {1.233109227786013, 
      1.3265793784484672`}}], 
     LineBox[{{0.7008086842779555, 0.6163902799378378}, {0., 
      1.2617871083472698`}}], 
     LineBox[{{1.233109227786013, 1.3265793784484672`}, {0.6137371133084768, 
      1.9756685633859847`}}], 
     LineBox[{{0., 1.2617871083472698`}, {0.6137371133084768, 
      1.9756685633859847`}}], 
     LineBox[{{0.6137371133084768, 1.9756685633859847`}, {1.406473939441589, 
      2.403282801125575}}], 
     LineBox[{{5.506600452517779, 0.}, {6.385545785562558, 
      0.3045072758071905}}], 
     LineBox[{{5.506600452517779, 0.}, {5.682004010131423, 
      0.40159600632527037`}}], 
     LineBox[{{6.385545785562558, 0.3045072758071905}, {5.682004010131423, 
      0.40159600632527037`}}], 
     LineBox[{{6.130601775410827, 0.9068475626826816}, {6.358499830943927, 
      1.311292403651488}}]}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{5.537061198516035, 2.8245369474083057`}, 
        0.05042590719951483]}, 
      InsetBox["\<\"1\"\>", 
       Offset[{2, 2}, {5.58748710571555, 2.8749628546078205`}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{5.10225274259389, 2.6210653049498127`}, 0.05042590719951483]},
       InsetBox["\<\"2\"\>", 
       Offset[{2, 2}, {5.152678649793406, 2.6714912121493275`}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{4.637172176167137, 2.726008880327048}, 0.05042590719951483]}, 
      InsetBox["\<\"3\"\>", 
       Offset[{2, 2}, {4.687598083366653, 2.7764347875265627`}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{4.990012407604223, 2.3337638820704143`}, 
        0.05042590719951483]}, 
      InsetBox["\<\"4\"\>", 
       Offset[{2, 2}, {5.040438314803739, 2.384189789269929}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{5.3346096828874385`, 1.9128966174370927`}, 
        0.05042590719951483]}, 
      InsetBox["\<\"5\"\>", 
       Offset[{2, 2}, {5.385035590086954, 1.9633225246366075`}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{4.690993902925683, 2.172176235833583}, 0.05042590719951483]}, 
      InsetBox["\<\"6\"\>", 
       Offset[{2, 2}, {4.7414198101251985`, 2.222602143033098}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], 
       DiskBox[{4.610193974691428, 1.6388875895579424`}, 
        0.05042590719951483]}, 
      InsetBox["\<\"7\"\>", 
       Offset[{2, 2}, {4.660619881890943, 1.6893134967574572`}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], 
       DiskBox[{5.941981719487779, 1.3045575744299338`}, 
        0.05042590719951483]}, 
      InsetBox["\<\"21\"\>", 
       Offset[{2, 2}, {5.992407626687294, 1.3549834816294486`}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], 
       DiskBox[{2.266698638797507, 0.8633583731856187}, 0.05042590719951483]},
       InsetBox["\<\"8\"\>", 
       Offset[{2, 2}, {2.317124545997022, 0.9137842803851335}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], 
       DiskBox[{2.1219916908584757`, 1.3690567138753245`}, 
        0.05042590719951483]}, 
      InsetBox["\<\"11\"\>", 
       Offset[{2, 2}, {2.1724175980579905`, 1.4194826210748392`}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], 
       DiskBox[{2.183197562043367, 1.8957354910661806`}, 
        0.05042590719951483]}, 
      InsetBox["\<\"14\"\>", 
       Offset[{2, 2}, {2.2336234692428816`, 1.9461613982656953`}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], 
       DiskBox[{5.189309117813626, 0.885068943080795}, 0.05042590719951483]}, 
      InsetBox["\<\"19\"\>", 
       Offset[{2, 2}, {5.239735025013141, 0.9354948502803098}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], 
       DiskBox[{1.5501181717810808`, 0.28846931422372557`}, 
        0.05042590719951483]}, 
      InsetBox["\<\"9\"\>", 
       Offset[{2, 2}, {1.6005440789805956`, 0.3388952214232404}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], 
       DiskBox[{0.7008086842779555, 0.6163902799378378}, 
        0.05042590719951483]}, 
      InsetBox["\<\"10\"\>", 
       Offset[{2, 2}, {0.7512345914774703, 0.6668161871373526}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], 
       DiskBox[{1.233109227786013, 1.3265793784484672`}, 
        0.05042590719951483]}, 
      InsetBox["\<\"12\"\>", 
       Offset[{2, 2}, {1.2835351349855277`, 1.377005285647982}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], 
       DiskBox[{0., 1.2617871083472698`}, 0.05042590719951483]}, 
      InsetBox["\<\"13\"\>", 
       Offset[{2, 2}, {0.05042590719951483, 1.3122130155467846`}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], 
       DiskBox[{0.6137371133084768, 1.9756685633859847`}, 
        0.05042590719951483]}, 
      InsetBox["\<\"16\"\>", 
       Offset[{2, 2}, {0.6641630205079916, 2.0260944705854995`}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], 
       DiskBox[{1.406473939441589, 2.403282801125575}, 0.05042590719951483]}, 
      InsetBox["\<\"15\"\>", 
       Offset[{2, 2}, {1.4568998466411038`, 2.45370870832509}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], DiskBox[{5.506600452517779, 0.}, 0.05042590719951483]},
       InsetBox["\<\"17\"\>", 
       Offset[{2, 2}, {5.557026359717295, 0.05042590719951483}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], 
       DiskBox[{6.385545785562558, 0.3045072758071905}, 0.05042590719951483]},
       InsetBox["\<\"18\"\>", 
       Offset[{2, 2}, {6.435971692762073, 0.35493318300670534`}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], 
       DiskBox[{5.682004010131423, 0.40159600632527037`}, 
        0.05042590719951483]}, 
      InsetBox["\<\"20\"\>", 
       Offset[{2, 2}, {5.732429917330938, 0.4520219135247852}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], 
       DiskBox[{6.130601775410827, 0.9068475626826816}, 0.05042590719951483]},
       InsetBox["\<\"22\"\>", 
       Offset[{2, 2}, {6.181027682610342, 0.9572734698821964}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], 
       DiskBox[{6.358499830943927, 1.311292403651488}, 0.05042590719951483]}, 
      InsetBox["\<\"23\"\>", 
       Offset[{2, 2}, {6.408925738143442, 1.3617183108510027`}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}}}},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["cohesion"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "2", ",", "5", ",", "3"}], "}"}]], "Output"]
}, Open  ]],

Cell["Science camp network", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sc", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Pauline\>\"", "\[UndirectedEdge]", "\"\<Jennie\>\""}], 
       ",", 
       RowBox[{"\"\<Pauline\>\"", "\[UndirectedEdge]", "\"\<Ann\>\""}], ",", 
       RowBox[{"\"\<Jennie\>\"", "\[UndirectedEdge]", "\"\<Ann\>\""}], ",", 
       RowBox[{"\"\<Jennie\>\"", "\[UndirectedEdge]", "\"\<Michael\>\""}], 
       ",", 
       RowBox[{"\"\<Michael\>\"", "\[UndirectedEdge]", "\"\<Ann\>\""}], ",", 
       RowBox[{"\"\<Holly\>\"", "\[UndirectedEdge]", "\"\<Jennie\>\""}], ",", 
       
       RowBox[{"\"\<Jennie\>\"", "\[UndirectedEdge]", "\"\<Lee\>\""}], ",", 
       RowBox[{"\"\<Michael\>\"", "\[UndirectedEdge]", "\"\<Lee\>\""}], ",", 
       RowBox[{"\"\<Harry\>\"", "\[UndirectedEdge]", "\"\<Bert\>\""}], ",", 
       RowBox[{"\"\<Harry\>\"", "\[UndirectedEdge]", "\"\<Don\>\""}], ",", 
       RowBox[{"\"\<Don\>\"", "\[UndirectedEdge]", "\"\<Bert\>\""}], ",", 
       RowBox[{"\"\<Gery\>\"", "\[UndirectedEdge]", "\"\<Russ\>\""}], ",", 
       RowBox[{"\"\<Russ\>\"", "\[UndirectedEdge]", "\"\<Bert\>\""}], ",", 
       RowBox[{"\"\<Michael\>\"", "\[UndirectedEdge]", "\"\<John\>\""}], ",", 
       
       RowBox[{"\"\<Gery\>\"", "\[UndirectedEdge]", "\"\<John\>\""}], ",", 
       RowBox[{"\"\<Russ\>\"", "\[UndirectedEdge]", "\"\<John\>\""}], ",", 
       RowBox[{"\"\<Holly\>\"", "\[UndirectedEdge]", "\"\<Pam\>\""}], ",", 
       RowBox[{"\"\<Pam\>\"", "\[UndirectedEdge]", "\"\<Carol\>\""}], ",", 
       RowBox[{"\"\<Holly\>\"", "\[UndirectedEdge]", "\"\<Carol\>\""}], ",", 
       RowBox[{"\"\<Holly\>\"", "\[UndirectedEdge]", "\"\<Bill\>\""}], ",", 
       RowBox[{"\"\<Bill\>\"", "\[UndirectedEdge]", "\"\<Pauline\>\""}], ",", 
       
       RowBox[{"\"\<Bill\>\"", "\[UndirectedEdge]", "\"\<Michael\>\""}], ",", 
       
       RowBox[{"\"\<Bill\>\"", "\[UndirectedEdge]", "\"\<Lee\>\""}], ",", 
       RowBox[{"\"\<Harry\>\"", "\[UndirectedEdge]", "\"\<Steve\>\""}], ",", 
       RowBox[{"\"\<Steve\>\"", "\[UndirectedEdge]", "\"\<Don\>\""}], ",", 
       RowBox[{"\"\<Steve\>\"", "\[UndirectedEdge]", "\"\<Bert\>\""}], ",", 
       RowBox[{"\"\<Gery\>\"", "\[UndirectedEdge]", "\"\<Steve\>\""}], ",", 
       RowBox[{"\"\<Russ\>\"", "\[UndirectedEdge]", "\"\<Steve\>\""}], ",", 
       RowBox[{"\"\<Pam\>\"", "\[UndirectedEdge]", "\"\<Brazey\>\""}], ",", 
       RowBox[{"\"\<Brazey\>\"", "\[UndirectedEdge]", "\"\<Carol\>\""}], ",", 
       
       RowBox[{"\"\<Pam\>\"", "\[UndirectedEdge]", "\"\<Pat\>\""}], ",", 
       RowBox[{"\"\<Brazey\>\"", "\[UndirectedEdge]", "\"\<Pat\>\""}], ",", 
       RowBox[{"\"\<Carol\>\"", "\[UndirectedEdge]", "\"\<Pat\>\""}], ",", 
       RowBox[{"\"\<Holly\>\"", "\[UndirectedEdge]", "\"\<Pat\>\""}], ",", 
       RowBox[{"\"\<Gery\>\"", "\[UndirectedEdge]", "\"\<Pat\>\""}]}], "}"}], 
     ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"blocks", ",", "cohesion"}], "}"}], "=", 
  RowBox[{"IGCohesiveBlocks", "[", "sc", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Pauline\"\>", ",", "\<\"Jennie\"\>", ",", "\<\"Ann\"\>", 
       ",", "\<\"Michael\"\>", ",", "\<\"Holly\"\>", ",", "\<\"Lee\"\>", 
       ",", "\<\"Harry\"\>", ",", "\<\"Bert\"\>", ",", "\<\"Don\"\>", 
       ",", "\<\"Gery\"\>", ",", "\<\"Russ\"\>", ",", "\<\"John\"\>", 
       ",", "\<\"Pam\"\>", ",", "\<\"Carol\"\>", ",", "\<\"Bill\"\>", 
       ",", "\<\"Steve\"\>", ",", "\<\"Brazey\"\>", ",", "\<\"Pat\"\>"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Harry\"\>", ",", "\<\"Bert\"\>", ",", "\<\"Don\"\>", 
       ",", "\<\"Steve\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Holly\"\>", ",", "\<\"Pam\"\>", ",", "\<\"Carol\"\>", 
       ",", "\<\"Brazey\"\>", ",", "\<\"Pat\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Pauline\"\>", ",", "\<\"Jennie\"\>", ",", "\<\"Ann\"\>", 
       ",", "\<\"Michael\"\>", ",", "\<\"Lee\"\>", ",", "\<\"Bill\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "3", ",", "3"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", 
  RowBox[{"sc", ",", 
   RowBox[{"Rest", "@", "blocks"}], ",", 
   RowBox[{"CommunityRegionStyle", "\[Rule]", 
    RowBox[{"ColorData", "[", "96", "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.23792049598428056`, 0.6887478786077664, 1.], EdgeForm[
     GrayLevel[0.5]], 
     FilledCurveBox[
      BSplineCurve[{{5.002480361027624, 0.9015253109549735}, {
       5.558555972214111, 0.703699360614245}, {5.843086587868469, 
       0.703699360614245}, {5.939579561335043, 1.2033709194024649`}, {
       5.939579561335043, 1.4879015350568228`}, {5.520313107247526, 
       1.5247306524963442`}, {5.235782491593168, 1.5247306524963442`}, {
       5.002480361027624, 1.1860559266093313`}}, SplineClosed -> True]]}, 
    {RGBColor[1., 0.519591857134656, 0.3096724501821112], EdgeForm[GrayLevel[
     0.5]], FilledCurveBox[
      BSplineCurve[{{0.9745439098193742, 2.32872770393606}, {
       1.259074525473732, 2.32872770393606}, {1.9257803942657268`, 
       2.614497629001528}, {1.9257803942657268`, 2.8990282446558857`}, {
       1.8138448554728486`, 3.5784783916707346`}, {1.5293142398184907`, 
       3.5784783916707346`}, {1.0026344266194995`, 3.1639033079858985`}, {
       0.9745439098193742, 2.6132583195904178`}}, SplineClosed -> True]]}, 
    {RGBColor[0., 0.7904150911428401, 0.7051174286912738], EdgeForm[GrayLevel[
     0.5]], FilledCurveBox[
      BSplineCurve[{{-0.1422653078271789, 0.3329887364739195}, {
       0.2863918468443581, -0.08672841119349978}, {
       0.762038941032019, -0.1422653078271789}, {
       1.0465695566863769`, -0.1422653078271789}, {1.2778481347145745`, 
       0.1495892954288967}, {1.2778481347145745`, 0.4341199110832545}, {
       0.7527690295221376, 0.982868369474742}, {0.4682384138677798, 
       0.982868369474742}, {-0.1422653078271789, 0.6175193521282774}}, 
       SplineClosed -> True]]}}, {
    {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
     LineBox[{{0., 0.4752540443010984}, {0.6253136579165162, 
      0.4883912700523385}}], 
     LineBox[{{0., 0.4752540443010984}, {0.428657154671537, 
      0.05553689663367911}}], 
     LineBox[{{0., 0.4752540443010984}, {0.6105037216949587, 
      0.840603061647563}}], 
     LineBox[{{0.6253136579165162, 0.4883912700523385}, {0.428657154671537, 
      0.05553689663367911}}], 
     LineBox[{{0.6253136579165162, 0.4883912700523385}, {1.1355828268873955`, 
      0.2918546032560756}}], 
     BezierCurveBox[{{0.6253136579165162, 0.4883912700523385}, {
      0.7426338217659414, 1.1161211273282727`}, {0.8673589537261452, 
      1.567745088806595}, {0.9920840856863492, 2.019369050284917}, {
      1.1168092176465532`, 2.470993011763239}},
      SplineDegree->2], 
     LineBox[{{0.6253136579165162, 0.4883912700523385}, {0.9043042488591979, 
      0.}}], LineBox[{{0.428657154671537, 0.05553689663367911}, {
      1.1355828268873955`, 0.2918546032560756}}], 
     LineBox[{{1.1355828268873955`, 0.2918546032560756}, {0.9043042488591979, 
      0.}}], BezierCurveBox[{{1.1355828268873955`, 0.2918546032560756}, {
      1.593317828749357, 0.4206975217011002}, {2.0510528306113183`, 
      0.5495404401461248}, {2.50878783247328, 0.6783833585911494}, {
      2.966522834335241, 0.807226277036174}},
      SplineDegree->2], 
     LineBox[{{1.1355828268873955`, 0.2918546032560756}, {0.6105037216949587, 
      0.840603061647563}}], 
     LineBox[{{1.1168092176465532`, 2.470993011763239}, {1.1448997344466785`, 
      3.0216380001587195`}}], 
     LineBox[{{1.1168092176465532`, 2.470993011763239}, {1.4301947084613418`, 
      2.9921481493688455`}}], 
     BezierCurveBox[{{1.1168092176465532`, 2.470993011763239}, {
      0.9920840856863492, 2.019369050284917}, {0.8673589537261452, 
      1.567745088806595}, {0.7426338217659414, 1.1161211273282727`}, {
      0.6105037216949587, 0.840603061647563}},
      SplineDegree->2], 
     LineBox[{{1.1168092176465532`, 2.470993011763239}, {1.7835150864385478`, 
      2.7567629368287068`}}], 
     LineBox[{{0.9043042488591979, 0.}, {0.6105037216949587, 
      0.840603061647563}}], 
     LineBox[{{5.70082128004129, 0.8459646684414238}, {5.378047799420347, 
      1.3824653446691653`}}], 
     LineBox[{{5.70082128004129, 0.8459646684414238}, {5.797314253507864, 
      1.3456362272296438`}}], 
     LineBox[{{5.70082128004129, 0.8459646684414238}, {5.144745668854803, 
      1.0437906187821524`}}], 
     LineBox[{{5.378047799420347, 1.3824653446691653`}, {5.797314253507864, 
      1.3456362272296438`}}], 
     BezierCurveBox[{{5.378047799420347, 1.3824653446691653`}, {
      4.7678143832608235`, 1.1642647804200996`}, {4.313115720811663, 
      1.1718473667623759`}, {3.8584170583625013`, 1.1794299531046522`}, {
      3.4868710957604225`, 1.0284782819766194`}},
      SplineDegree->2], 
     LineBox[{{5.378047799420347, 1.3824653446691653`}, {5.144745668854803, 
      1.0437906187821524`}}], 
     LineBox[{{5.797314253507864, 1.3456362272296438`}, {5.144745668854803, 
      1.0437906187821524`}}], 
     LineBox[{{3.237412996219175, 1.5040810543875465`}, {3.4868710957604225`, 
      1.0284782819766194`}}], 
     LineBox[{{3.237412996219175, 1.5040810543875465`}, {2.966522834335241, 
      0.807226277036174}}], 
     BezierCurveBox[{{3.237412996219175, 1.5040810543875465`}, {
      3.8584170583625013`, 1.1794299531046522`}, {4.313115720811663, 
      1.1718473667623759`}, {4.7678143832608235`, 1.1642647804200996`}, {
      5.144745668854803, 1.0437906187821524`}},
      SplineDegree->2], 
     BezierCurveBox[{{3.237412996219175, 1.5040810543875465`}, {
      2.8739385187740183`, 1.8172515249978365`}, {2.5104640413288615`, 
      2.1304219956081267`}, {2.1469895638837047`, 2.4435924662184165`}, {
      1.7835150864385478`, 2.7567629368287068`}},
      SplineDegree->2], 
     LineBox[{{3.4868710957604225`, 1.0284782819766194`}, {2.966522834335241, 
      0.807226277036174}}], 
     BezierCurveBox[{{3.4868710957604225`, 1.0284782819766194`}, {
      3.8584170583625013`, 1.1794299531046522`}, {4.313115720811663, 
      1.1718473667623759`}, {4.7678143832608235`, 1.1642647804200996`}, {
      5.144745668854803, 1.0437906187821524`}},
      SplineDegree->2], 
     LineBox[{{1.1448997344466785`, 3.0216380001587195`}, {
      1.4301947084613418`, 2.9921481493688455`}}], 
     LineBox[{{1.1448997344466785`, 3.0216380001587195`}, {
      1.6715795476456696`, 3.4362130838435556`}}], 
     LineBox[{{1.1448997344466785`, 3.0216380001587195`}, {
      1.7835150864385478`, 2.7567629368287068`}}], 
     LineBox[{{1.4301947084613418`, 2.9921481493688455`}, {
      1.6715795476456696`, 3.4362130838435556`}}], 
     LineBox[{{1.4301947084613418`, 2.9921481493688455`}, {
      1.7835150864385478`, 2.7567629368287068`}}], 
     LineBox[{{1.6715795476456696`, 3.4362130838435556`}, {
      1.7835150864385478`, 2.7567629368287068`}}]}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{0., 0.4752540443010984}, 0.04742176927572629]}, 
      InsetBox["\<\"Pauline\"\>", 
       Offset[{2, 2}, {0.04742176927572629, 0.5226758135768247}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{0.6253136579165162, 0.4883912700523385}, 
        0.04742176927572629]}, 
      InsetBox["\<\"Jennie\"\>", 
       Offset[{2, 2}, {0.6727354271922424, 0.5358130393280648}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{0.428657154671537, 0.05553689663367911}, 
        0.04742176927572629]}, 
      InsetBox["\<\"Ann\"\>", 
       Offset[{2, 2}, {0.47607892394726326`, 0.1029586659094054}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{1.1355828268873955`, 0.2918546032560756}, 
        0.04742176927572629]}, 
      InsetBox["\<\"Michael\"\>", 
       Offset[{2, 2}, {1.183004596163122, 0.3392763725318019}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], 
       DiskBox[{1.1168092176465532`, 2.470993011763239}, 
        0.04742176927572629]}, 
      InsetBox["\<\"Holly\"\>", 
       Offset[{2, 2}, {1.1642309869222796`, 2.518414781038965}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{0.9043042488591979, 0.}, 0.04742176927572629]}, 
      InsetBox["\<\"Lee\"\>", 
       Offset[{2, 2}, {0.9517260181349242, 0.04742176927572629}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], 
       DiskBox[{5.70082128004129, 0.8459646684414238}, 0.04742176927572629]}, 
      InsetBox["\<\"Harry\"\>", 
       Offset[{2, 2}, {5.748243049317017, 0.8933864377171501}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], 
       DiskBox[{5.378047799420347, 1.3824653446691653`}, 
        0.04742176927572629]}, 
      InsetBox["\<\"Bert\"\>", 
       Offset[{2, 2}, {5.425469568696074, 1.4298871139448917`}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], 
       DiskBox[{5.797314253507864, 1.3456362272296438`}, 
        0.04742176927572629]}, 
      InsetBox["\<\"Don\"\>", 
       Offset[{2, 2}, {5.84473602278359, 1.3930579965053702`}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      DiskBox[{3.237412996219175, 1.5040810543875465`}, 0.04742176927572629], 
      InsetBox["\<\"Gery\"\>", 
       Offset[{2, 2}, {3.2848347654949013`, 1.5515028236632729`}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      DiskBox[{3.4868710957604225`, 1.0284782819766194`}, 
       0.04742176927572629], 
      InsetBox["\<\"Russ\"\>", 
       Offset[{2, 2}, {3.5342928650361487`, 1.0759000512523458`}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      DiskBox[{2.966522834335241, 0.807226277036174}, 0.04742176927572629], 
      InsetBox["\<\"John\"\>", 
       Offset[{2, 2}, {3.0139446036109674`, 0.8546480463119003}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], 
       DiskBox[{1.1448997344466785`, 3.0216380001587195`}, 
        0.04742176927572629]}, 
      InsetBox["\<\"Pam\"\>", 
       Offset[{2, 2}, {1.1923215037224049`, 3.0690597694344457`}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], 
       DiskBox[{1.4301947084613418`, 2.9921481493688455`}, 
        0.04742176927572629]}, 
      InsetBox["\<\"Carol\"\>", 
       Offset[{2, 2}, {1.4776164777370682`, 3.0395699186445717`}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], 
       DiskBox[{0.6105037216949587, 0.840603061647563}, 0.04742176927572629]},
       InsetBox["\<\"Bill\"\>", 
       Offset[{2, 2}, {0.657925490970685, 0.8880248309232893}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], 
       DiskBox[{5.144745668854803, 1.0437906187821524`}, 
        0.04742176927572629]}, 
      InsetBox["\<\"Steve\"\>", 
       Offset[{2, 2}, {5.19216743813053, 1.0912123880578788`}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], 
       DiskBox[{1.6715795476456696`, 3.4362130838435556`}, 
        0.04742176927572629]}, 
      InsetBox["\<\"Brazey\"\>", 
       Offset[{2, 2}, {1.719001316921396, 3.483634853119282}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], 
       DiskBox[{1.7835150864385478`, 2.7567629368287068`}, 
        0.04742176927572629]}, 
      InsetBox["\<\"Pat\"\>", 
       Offset[{2, 2}, {1.8309368557142742`, 2.804184706104433}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}}}},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Cliques and independent vertex sets", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IG*Clique*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGCliqueNumber",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1093666170832-3785256", {"IGCliqueNumber", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLargestCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1093666170832-3785256", {"IGLargestCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalCliquesCount",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1093666170832-3785256", {"IGMaximalCliquesCount", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGWeightedCliqueNumber",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1093666170832-3785256", {
            "IGWeightedCliqueNumber", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCliques",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info1093666170832-3785256", {"IGCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLargestWeightedCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1093666170832-3785256", {
            "IGLargestWeightedCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalCliqueSizeCounts",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1093666170832-3785256", {
            "IGMaximalCliqueSizeCounts", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGWeightedCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1093666170832-3785256", {"IGWeightedCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCliqueSizeCounts",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1093666170832-3785256", {"IGCliqueSizeCounts", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1093666170832-3785256", {"IGMaximalCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGMaximalWeightedCliques",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1093666170832-3785256", {
            "IGMaximalWeightedCliques", "IGraphM`"}},
          ButtonNote->"IGraphM`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.2375]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s ",
 Cell[BoxData[
  FormBox["FindClique", TraditionalForm]]],
 " function only finds maximal cliques. IGraph/M provides functions for \
finding or counting all cliques, i.e. complete subgraphs, of a graph."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<NetworkGraph\>\"", ",", "\"\<CoauthorshipsInNetworkScience\>\""}], 
     "}"}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"VertexCount", "[", "g", "]"}], ",", 
   RowBox[{"EdgeCount", "[", "g", "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1589", ",", "2742"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
Simply counting cliques is much more memory efficient (and faster) than \
returning all of them.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGCliqueSizeCounts", "[", "g", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1589", ",", "2742", ",", "3764", ",", "7159", ",", "17314", ",", "39906", 
   ",", "78055", ",", "126140", ",", "167993", ",", "184759", ",", "167960", 
   ",", "125970", ",", "77520", ",", "38760", ",", "15504", ",", "4845", ",", 
   "1140", ",", "190", ",", "20", ",", "1"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"%", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Range", "@", 
     RowBox[{"Length", "[", "%", "]"}]}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.13851851851851854`, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.5599999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5370370370370371, 0.}, {1.462962962962963, 1589.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{43.794770849516276`, 58.33931278612472}, {
           87.01973997628855, 89.13891038871624}}],
         StatusArea[#, 1589]& ,
         TagBoxNote->"1589"],
        StyleBox["1589", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1589, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5370370370370372`, 0.}, {2.4629629629629632`, 
            2742.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{58.9628761410534, 73.50741807766185}, {
           85.84484791491087, 89.13891038871624}}],
         StatusArea[#, 2742]& ,
         TagBoxNote->"2742"],
        StyleBox["2742", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2742, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.537037037037037, 0.}, {3.4629629629629632`, 3764.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{74.13098143259053, 88.67552336919898}, {
           84.80344315625695, 89.13891038871624}}],
         StatusArea[#, 3764]& ,
         TagBoxNote->"3764"],
        StyleBox["3764", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3764, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.537037037037037, 0.}, {4.462962962962963, 7159.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{89.29908672412766, 103.8436286607361}, {
           81.34398214292024, 89.13891038871624}}],
         StatusArea[#, 7159]& ,
         TagBoxNote->"7159"],
        StyleBox["7159", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7159, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.537037037037037, 0.}, {5.462962962962963, 17314.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{104.46719201566478`, 119.01173395227323`}, {
           70.99616871422094, 89.13891038871624}}],
         StatusArea[#, 17314]& ,
         TagBoxNote->"17314"],
        StyleBox["17314", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[17314, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.537037037037037, 0.}, {6.462962962962963, 39906.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{119.63529730720191`, 134.17983924381036`}, {
           47.97521342311559, 89.13891038871624}}],
         StatusArea[#, 39906]& ,
         TagBoxNote->"39906"],
        StyleBox["39906", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[39906, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.537037037037037, 0.}, {7.462962962962963, 78055.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{134.80340259873904`, 149.3479445353475}, {
           9.101876693283003, 89.13891038871624}}],
         StatusArea[#, 78055]& ,
         TagBoxNote->"78055"],
        StyleBox["78055", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[78055, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.537037037037037, 0.}, {8.462962962962964, 126140.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{149.97150789027617`, 
           164.51604982688463`}, {-39.8961153026802, 89.13891038871624}}],
         StatusArea[#, 126140]& ,
         TagBoxNote->"126140"],
        StyleBox["126140", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[126140, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.537037037037038, 0.}, {9.462962962962964, 167993.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{165.1396131818133, 
           179.68415511842176`}, {-82.54378004235052, 89.13891038871624}}],
         StatusArea[#, 167993]& ,
         TagBoxNote->"167993"],
        StyleBox["167993", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[167993, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.537037037037038, 0.}, {10.462962962962964`, 
            184759.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{180.30771847335043`, 
           194.8522604099589}, {-99.62811681690222, 89.13891038871624}}],
         StatusArea[#, 184759]& ,
         TagBoxNote->"184759"],
        StyleBox["184759", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[184759, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{10.537037037037038`, 0.}, {11.462962962962964`, 
            167960.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{195.47582376488756`, 
           210.020365701496}, {-82.51015346990864, 89.13891038871624}}],
         StatusArea[#, 167960]& ,
         TagBoxNote->"167960"],
        StyleBox["167960", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[167960, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11.537037037037038`, 0.}, {12.462962962962964`, 
            125970.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{210.6439290564247, 
           225.18847099303312`}, {-39.722887505252416`, 89.13891038871624}}],
         StatusArea[#, 125970]& ,
         TagBoxNote->"125970"],
        StyleBox["125970", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[125970, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{12.537037037037038`, 0.}, {13.462962962962964`, 
            77520.}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{225.8120343479618, 240.35657628457025`}, {
           9.647034761658603, 89.13891038871624}}],
         StatusArea[#, 77520]& ,
         TagBoxNote->"77520"],
        StyleBox["77520", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[77520, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{13.537037037037038`, 0.}, {14.462962962962964`, 
            38760.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{240.98013963949893`, 255.52468157610738`}, {
           49.14297257518742, 89.13891038871624}}],
         StatusArea[#, 38760]& ,
         TagBoxNote->"38760"],
        StyleBox["38760", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[38760, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{14.537037037037038`, 0.}, {15.462962962962964`, 
            15504.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{256.14824493103606`, 270.69278686764454`}, {
           72.84053526330472, 89.13891038871624}}],
         StatusArea[#, 15504]& ,
         TagBoxNote->"15504"],
        StyleBox["15504", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[15504, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{15.537037037037038`, 0.}, {16.462962962962965`, 
            4845.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{271.3163502225732, 285.8608921591817}, {
           83.70191816202514, 89.13891038871624}}],
         StatusArea[#, 4845]& ,
         TagBoxNote->"4845"],
        StyleBox["4845", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4845, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{16.537037037037038`, 0.}, {17.462962962962965`, 
            1140.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{286.4844555141103, 301.0289974507188}, {
           87.47726515890658, 89.13891038871624}}],
         StatusArea[#, 1140]& ,
         TagBoxNote->"1140"],
        StyleBox["1140", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1140, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{17.537037037037038`, 0.}, {18.462962962962965`, 
            190.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{301.65256080564745`, 316.19710274225594`}, {
           88.44530285041463, 89.13891038871624}}],
         StatusArea[#, 190]& ,
         TagBoxNote->"190"],
        StyleBox["190", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[190, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{18.537037037037038`, 0.}, {19.462962962962965`, 20.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{316.8206660971846, 331.36520803379307`}, {
           88.61853064784239, 89.13891038871624}}],
         StatusArea[#, 20]& ,
         TagBoxNote->"20"],
        StyleBox["20", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[20, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{19.537037037037038`, 0.}, {20.462962962962965`, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{331.9887713887217, 346.5333133253302}, {
           88.63789140167255, 89.13891038871624}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.13851851851851854`, 0.}, {20.869451851851853`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5370370370370371, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5370370370370371, 0.}]}],
          LineBox[{{20.462962962962965`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {20.462962962962965`, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {
           LineBox[{{1.462962962962963, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.462962962962963, 
              0.}]}], LineBox[{{1.5370370370370372`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5370370370370372`, 
              0.}]}], LineBox[{{2.4629629629629632`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4629629629629632`, 
              0.}]}], LineBox[{{2.537037037037037, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.537037037037037, 
              0.}]}], LineBox[{{3.4629629629629632`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4629629629629632`, 
              0.}]}], LineBox[{{3.537037037037037, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.537037037037037, 
              0.}]}], LineBox[{{4.462962962962963, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.462962962962963, 
              0.}]}], LineBox[{{4.537037037037036, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.537037037037036, 
              0.}]}], LineBox[{{5.462962962962963, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.462962962962963, 
              0.}]}], LineBox[{{5.537037037037037, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.537037037037037, 
              0.}]}], LineBox[{{6.462962962962963, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.462962962962963, 
              0.}]}], LineBox[{{6.537037037037037, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.537037037037037, 
              0.}]}], LineBox[{{7.462962962962963, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.462962962962963, 
              0.}]}], 
           LineBox[{{7.537037037037037, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.537037037037037, 
              0.}]}], LineBox[{{8.462962962962964, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.462962962962964, 
              0.}]}], LineBox[{{8.537037037037036, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.537037037037036, 
              0.}]}], LineBox[{{9.462962962962962, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {9.462962962962962, 
              0.}]}], LineBox[{{9.537037037037036, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {9.537037037037036, 
              0.}]}], LineBox[{{10.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {10.462962962962962`, 
              0.}]}], LineBox[{{10.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {10.537037037037036`, 
              0.}]}], LineBox[{{11.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {11.462962962962962`, 
              0.}]}], LineBox[{{11.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {11.537037037037036`, 
              0.}]}], LineBox[{{12.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {12.462962962962962`, 
              0.}]}], LineBox[{{12.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {12.537037037037036`, 
              0.}]}], LineBox[{{13.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {13.462962962962962`, 
              0.}]}], LineBox[{{13.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {13.537037037037036`, 
              0.}]}], LineBox[{{14.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {14.462962962962962`, 
              0.}]}], LineBox[{{14.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {14.537037037037036`, 
              0.}]}], LineBox[{{15.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {15.462962962962962`, 
              0.}]}], LineBox[{{15.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {15.537037037037036`, 
              0.}]}], LineBox[{{16.462962962962965`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {16.462962962962965`, 
              0.}]}], 
           LineBox[{{16.537037037037038`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {16.537037037037038`, 
              0.}]}], LineBox[{{17.462962962962965`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {17.462962962962965`, 
              0.}]}], LineBox[{{17.537037037037038`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {17.537037037037038`, 
              0.}]}], LineBox[{{18.462962962962965`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {18.462962962962965`, 
              0.}]}], LineBox[{{18.537037037037038`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {18.537037037037038`, 
              0.}]}], LineBox[{{19.462962962962965`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {19.462962962962965`, 
              0.}]}], LineBox[{{19.537037037037038`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {19.537037037037038`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["1", Offset[{0., -2.}, {1., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["2", Offset[{0., -2.}, {2., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["3", Offset[{0., -2.}, {3., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["4", Offset[{0., -2.}, {4., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["5", Offset[{0., -2.}, {5., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["6", Offset[{0., -2.}, {6., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["7", Offset[{0., -2.}, {7., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["8", Offset[{0., -2.}, {8., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["9", Offset[{0., -2.}, {8.999999999999998, 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["10", Offset[{0., -2.}, {9.999999999999998, 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["11", Offset[{0., -2.}, {10.999999999999998`, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["12", Offset[{0., -2.}, {11.999999999999998`, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["13", Offset[{0., -2.}, {12.999999999999998`, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["14", Offset[{0., -2.}, {13.999999999999998`, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["15", Offset[{0., -2.}, {14.999999999999998`, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["16", Offset[{0., -2.}, {16., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["17", Offset[{0., -2.}, {17., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["18", Offset[{0., -2.}, {18., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["19", Offset[{0., -2.}, {19., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["20", Offset[{0., -2.}, {20., 0.}], {0, 1}, Automatic, {1, 
           0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.13851851851851854`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["1", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["2", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["3", TraditionalForm], 0}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["4", TraditionalForm], 0}, {5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["5", TraditionalForm], 0}, {6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["6", TraditionalForm], 0}, {7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["7", TraditionalForm], 0}, {8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["8", TraditionalForm], 0}, {9., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {9., 
       FormBox["9", TraditionalForm], 0}, {10., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {10., 
       FormBox["10", TraditionalForm], 0}, {11., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {11., 
       FormBox["11", TraditionalForm], 0}, {12., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {12., 
       FormBox["12", TraditionalForm], 0}, {13., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {13., 
       FormBox["13", TraditionalForm], 0}, {14., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {14., 
       FormBox["14", TraditionalForm], 0}, {15., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {15., 
       FormBox["15", TraditionalForm], 0}, {16., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {16., 
       FormBox["16", TraditionalForm], 0}, {17., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {17., 
       FormBox["17", TraditionalForm], 0}, {18., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {18., 
       FormBox["18", TraditionalForm], 0}, {19., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {19., 
       FormBox["19", TraditionalForm], 0}, {20., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {20., 
       FormBox["20", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {10., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {11., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {12., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {13., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {14., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {15., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {16., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {17., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {18., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {19., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {20., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGMaximalCliqueSizeCounts", "[", "g", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "128", ",", "221", ",", "195", ",", "108", ",", "52", ",", "19", ",", "3", 
   ",", "8", ",", "3", ",", "3", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"%", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Range", "@", 
     RowBox[{"Length", "[", "%", "]"}]}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.13851851851851854`, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.5599999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5370370370370371, 0.}, {1.462962962962963, 128.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.133729962573263`, 
           41.465816306842}, {-20.392492593760522`, 95.26352218621437}}],
         StatusArea[#, 128]& ,
         TagBoxNote->"128"],
        StyleBox["128", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[128, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5370370370370372`, 0.}, {2.4629629629629632`, 
            221.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{42.152383214383505`, 
           57.484469558652236`}, {-104.06053458233603`, 95.26352218621437}}],
         StatusArea[#, 221]& ,
         TagBoxNote->"221"],
        StyleBox["221", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[221, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.537037037037037, 0.}, {3.4629629629629632`, 195.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{58.17103646619374, 
           73.50312281046247}, {-80.66946908015362, 95.26352218621437}}],
         StatusArea[#, 195]& ,
         TagBoxNote->"195"],
        StyleBox["195", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[195, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.537037037037037, 0.}, {4.462962962962963, 108.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{74.18968971800398, 
           89.5217760622727}, {-2.3993652843894466`, 95.26352218621437}}],
         StatusArea[#, 108]& ,
         TagBoxNote->"108"],
        StyleBox["108", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[108, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.537037037037037, 0.}, {5.462962962962963, 52.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{90.20834296981421, 105.54042931408294`}, {
           47.981391181849574`, 95.26352218621437}}],
         StatusArea[#, 52]& ,
         TagBoxNote->"52"],
        StyleBox["52", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[52, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.537037037037037, 0.}, {6.462962962962963, 19.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{106.22699622162445`, 121.55908256589318`}, {
           77.67005124231184, 95.26352218621437}}],
         StatusArea[#, 19]& ,
         TagBoxNote->"19"],
        StyleBox["19", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[19, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.537037037037037, 0.}, {7.462962962962963, 3.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{122.24564947343468`, 137.5777358177034}, {
           92.06455308980871, 95.26352218621437}}],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.537037037037037, 0.}, {8.462962962962964, 8.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{138.2643027252449, 153.59638906951366`}, {
           87.56627126246595, 95.26352218621437}}],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.537037037037038, 0.}, {9.462962962962964, 3.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{154.28295597705517`, 169.6150423213239}, {
           92.06455308980871, 95.26352218621437}}],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.537037037037038, 0.}, {10.462962962962964`, 3.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{170.3016092288654, 185.63369557313413`}, {
           92.06455308980871, 95.26352218621437}}],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{10.537037037037038`, 0.}, {11.462962962962964`, 0.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{186.32026248067564`, 201.65234882494437`}, {
           94.76352218621437, 95.26352218621437}}],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11.537037037037038`, 0.}, {12.462962962962964`, 0.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{202.33891573248587`, 217.6710020767546}, {
           94.76352218621437, 95.26352218621437}}],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{12.537037037037038`, 0.}, {13.462962962962964`, 0.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{218.3575689842961, 233.68965532856484`}, {
           94.76352218621437, 95.26352218621437}}],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{13.537037037037038`, 0.}, {14.462962962962964`, 0.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{234.37622223610634`, 249.70830858037507`}, {
           94.76352218621437, 95.26352218621437}}],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{14.537037037037038`, 0.}, {15.462962962962964`, 0.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{250.39487548791658`, 265.7269618321853}, {
           94.76352218621437, 95.26352218621437}}],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{15.537037037037038`, 0.}, {16.462962962962965`, 0.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{266.4135287397268, 281.7456150839956}, {
           94.76352218621437, 95.26352218621437}}],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{16.537037037037038`, 0.}, {17.462962962962965`, 0.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{282.43218199153705`, 297.7642683358058}, {
           94.76352218621437, 95.26352218621437}}],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{17.537037037037038`, 0.}, {18.462962962962965`, 0.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{298.4508352433473, 313.78292158761604`}, {
           94.76352218621437, 95.26352218621437}}],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{18.537037037037038`, 0.}, {19.462962962962965`, 0.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{314.4694884951575, 329.8015748394263}, {
           94.76352218621437, 95.26352218621437}}],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{19.537037037037038`, 0.}, {20.462962962962965`, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{330.48814174696776`, 345.8202280912365}, {
           93.86386582074581, 95.26352218621437}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.13851851851851854`, 0.}, {20.869451851851853`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5370370370370371, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5370370370370371, 0.}]}],
          LineBox[{{20.462962962962965`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {20.462962962962965`, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {
           LineBox[{{1.462962962962963, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.462962962962963, 
              0.}]}], 
           LineBox[{{1.5370370370370372`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5370370370370372`, 
              0.}]}], LineBox[{{2.4629629629629632`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4629629629629632`, 
              0.}]}], LineBox[{{2.537037037037037, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.537037037037037, 
              0.}]}], LineBox[{{3.4629629629629632`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4629629629629632`, 
              0.}]}], LineBox[{{3.537037037037037, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.537037037037037, 
              0.}]}], LineBox[{{4.462962962962963, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.462962962962963, 
              0.}]}], LineBox[{{4.537037037037036, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.537037037037036, 
              0.}]}], LineBox[{{5.462962962962963, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.462962962962963, 
              0.}]}], LineBox[{{5.537037037037037, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.537037037037037, 
              0.}]}], LineBox[{{6.462962962962963, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.462962962962963, 
              0.}]}], LineBox[{{6.537037037037037, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.537037037037037, 
              0.}]}], LineBox[{{7.462962962962963, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.462962962962963, 
              0.}]}], LineBox[{{7.537037037037037, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.537037037037037, 
              0.}]}], LineBox[{{8.462962962962964, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.462962962962964, 
              0.}]}], LineBox[{{8.537037037037036, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.537037037037036, 
              0.}]}], LineBox[{{9.462962962962962, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {9.462962962962962, 
              0.}]}], LineBox[{{9.537037037037036, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {9.537037037037036, 
              0.}]}], LineBox[{{10.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {10.462962962962962`, 
              0.}]}], LineBox[{{10.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {10.537037037037036`, 
              0.}]}], LineBox[{{11.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {11.462962962962962`, 
              0.}]}], LineBox[{{11.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {11.537037037037036`, 
              0.}]}], LineBox[{{12.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {12.462962962962962`, 
              0.}]}], LineBox[{{12.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {12.537037037037036`, 
              0.}]}], LineBox[{{13.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {13.462962962962962`, 
              0.}]}], LineBox[{{13.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {13.537037037037036`, 
              0.}]}], LineBox[{{14.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {14.462962962962962`, 
              0.}]}], LineBox[{{14.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {14.537037037037036`, 
              0.}]}], LineBox[{{15.462962962962962`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {15.462962962962962`, 
              0.}]}], LineBox[{{15.537037037037036`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {15.537037037037036`, 
              0.}]}], LineBox[{{16.462962962962965`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {16.462962962962965`, 
              0.}]}], LineBox[{{16.537037037037038`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {16.537037037037038`, 
              0.}]}], LineBox[{{17.462962962962965`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {17.462962962962965`, 
              0.}]}], LineBox[{{17.537037037037038`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {17.537037037037038`, 
              0.}]}], LineBox[{{18.462962962962965`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {18.462962962962965`, 
              0.}]}], LineBox[{{18.537037037037038`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {18.537037037037038`, 
              0.}]}], LineBox[{{19.462962962962965`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {19.462962962962965`, 
              0.}]}], LineBox[{{19.537037037037038`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {19.537037037037038`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["1", Offset[{0., -2.}, {1., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["2", Offset[{0., -2.}, {2., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["3", Offset[{0., -2.}, {3., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["4", Offset[{0., -2.}, {4., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["5", Offset[{0., -2.}, {5., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["6", Offset[{0., -2.}, {6., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["7", Offset[{0., -2.}, {7., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["8", Offset[{0., -2.}, {8., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["9", Offset[{0., -2.}, {8.999999999999998, 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["10", Offset[{0., -2.}, {9.999999999999998, 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["11", Offset[{0., -2.}, {10.999999999999998`, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["12", Offset[{0., -2.}, {11.999999999999998`, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["13", Offset[{0., -2.}, {12.999999999999998`, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["14", Offset[{0., -2.}, {13.999999999999998`, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["15", Offset[{0., -2.}, {14.999999999999998`, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["16", Offset[{0., -2.}, {16., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["17", Offset[{0., -2.}, {17., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["18", Offset[{0., -2.}, {18., 0.}], {0, 1}, Automatic, {1, 
           0}], InsetBox["19", Offset[{0., -2.}, {19., 0.}], {0, 1}, 
           Automatic, {1, 0}], 
          InsetBox["20", Offset[{0., -2.}, {20., 0.}], {0, 1}, Automatic, {1, 
           0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.13851851851851854`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["1", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["2", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["3", TraditionalForm], 0}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["4", TraditionalForm], 0}, {5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["5", TraditionalForm], 0}, {6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["6", TraditionalForm], 0}, {7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["7", TraditionalForm], 0}, {8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["8", TraditionalForm], 0}, {9., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {9., 
       FormBox["9", TraditionalForm], 0}, {10., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {10., 
       FormBox["10", TraditionalForm], 0}, {11., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {11., 
       FormBox["11", TraditionalForm], 0}, {12., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {12., 
       FormBox["12", TraditionalForm], 0}, {13., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {13., 
       FormBox["13", TraditionalForm], 0}, {14., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {14., 
       FormBox["14", TraditionalForm], 0}, {15., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {15., 
       FormBox["15", TraditionalForm], 0}, {16., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {16., 
       FormBox["16", TraditionalForm], 0}, {17., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {17., 
       FormBox["17", TraditionalForm], 0}, {18., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {18., 
       FormBox["18", TraditionalForm], 0}, {19., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {19., 
       FormBox["19", TraditionalForm], 0}, {20., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {20., 
       FormBox["20", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {10., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {11., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {12., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {13., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {14., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {15., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {16., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {17., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {18., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {19., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {20., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGLargestCliques", "[", "g", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"J. Rothberg\"\>", ",", "\<\"L. Giot\"\>", 
    ",", "\<\"P. Uetz\"\>", ",", "\<\"G. Cagney\"\>", 
    ",", "\<\"T. Mansfield\"\>", ",", "\<\"R. Judson\"\>", 
    ",", "\<\"J. Knight\"\>", ",", "\<\"D. Lockshon\"\>", 
    ",", "\<\"V. Narayan\"\>", ",", "\<\"M. Srinivasan\"\>", 
    ",", "\<\"P. Pochart\"\>", ",", "\<\"A. Qureshiemili\"\>", 
    ",", "\<\"Y. Li\"\>", ",", "\<\"B. Godwin\"\>", ",", "\<\"D. Conover\"\>",
     ",", "\<\"T. Kalbfleisch\"\>", ",", "\<\"G. Vijayadamodar\"\>", 
    ",", "\<\"M. Yang\"\>", ",", "\<\"M. Johnston\"\>", 
    ",", "\<\"S. Fields\"\>"}], "}"}], "}"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Layout algorithms", "Section"],

Cell["The following functions are available:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGLayout*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGLayoutCircle",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {"IGLayoutCircle", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutFruchtermanReingold3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {
            "IGLayoutFruchtermanReingold3D", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutRandom",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {"IGLayoutRandom", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGLayoutDavidsonHarel",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {"IGLayoutDavidsonHarel", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutGEM",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {"IGLayoutGEM", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutReingoldTilford",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {
            "IGLayoutReingoldTilford", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGLayoutDrL",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {"IGLayoutDrL", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutGraphOpt",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {"IGLayoutGraphOpt", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutReingoldTilfordCircular",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {
            "IGLayoutReingoldTilfordCircular", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGLayoutDrL3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {"IGLayoutDrL3D", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutKamadaKawai",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {"IGLayoutKamadaKawai", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutSphere",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {"IGLayoutSphere", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGLayoutFruchtermanReingold",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {
            "IGLayoutFruchtermanReingold", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGLayoutKamadaKawai3D",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1173666170833-3785256", {"IGLayoutKamadaKawai3D", "IGraphM`"}},
          ButtonNote->"IGraphM`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell[TextData[{
 "If you are looking for the Sugiyama layout from igraph, try the built-in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"GraphLayout", " ", "\[Rule]", " ", "\"\<LayeredEmbedding\>\""}], 
   TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "GraphLayout", " ", "\[Rule]", " ", "\"\<LayeredDigraphEmbedding\>\""}], 
   TraditionalForm]]],
 ", or ",
 Cell[BoxData[
  FormBox["LayeredGraphPlot", TraditionalForm]]],
 ". These are also based on the Sugiyama algorithm."
}], "Text"],

Cell[CellGroupData[{

Cell["Common options and examples", "Subsection"],

Cell[TextData[{
 "Layout functions also take any standard ",
 Cell[BoxData[
  FormBox["Graph", TraditionalForm]]],
 " option."
}], "Text"],

Cell["Many layout algorithms take the following options:", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<MaxIterations\>\"", TraditionalForm]]],
 " controls either the ",
 StyleBox["maximum",
  FontSlant->"Italic"],
 " number of iterations performed by the algorithm or the ",
 StyleBox["exact",
  FontSlant->"Italic"],
 " number of iterations, depending on the specific algorithm and settings. \
The option name is the same for all functions to make it easier to \
interchange them when visualizing dynamic graphs."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\"\<Align\>\"", "\[Rule]", "True"}], TraditionalForm]]],
 " aligns the output horizontally. Examples:"
}], "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"IGLayoutFruchtermanReingold", "[", 
    RowBox[{"IGMakeLattice", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], "]"}], 
    RowBox[{"(*", 
     RowBox[{",", " ", 
      RowBox[{"\"\<Align\>\"", " ", "\[Rule]", " ", 
       RowBox[{"True", " ", "is", " ", "the", " ", "default"}]}]}], " ", 
     "*)"}], "]"}], ",", 
   RowBox[{"IGLayoutFruchtermanReingold", "[", 
    RowBox[{
     RowBox[{"IGMakeLattice", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], "]"}], ",", 
     RowBox[{"\"\<Align\>\"", "\[Rule]", "False"}]}], "]"}]}], 
  "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {4, 6}, {5, 6}, {5, 
         7}, {6, 8}, {7, 8}}}, {
        VertexCoordinates -> {{0.5666449892557297, 0.14753800741972062`}, {
          0.566500888111426, -0.1464451168354877}, {0.20377574685284, 
          0.15067479191651004`}, {
          0.199272472252686, -0.15678595932086692`}, {-0.1976610426814841, 
          0.1557090875081864}, {-0.20736613534957318`, \
-0.15644201570774655`}, {-0.560537674498384, 
          0.15037539602694155`}, {-0.5706292439432411, \
-0.14462419100725776`}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.5666449892557297, 0.14753800741972062`}, {
         0.566500888111426, -0.1464451168354877}, {0.20377574685284, 
         0.15067479191651004`}, {
         0.199272472252686, -0.15678595932086692`}, {-0.1976610426814841, 
         0.1557090875081864}, {-0.20736613534957318`, -0.15644201570774655`}, \
{-0.560537674498384, 
         0.15037539602694155`}, {-0.5706292439432411, \
-0.14462419100725776`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.01520435165072817]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.01520435165072817]}, 
           {Arrowheads[0.], ArrowBox[{2, 4}, 0.01520435165072817]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.01520435165072817]}, 
           {Arrowheads[0.], ArrowBox[{3, 5}, 0.01520435165072817]}, 
           {Arrowheads[0.], ArrowBox[{4, 6}, 0.01520435165072817]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.01520435165072817]}, 
           {Arrowheads[0.], ArrowBox[{5, 7}, 0.01520435165072817]}, 
           {Arrowheads[0.], ArrowBox[{6, 8}, 0.01520435165072817]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.01520435165072817]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.01520435165072817], DiskBox[2, 0.01520435165072817], 
           DiskBox[3, 0.01520435165072817], DiskBox[4, 0.01520435165072817], 
           DiskBox[5, 0.01520435165072817], DiskBox[6, 0.01520435165072817], 
           DiskBox[7, 0.01520435165072817], 
           DiskBox[8, 0.01520435165072817]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{1, 2}, {1, 3}, {2, 4}, {3, 4}, {3, 5}, {4, 6}, {5, 6}, {5, 
         7}, {6, 8}, {7, 8}}}, {
        VertexCoordinates -> {{1.7508195392169303`, 3.6119085922371568`}, {
          1.5112929429370037`, 3.4420042725842084`}, {1.9691017184245372`, 
          3.3246311053721587`}, {1.7166457273362137`, 3.143435140183736}, {
          2.201941084240993, 2.9942152598493323`}, {1.9516182780331512`, 
          2.8149336902740387`}, {2.4043858498985218`, 2.6951326665397404`}, {
          2.16570308543427, 2.521828121029255}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1.7508195392169303`, 3.6119085922371568`}, {
         1.5112929429370037`, 3.4420042725842084`}, {1.9691017184245372`, 
         3.3246311053721587`}, {1.7166457273362137`, 3.143435140183736}, {
         2.201941084240993, 2.9942152598493323`}, {1.9516182780331512`, 
         2.8149336902740387`}, {2.4043858498985218`, 2.6951326665397404`}, {
         2.16570308543427, 2.521828121029255}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.014774231357737783`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.014774231357737783`]}, 
           {Arrowheads[0.], ArrowBox[{2, 4}, 0.014774231357737783`]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.014774231357737783`]}, 
           {Arrowheads[0.], ArrowBox[{3, 5}, 0.014774231357737783`]}, 
           {Arrowheads[0.], ArrowBox[{4, 6}, 0.014774231357737783`]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.014774231357737783`]}, 
           {Arrowheads[0.], ArrowBox[{5, 7}, 0.014774231357737783`]}, 
           {Arrowheads[0.], ArrowBox[{6, 8}, 0.014774231357737783`]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.014774231357737783`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.014774231357737783`], 
           DiskBox[2, 0.014774231357737783`], 
           DiskBox[3, 0.014774231357737783`], 
           DiskBox[4, 0.014774231357737783`], 
           DiskBox[5, 0.014774231357737783`], 
           DiskBox[6, 0.014774231357737783`], 
           DiskBox[7, 0.014774231357737783`], 
           DiskBox[8, 0.014774231357737783`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\"\<Continue\>\"", " ", "\[Rule]", " ", "True"}], 
   TraditionalForm]]],
 " allows using existing vertex coordinates as starting points for algorithms \
that update vertex positions incrementally. We can use this to visualize how \
the layout algorithms work \[Ellipsis]"
}], "Item"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGLayoutRandom", "@", 
    RowBox[{"RandomGraph", "[", 
     RowBox[{"BarabasiAlbertGraphDistribution", "[", 
      RowBox[{"100", ",", "1"}], "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"ListAnimate", "@", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"IGLayoutGraphOpt", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\"\<Continue\>\"", "\[Rule]", "True"}], ",", 
       RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "80"}]}], "]"}], "&"}], 
    ",", "g", ",", "40"}], "]"}]}]}], "Input"],

Cell["\<\
\[Ellipsis] or to visualize dynamic graph processes such as adding edges to \
the graph one by one:\
\>", "ItemParagraph"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGLayoutKamadaKawai", "@", 
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"Range", "[", "25", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "25"}], "}"}], ",", 
      RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"ListAnimate", "@", 
  RowBox[{"NestList", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IGLayoutKamadaKawai", "[", 
      RowBox[{
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"#", ",", 
         RowBox[{"UndirectedEdge", "@@", 
          RowBox[{"RandomSample", "[", 
           RowBox[{
            RowBox[{"VertexList", "[", "#", "]"}], ",", "2"}], "]"}]}]}], 
        "]"}], ",", 
       RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "15"}], ",", 
       RowBox[{"\"\<Continue\>\"", "\[Rule]", "True"}], ",", 
       RowBox[{"\"\<Align\>\"", "\[Rule]", "False"}]}], "]"}], "&"}], ",", 
    "\[IndentingNewLine]", "g", ",", "\[IndentingNewLine]", "30"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Drawing trees", "Subsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGLayoutRengoldTilford", "[", "]"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGLayoutRengoldTilfordCircular", "[", "]"}], TraditionalForm]]],
 " are designed for laying out trees. The following options are available:"
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<RootVertices\>\"", TraditionalForm]]],
 " allows nodes to be used as the root nodes in the layout. It must be a \
list, even if there is a single root node. Multiple root nodes are meant to \
be used with forests."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"DirectedEdges", "\[Rule]", "True"}], TraditionalForm]]],
 " lays out the graph so that directed edges are pointing form lower levels \
(near the root) towards higher ones (away from the root)."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Rotation\>\"", TraditionalForm]]],
 " controls the orientation of the layout. It must be given in radians."
}], "Item"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Drawing large graphs", "Subsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["IGLayoutDrL", TraditionalForm]]],
 " is designed specifically for visualizing large graphs with high \
clustering. The following image is created using DrL and shows a ",
 Cell[BoxData[
  FormBox["36000", TraditionalForm]]],
 " node network of collaborations between condensed matter scientists."
}], "Text"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
JZ2dnfrIaj7aUcQYVY/4cF6XXiJgyOTGiRokMwyrQqOukbF8I2GFmD9YNLak
bFdXV3d398knn0xSRG1vKZ95aNLW+6aFDM+yPnKmnnjpVxmXO6r7/KpSjAk9
4jLO2MLi7Xtu2GThqDaGdiWEIaiZ9gwZg7WAX4h3S07v6ow9ClJa2RYGAfGS
TUL1vycOh8PhOAaQd22NFqkMXB0PcEiJGznr8rwd9IMlgtBDW+WZWyiGH0Dq
jodQb6ZNmzZnzpxzzjlnxYoVIqii62LvM2bMEKHV+yoS4nxf8EBCLMOO8FG8
N6PohoqYF/eR7+1TGYvNxNQK9du1dO1Uq7alMUEkr9pknoiWi7STATJKrAMN
xVvf+talS5dCzFRy/vz5xGNifE2cOFHFqKcwk4mx94zIIRM6GuXmC2xY6DvG
AknO6W9oRYa8PRxkGSOyvHTu1GYzNyqOTGiFxQ3SQqpOnQsd9Pbtj+3e/4uH
v/t82CqR9kxeIOOZ9I7uRKkCSnR9/x3X7L11M3yeXepB0hisPzI9hkng83lX
KvaxVZimBcqd/01oilqa4DEz01SCzOk2y4VBK8mf6XA4HA6HgXjAcMtIjk41
vzokqjDdcbm4tPDJmPGDVQSRdKE/s5xtNgpirVVbDaoccZCPQkSru7t7yZIl
5513ngg8om7yInZ1dYn7oXUpIQmZr+rJ6kiWcSXkVPQa6ynvMr3pngc/+/DX
cWaqSZiE0BWdO1Qr4VEy1L1i32FfeiPyqaOoqWoP9DhK3MtivDJhRN1XrVpF
2kkNgiwaeoT/WYOGbpzWFh6onksaGb4P5wvCvTrSdZpQcLHaURSYKibcoiXw
6szVouESddcZlFWCBVRxcKLStJB471Erobrfev/OW7/6COOpvTR0LKQVVkjb
2lJw1W276uK9WzeLtO+7/eoXxdu3bs6c3DBdpE59Pkdo3qVfvY9VBsG4et4E
q46QsbcURhpe23YHcaXZuR4ugZDD4XA4Rgvyogh0wsPVnjzq6dKloV+deLdC
+6LR4964U6NvW+JCpgrIiBZKqHvGo5ip7Qij0uCT1D9x4kQR9enTp19wwQXz
58/XR7EvMSURP72fNm2a/sfpClOFvc60hJhBaHCcy34ZJ3GdOK4zLnftMnv2
bLFNldFBUZVDTkQR4e2Z0bMTUVE2YKkmcbbrWOQSNBG+2jZp0iTRcnVfpPeM
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
CAkX5SZrH8SSb/H5w+RFxf/ykd3veMc7Pv7Q1//0a4+JdqIhR4CtMrgfxer/
5Ks7P3bfI69PgJdSFIV1WlXGePiBRy949Z8vffV/vvZ69NbX1tOEyiLzmDNn
DmSVr8imQuRjHCTuM/odpRSLrkV9RRcWZGEHUj2q3xaWMqtH+86fP1/dGdN3
vVqrzewLMXZ1mW87gqTuquSu91+i171Xvw3ertf9174D84rpD2JaTbZhXlyu
K23fvf8Xeqn+9evXn3rqqbKJiHiFH1ra9rZ0lSVTv+BvZ72tzOUXrk9qneKC
sYw0Nj7hpAa3sBqjk6Jm2FcWlIov3YRYFpFqtzytrbJqEvdmeRk8zHY68gWM
sRfy9qYzaOFQ1NMw8wwKM8mUALOlHqAjgJlsps9HTwXP5w3+/OMTMOwHPvEa
aeelj1Va0g+obeG0jsPhcBz1GAK1jB2oSrGWTIlMdGqrvL0eZOTDq8lHHnyW
VzAsn6+k0dPZpuNDklbemAM7LxBvtKSRdmpu/eojn7r3YW286Z4HP/nlB9RO
mRVfue8GtfO1WNqf7372h9urPKlLiEecZuoOM7qHXbao0nyd9SC1BQKVGTNm
hKthwgeMIRix4YmPDxw2BVUQV8f1N3HiRKqypOuoeYlpPbyU6vM//4uH/14E
Xsx8xYoVIpNirSLw5J/htM6cOVOVqCUkmRTIiIJvH/aukT/4xCXG2Hl947O/
Y0OK5x/Zicqbf5h1P9VaGzQbJctqyHZ1n2K1IO8otpLlsbRBCM+UqXTUEdky
CCTCb9lCnbKY1LU4zZJk17O6f8/m3z8ci5oydr2ev/3qh//kveoCvlYyZDIr
QV4abA2YPJqlrffv1IvI0J6engULFsia0JgTU9meyz/PFcVKuFhbmTuC05q/
Gs0+xXUcB3HQdhHGaZSKzuzChQu7urpoPJolmzjgXHAUZh+wL9g3CuTujVBL
s9+UlBFjP3jzYY7KgGduH+uO6PquPe+59a7z86ZKU9lbxo7O/7DU01CCltQj
XHVhJU3NB4PlCOUiRAwWkvZB5e3cy0PzCHM4HI4RgqFRy1R3pFdvT0Zj0A+d
jD0Ka+my9eYy5XmkCu+593q9GhkU5bzdyHCV9hz6p7eIK4q9mygd9iU20paC
kmrPffdvefDhW3/6s93w9u//6wPG3ErGuZzbm/ago+/aN8Dqz/e0nspuNYZi
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
+fWti1d3eabktEcYOEOWQ6U0Pcfi3axMVamgVBloHMUbjjeZuEEpXOOJ8H8h
7lU+SAs3fTc7bF8ldh0gVUlqBn0jcQ88LE+2Xdzefu6RMnZKuyai5Lu4Q5/K
qYj3kNPslypR35Im9cU90wss3ysubvdm4upAxOf2nhKTX1zXi3UN3Sbe6/IX
Sg7BEpoPc+4e90b3pVzKpVwOrRJwfb8EzoLFvbwrppsSs8WS6H495Okidi3d
5xLmgH0GeD/y2MplK64PuO5t3+dO9LlgC+wLkJZUDMCQR5FJEU0z2QeBPF5h
s7lv1D/JZJ+21hQAR2/51XSTHJqntk/VSG0v2Aa0f/3rzZLA2VensT58Qwgj
Y05ojIjZZKeAOqgDsm1+ZKtaHIEG5Vo4CQqwaJjIHlFC0Mw4mUT93lBBD6rT
1dAAH7jxYM0k0ak+0CN41g8MWWLD/0hK+1lD9nx7/LoLRurJNC1p0FfC+61w
JTMAEnbJW29897bf3rf7v9Ztew4MrMtX2rYBwpIi5Eub34qjANpNOyWt3Wyh
uuJD1j5y3DNqgJwiMFpMxslSAfgnW0ZalL5fWfTUZ5gARVCl8ZgAYNBpJJCS
yyElSeEUMO2MGTM+//nPg2+pA5JkRMBLs0rR7SCQeCoVtDFBkvPjZWzIcwh+
GoYp8SDE570OxXJslP9jVLLSjh/JFg4KpPRcxLpMaHWqI6r54wSqbsSgmHZZ
MYyCDwxBtUbsMioDp40sdn6M0zRnrgicPjN7zAPtTJw4kXloaVsEbjfyl90X
NrQvauzgoMwhX9XkNFDX2fAM0hkQ+KRJkzATHt/SvGVrq4KZpnnivDx7/Vue
m/WXTDLtcJYXrGxr27iDd/PquorhvDmNkXZKpj2d9y9sTXdJ3yRzfAKaulTQ
HEgvAtIgM8Cvadyec3MLXmJg11jNLHgbbDrzTS/N6YHuEmaazzo8mk0j88DY
4TbPKYHMAzCn8XxOycHVhyVy9GnUzbRwonNQt3fIcES4yGXsvB6Ag1ssoMHI
puHdOBz+mrp29SBaft1KCLW1/+Kzb3RfyqVcyuWNLwVd68VK6Vucu+uHqcoj
YXq7VjHAm3NvAHwJkkyUYsR1XeUcdHn9DY9uagC3px1fOmyj2zm5U6MFQTvd
5lGuYzniRvslSjuHZdMYgRVDzU8M0y+VL1XHu2OPCTHHjbrfClZUZEUPRFzg
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
Ae8pky0gp0LlRh3gfNClz6AYi7QWDgQIXNjQrr9UbrZSkzrG1WlUVIcdXSIx
F5Isa0M+9QlLC1G6POC92h1Cd130RhmbPklCl4IzMqLphvGJpmEyCsBZDbe2
vnquAUNoqanX2vUOBn7aaadx4tRdlFcjQ4lqxtUyRhn+VqCpjgU1axePUqGR
kf7sir956Bt/DUZVl9IlAHk+XnvshUFBZ0yoqt57BNJ6pjTxOFYkY2Lm1WCk
k5JJ9NJT+FVLisIwaYSrghYE0oyRdui/KxcGewKeAdJf+MIXvvWtb3GCaJxd
1m1/bt3255V51AKlANdva9/A1SX1y0UEF4zohnx7g01oky4xA0bR+kdgvAps
Ugd7ENuE/ptiVasnDBNVdFwL4wPVhmWL9qxUMY5OaxjFxqIqbj916tRTTz2V
E3f66af//Oq///X1H3py0Sc3zzv2d5um/3HTeBD7f85/55IlS55YcNzv5r79
/8098rnZ/+PZG94qjO847yj6/M36tq8vb4nVNArzydRxygK3M3UMkNnzP8Vk
aspxHWoPRkSS98BYzjsIGJ+D2/dLbs9k8yDsV0zeFdV4HNjJ9K/8NRhaOilG
fjaQikQz1q+O15ouQqVHEUykqFy6h695KTb/zmdpBZ5yKZdyOdRKMbqgbIrX
wTMQ/od8d3om7xYXUgA6CkKbJYoV+Onhx+oF7Vnc3pN+vdhI9beIxkO50V5F
f3LYO+IlDY3A7emBWHjk6emVFWnHwkjhaRhtzvvF4/N/uUWatNlUpaZLxVTX
RTdyZDzsiedddOG2RRcC3dmR7aofGCooYNAzL5EmZFh49Os4NZoVICEbWYCh
h1Z2iuxumQmt7Tc1rJrjFOmtcqrpG6CFd577e2Ye+cKsHgwgFFeDGpyjt9NQ
Uxkv/OTD0S7pLmYXyeHCezGkXmLdnhKtGQ4bJTnH8gH9V81brz4bQ+qEmlJu
wGkGot588/a77nr+iivaJC8NyJaQvjf4VKl5/wVCTUbNvtXV1RFaS3/ojKkw
6TCACjwjoV3DxLNpSClFPoPLFnTYMEO2SPxQtFy/vWsKaua4rqGHUz6M5lLY
Ggq567B1sAJdowi1yGTRcCxVesI1rZvdPhiESDUjUidPnqw4DOPijCgyQz+1
SphhajpqzyDtMCLQY11d3fjx46lsMLWxunpu35ItdFu9FzCq1560HF3i7MhP
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
UROeCMvSvn2xqtXx/J8nROXnmhEJJoP1KBMjk6HshU6wTpXMyfJuWQCVEk1E
NXJ3EIJtVdAVuVsexeYq/Aieha/MzyrqeN9opObWQMm5dDHKbYJij+BfmbYT
PvFZC1gylNirV69YhkeU7dDRfHRWolqLytLUF1SsSErviqxTDQ2/vnz56RMn
Hmfh4CbLBCsgq4N872JykpK2wsD9UTOOjs6LrPses2pRpc4Pj1sLUmOpZf1l
OdbXvM4o9bSuDR0XKmboxUk9nBXdPrWqx2dE3aolEwdgIMG4UlyCKYNzdOQE
/NAKjzskwh1qva7P54/k/sfL4zpt6fcA+DCvej3tIDqiJCRLmpfSbvl9+q2K
1sFOKjOQnU6gtB59+OGHQREgPQCJLkrBVCA9RakgN8nYica1ME/MQ4FJimeB
H7m5ueBJoB0YBsTC4yAWvslXrRiwX69evbp3765Te5ICWKqKozwfBAgEBbWS
AmUAWMqUQnzKQ0wdU1IpCeHlADEd8CQPDhw4cPbKTWxkZlStk6WcFOgdvV7K
QEj7hBZma0AtBJakRrt50kEnipfIBbzNU/QCDQ4cpQruazQZIAWSdTe0svNP
V3f9OVWePXs2Mdng0CBsqcDqNAiND2ZLTExkCzN+/HhQOqAObDxmzJjMzEzu
g+QXLly4bNky/or4XX2ptvrYq8D46dOnb968effu3Tt27Fh15GTRjgOgZdA1
NaW/iJmSksLPS9m/5lN94nWKR8VpFpl8QNf81BRUX1T0KYidklMqXdlqmzmt
Ys3ygyfmrNpMvQTndJY2mPzsFA0UVX5OWTHpL9qHwaBnK4Yf7UDd1TMXVGvz
q96O1gT8Fdne9vgMG9iN/e90gMn67pRFNF4fHxdLM+DVGBF++2rI5G8c4a6q
HRHcvqeO+wBp+11R9uilpXzYzZGar5u2peD28YWVbup1dqy3WVE0I4HdMfti
7VIPZ99dN/qba9euLS4uZuDZyLSqbKLqa7Et0hCYhmKI0laq7lMSBjMjmerz
UkyaNImYFECuVyuourucSAzdIN9m7uo0YyG4XcG1Ooc95xX0XbScGUkmK+dM
p3TZ3T3uVOSiQEa6s2B5pCgmsIEpeFc3RsMoGcwIcraTJv0S/NwR9LWtkqeE
AK4gwYBLsYxLhhmpZyh61ye1RwB80+C7hr8gbg/Q/XpgQAiqxwTt+tgVPyx8
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
MQbYQGt2YDAIn57Kg4EIQGauXfbIx5f3+XPdSwE/IjpAO2BStE8JWghwFTUC
hFS3AkvkqwHCaQAgb4nhNcFC5NHWQj2ntsR614rbDb106623th2uOnysZknL
LB1g+Rc0C+Cs338aKA6Kk0AGgKcjZN2+U/yluQIIs3///sZXBWECdEHd6sP5
BspOnDhRipIDU7pvHJySI7KSNHnyZJCt2m+gftm6LcOHD1dVDggHcnOSfwHe
yAigaCqSv1E2crqmLlqTe4BxKsTq5t0AaWA5l1c8sx2APWTIED1YAbEURS0T
kpSbm4twQcspIbd5ZdWOQyBVcKl0l1RBs43TyoXkBLpTmrg9FSO1rKzqudba
3UephdaWb9hm1SB2/l20aJGiRM3OIzW7jmi0Qy+m1y3t3r07lSrKuYnAOGjn
Yywk3QcQqbgL3HSZfNxA4fbxF/frB0niMeBpQRJBJHEjg2egd+/eCCk0nmYg
AdXU1GzYsKG2tvbYtH8BtPNpHfNP9F1iTO41D4/WUFx43333cUx1RtflOaE9
2tUjFBj3il7MalwuHSjSJQ8DT7VUjZqN8RZocM6zofM1LxTnAdVSxADdP5ck
pyDjeXEVZfICUqD+2nyrKudC2snDxo3WPZxsbkLRSIYF5K+YAMCmMSrJmeU4
qQ8LhVCX1ji0gWHkfeFA4la3AJgl1H5Lz85so7xPCZQjlZkwW327RoZBokUt
hlIivwsEc7tBKDSV0TlIsz3qMl6qaJlaqKJk457c4pO9epXJbEAhKsA18mQR
ifDWxqRmJtFkRd21li0kCqc9aqgidonsZC7HzuQZ7WaoKliE96GLFn574Co8
et0OPi6vnqEQ1ewqmtINwtOh++vxuaak5wI5zhHbh8iQjtLTLXnespDO1Jn+
x6W3i9vDQ7wDFE+H6x3k69fjdqca5p/0qj1pzgva6WozkhkmXW8Pbn/xxV8c
PPjvsbunUj1dTNCkXMM/D5gnzXNhexhofmp/4oSs6QUXZrTvCMiRovdQ0Dlq
y6e8cGHCS89PYbyEMM4Y6R49zmmU73ylw5F7ms7eFuJWppsFYngtHmVfF/Nz
rJkNmXXb1xCRorp3L+7Ro8RRlTdeQjD9UtVOa6aiL6fqIFr1VGH52PkVWaW1
TxdVgQZZW1kEwb0sAVRhI2WYdxdVPklWJangtV1X163IIPuxCFyvLgG51I6A
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
1wPUZVYfM2YMkDulx959tOHA8418Dr5Qv/c4CH/76Cu2jPgsABVECrIlJ8hz
R/kdh9f0fynz42dG/7EMMKDrQYMG3X333flL1tAAWgLs5yQiAwdGSqV2/poz
+qu5I79i0FLkCHC+6BeEP2XKlAULFgC8N2zYsGrVKg7AvZwB0nMMDk8FikoO
pk+fzjdtRpQAMwvdqYhGTp48eeHChU1NTXwjBRQXF69L0pYtW5buOdKUChF7
RtxOG0rWbEooek4Z1oo2IBf07Nnzjjvu4BbL9sNzQr9A79xELWf4lzwMHQNC
1xgBSelzcnKQFKhlye7DtNnwrAgs3DWkm5dHXooQxDhInglW5yeDSb2aRelG
QS1UYVynu+66y4C5gGQedZ4fidmR73hWFfrkL+XfZT1uqL/3GndqkD6Q43iE
ePh5KXhteYx5Gt054u1Q1uZf3iyDpXLS90szFR5sLWSYhTgPzJaenYdT3T6l
8dyOW1A5oaxOPTzf7q9Jhco3P2WD5/FWpubl4q3XIo5Xm3olqKcX9J0D6uJF
49XQsEcXEhka9amRj4tygo3KjV25DlQpCK1ZIOgaP/UnshDJrOTXYmIx0kTw
3LrWkIfjUfklY+dX6CHlaqK2XxIt3fkpnDaoGnJpUxtj5FaSNAWuTRe1R/pw
IXBF0LRVWB5OZ+rt5UwQz6dDX07OLxoFaGcJi78sXMV+ukOryvPQnnVpp6NJ
Bxgu6G+mEv8tTVw6LWQ60zsnnUXyPbv5uoriDuJ5h5LDvv31mD/4XcOejTkw
PNYvbA+ULOQW0ocHvXKEUFn6dO12nPRUtndp96aXUDFeao7B7a8tvmnh6Ku0
P9RQkFmUn1qYqw+xNOdhFdc2VWNyNwuYLW2PyDns6tWx20hVH9rMAyxVwgiY
xfkcKLyMG7d76tST4vasrP3aPRopW39VC7GzWshoUROsAlTtJq8LipO2Gl3W
r6cKywHtmcXVLI4yJRrhTp5G6ShVzrBGyEtMBo5ZUllHXJi4ir9oFVB8woQD
48fvA5AD/1hbwcNkFmAz2/NxU5jz2roHgTztkVCRblICCy6FgPY5BsCHoOHt
cCvZLjsUEmlKLElRDBTLrgT1hlmhdwZspSXaoLpxwC3m2CWVBpPHmONcDg6h
X6zj8rSDB+gLpYEKNC8BwCzt9dGW3h/7dpJc6LWPBc+4KS97BkWp0AY26HOq
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
oovRBhYkPQeKqshKWbdrxKqpaKmqkrlnpGiqqqhfAT4jlC4apFDGKZINGJDR
v/86quf6tV7LGGsY0dSxV8/cahtKSb8QblSPrPRz7rRCnRnl/w5/KvnrjN2A
ia5BWHO9Onh3ZkJi790R2RwMsK4BWpD46Z3PeKlQhIwE3sA5QAhjvUI/iAgU
gSIMzMRGYk5SeShFR+4kk1tIAzZrJaoXa/VngARqAoEoeOQnTmouB8/o+Prp
p58mZ7hoa782e4c/BbUuKtwKNc3M2MCufg5wDrABsdQcQoPuqLZq6hA7d9Sx
Y0d+JZluQNj4L1SrMLQTJVJDpbJK2rOPn1x/rHHp5p1wI9Q9e/ZsYH7F1j2c
AaoBS+Ac3E1OTuYnABgU1w378uXLJ0+eDA8rugfa4WTOL1y4kKug1tHRDVre
OrFv2ZsDoGWIPWP3YTVPiouLI1riDZc5VlJt2KaID8mGSyA6TyDn+ClqmJiY
SOkb6i+yM6NRdA/tUzR8fjKlzbXkL59Z0qqkdnxJzfiNxxryDlWD4qqgz4lu
1MdATpl7jgDP3M7a8kM5ByqB52sTnmYH2ktqTsPtpaWlZWVl27dv3xHdqqqq
jhw5AmwXHKkrrL+wpe4syQpjVHQoZXP1qcgawfLlzAKYMugHhpkOd8r9UuKJ
tx9qnPU9gB/CP724ZcOM765YsULvN3FxcUxDmApxwH05VfG/dgLIGweL8v+C
u8wEaa5QNH+6OiEadeqHXyrmVydlTBg5NiAp7VDTDNKQp8r2BkLlWtqe6ig0
FXJQi15RwOyswvl5mxfklyzeuI1qkKdzAQ4Up5OMCSbtTZ0uwwp7oDqNimrG
F3NekF8wZ+Om+VxCO+QNIoEdDi+UwKz6iq2X94X3wqUxciNP3mJOaqmqTr6x
ibmE+Q6vGzfFi8DtcLkKM2qdWQ3qzKunKas9Eh2FGM8d0csZjMl+VR9W+oa1
M3Fdku6d/twoFfKza6z33Xef3uapmPp1p4e3fCehVUHXBxWt22uZRlmQCp/8
aj6Ct0FXVfZTk9PIHUrmJW1VQFs0xTGJVeM0wIemtaqb0q8qQAsuHd54e/nt
468ifcfNqKPjFbEng34+6K5RWzBnU5c+Vrp+99TdrCHTvIHrzh9/b7g9Vh/m
w9LczYQ3BFSStOXzWG6P7Gci9M4jtRpKD4LlqZuScPu0EDgphIozsZs6M+S2
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
VH4lln+qdqktbuP2FtGXmh7APO1blG+r8mcPCWgdrFh+4NAyCVwpgT2JJqWK
0I0EFCJBAI33NgVuvjdqNBo03oN0XaiGgf1KSnpF1zRbNP2J6rHrCsYFMuUV
dlMu+bkqSlcc+jdN+MNipasDFOTQELQiKatv3zVwu7EwQjApC1WJke5RAYv9
qmr2OpxXwcaYQaTURQA/GXFPMNZeVdG91ZD81SohKw40RNVaSp0cPc+QA6Uo
kA8aO85flBe55ktX73zEtV01bTTysv6ytBsZKkfSiooEjGukzOr4xzld7pMo
GLgZ4iUEEILRnAy5duDAzH791npTPLf+/depQk+5LhOzObNQHKQLBVeZncio
bmrsb6rKyMuAq8qQAvygcWSgKM9oSAswKG//ZnRTdved73wnLi5v9Ojia/H/
HhLl3Kg2sMTe4U+xQ4aHR794KOH5fSOe3hPXtkuXLiAlkDxgwIC+ffsCxjB5
p06dOICKd8b99b6EvwddpAWYnJ86d+48dOjQEN4INuNXeAYY4xJ+AkHB5sGD
B/NpqFAuBLDBb8DJ9JzkJ0rhPHUzuBI/6ZqbIkB6ftWZjJMLSJhJB5W0DvtH
PnMw/jmovl+/ftxX+ZAnSUOJK7fthYT1hQ763lSMqb+kaBq+BYZ1qAKcL1iw
ALyEunkss2fPzs/Ph8aXLl0Kxq9atWr16tXHp/Q69mZPiJ2UnFfjZcaMGQA8
twmKA9vkAMaTA7gOok+YMEGvkut2VazecWDq1KkTJ040ppK6MSNHjuTyqNpM
xFiVenK5rs5TUlK0gWXuQAUg802bNum5MSJyrz2flZWlcj5TjMzMzPXr10P4
nIm4miwooP6RIKdH6kpKSnbv3r1r166KigoAvqGhob6+HnSvrq4G49/n6TEK
5BXLph5dNqnsZC17oPQbYx57L7H1u2N/dnHyyxHdmNQ2NzY/+V7xY3zeyPzB
e0l/eONo67q6/j7hoxP+CVZnPz7pny8nfeHd8Z87OOYr/E1M0zSo1AyBNgOd
wue8UMChRtYgq68YiWFg7VJpBg9GN7haOw5eDZ200PZ4DY3kq9UzyTRrtSka
XZeyuARQBzJV0+JyVcd9i1+KbqTnJ+qwIL9k2ppcOh/KooZcQn1IRnqL4KtL
SBTEVVSVC5kvGJuY/mFL39a8bsyX20c3qsrN8mJSjaDWYrfjvJ5P3lzXGkim
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
oJuinFD6vriYlOHP5o7vw7eLiU4xjOhql8VfKwd10rW7Ui/GiKr4fkwEOOLw
Ry8dhirH4kDaSqvEbzFbNRsHRIdOHUHo+KUhaTjmMgYpundY1HtDWM1sGBPQ
vtdSKXjX81jQrrlN3u52N9D+hZw93sNNg99vWMLfuP1r2j7fduNLO5a5J9ze
cCrdpN5J7G1LWpbfObtzcE3jVTtv0mAJjG+tOzl++vRz1651S09/jH2V5YIp
pVHp6TqCsafyeRX8NIB1gqBihl7cxXXt7pXW6s4raONYKtUClW/Yj5mnnVII
cqe01imGuusKq3UgyVVIQ2JjkgaX7waMM76qkCl5elZwdSivKtkAaOenrk3b
d6xiewrcfj32F7n9vgu0Fw/5CwYa4VlP7CFsqzaV/PTS+ocMi57KsQ2ozb9B
/MIIZfuoTqMyJHOEshGR4EoQtWXTrwI5MLIoBtedo84eFcG5auzyhEJ42ZuU
nuskSEUgy0/x/i66kYwqq4Sj6osRnUK8DNVm1DLVabx1VHvfdQHnJlzdSBwM
tQtG/3jey58G42bMNdbS6bGPnxnfTMfObAY9Z9OtBBdVoAeKyA/sqy2wZkSX
jFGRgZjEDuKM+ED1jjFP3ohry+fjaa34bB0VCRmpCJ1Nx9Tt27fv2LEjPAOZ
A+SgZps2bQAhDkI+gLcWhZxbPqIVSDNq1CjwCRpXSQbmHzhwIGmMWQ/FwVEq
vbyZXQzwrNywI3Xr3pQte2JjYyGxU/NjTr8zUlPNIUOGkHLf5GdA9w+mtf1g
aluurq4IMwvgjQQqkFTP7skHEOXqCdHt2vpn5PZjeX1riwdAsGQOKIKpgHdu
bi6kyk52dnZZWRnf7EOA8K2eWI6/+uCx+f+DU8gqa/chymPUIX5qZwo3Fhw4
lrPnCMWGQikDfA5LC6hkJckDWmA5sErBoFnQFKrkmxw4iwahHfxJCZkvkJ6D
pISEQW6ji1JrfnKhhQv3gO76YIxMJaLeKSkYV8yKbqtXrwa2DfBEhsxKFi9e
rC1tBNoPHofDi4qKNL+leJSZBLTGunXr9DCjN0i2zZs3czp58g26M/VI274f
+Ne6Vs8wlFNvkFyRWnCEO0IFoWtuty4raRnjKPEYUHIl9vwF/DPlocqgO5mQ
lf4k9btu5pxObhzhMaAReBTheT2Zq6vDPEhPO9wy5inqL/Ho8hySUsc7SuAN
Q9a0aVPYmFeAVx7mZAd85Znn1YBUyZZTVKohPcgKivMXCE2e3MT3ijbB7dwU
SB5oLzp5mWnF+8XluUfP8G3AJk7npXOazBvKuXprISt9pXLcXog+h/fRl4tX
yTeaDHlhyYRGcPmMF3/+qP+yaOIDzCB4KchZo1SqQ1bkqSY/OdDVuJqpPHlt
n4cK+zWlI1ITXhdeWl3R53BWcErDVIKz6G0iNqdxMXkTXuAqdCO0VeYr3cH4
moT+6S8/rxcaA5EYto80CgrotdJGduV0Fx+Veu2e1ufk3IHV8f3DUqPSnuDL
3aEnBGAKcr9gfxoEaAptaApF7hxs6NfFjSIteaHNu31aK7EPLl9cqjYHWyZo
pSqAosC6WTPyYCjAF8WPb143JmwNFykat8bty20qitzpxb1JPbd/iQfsXnF7
8HWj5YuFvI3bQ3g13mhX9FSu5mX3REvCjloomZnNbtzocetWj9razkqzlaCq
Gi056xfF6YDGiXQ+RjXSv6IqK3Qg9k5a7phMAXVwjRhsdoKSjGuITaLLB7q6
ui8aelXBQjiXv9QD1DBHL7gKHFT50+GJgTCcWahYoo2nExl9S+qUXjeSwcmh
mvNAe3Hd1bLqmpuzvn2zuMWZnFage8nQv2RcYATRMYtq8MG/ipE7gk2rciGN
QBW5k22IMKuHeROrYhR0gUjPUGLMU61cjWqqP5nwk3HZoKVKzkPsJ9LoTsGQ
JRSV4dU1Aj3MO4tR8YlycmRucvaCtDxO9x7ZPqQPuk8zBv9t/PC/XxP/w5RZ
f69qpao+RtdVp50C6BmeUhndiZF6zoiIbFD1VIpN3SPcPq6ZZrDqnRotkZEX
MCDnIJ9X5Z4TYWyGeMZcxl8IgeGb8Z0Rn3EZlIK0q14d8Hpm4cbhLfjwc8Ow
5h06dIAuAJhHH32UZIzpnMXBrl27apcKgPHdt29fwF41YJgnBKZXIQSe5yfc
rmIwJ8rto0eP5l/NCaGgolMfRoXGHxYeuwBRZ2ZmRgTa2/cD83AavAesAq7k
s3Ns+13jOgDwzB3AQo4DkFyLrA5Me+7ozO5gMLCn9xKYGS595513Tiz4WdWc
n0ZiDxUVlZaWZmRkgOjr168/98agi28NhVRTUlJITErSJCYmsqNDmHeiG5kA
57Dx2r1HyTa4Kwca03dUchyOhRWTNu0qqDnPEbiUHT7wsAFGwV2AlqaDVDmX
QlJgWF1MpYKJZduTN1dAsJwCSFMvWomUXHrs2LHAJyDKWRyZGt24HFfR6Q1w
rqPFJUuWgO7rquqKD5+EhIF89cDfffddUgLwVDk7uvEvGE8yZhzkA4tSwuLi
YhIA6jTRtm3bjKCUl5e3bNmyiKEriXNyIno4Oyozdh7gctwvbpxqMBQSeKYk
qqDz7ToCt9swqcAwNSIlIErFaTpKBWZTsMq4//NI/AO0M7fAFQqqyeNBnto4
kI/5U3GtRIF2GpNZITBPzuSpd00bRPE7DUuL8djwTHIKz7mRfHnBgWcgmad6
YUbB4tx1kLaelNTg4rhm1DCt7laY3hqGlTRSPU8+bwdplpZsVkOGs8iKD28B
R97OW0+eorsGsP5UAd7MDXik0ShpIkprI/66eMhfAMb8S5l5bZkdUFQ9wfKO
Uwb4n4eBb9LQS5AhzMxPakdnYoRlZewq4OX1fTin9y/pUtiniwhOYwwbYThU
XUvpGpfuiDTUjgJzXd76lOHPVif0PzF3wIHZ/Q3GZMg8V2Dz5jfNnfcbe3U1
8bgWOXOE3omLwu0VsX2C/2GHCe28RFx1ZhhKNHxraMh5p6zbPp8c6EXJ3DUF
+dwT6VeX9XsSdA+eJYKvmCb1FqzqyehngAFLuzN39GCpXdhtquy/V0Pma9KN
uTYj4pv69yYL5gD39uqN27/BLbxNdz7PPmZfNMOvzu3BoZOLa5rMaCp+2zSZ
/qRJ9E3XUUxDbvfEJvVmIMJ2evpjQDsfAJ4Exs3U+WEwRVSczhG6F/uNoJHu
CmAA+NDRJa6K3X8wiW9VFoNOu2J2lxFVp1fBz8KExQ5dYMnAwc0jlzAukv9K
4wazEIPtFXWJ4wIivbF29y59ys/8peMUpRbqpSiln7liDeg+Z3UWuH5zXRs+
Oa+vSZqfQQ6OVjpv5BIuSejzELzkL7t3FwiM6KoDSa1TbXCXCZTJK43hFJ0M
cIRhSEfrWj8xpqj2aYBpI7QyKqndqqtGHaE7qLHDNwOlaurSviLxhg6CVJhn
9JyXksOHccppSMRP5sC/SXjpB650xA36z+D6rKF/l5bwo9wFP5w9LHKuUi8d
11A8Bk11b4K/BS1ejZNCSVRG5SwtDnTvBpnzL3UxOjmIrgSMgw8++CBHDLTE
KMxVAHWu0iy66VijRYsWusXTYI1LAACg+7ZX2rHDuTAG8MDYrbMOA8TrRmbH
mCcVn4LNxqyHNMBRSB504SCMCnKANIbLgUDU0Abe9OtIAhIfjO3y0eynz7w3
GgDOr6yB3+Li4hShK3CGeNWKh9PA9T0Tn+JcZf7kphoGaTi4b/IzAK0+W6A4
mFmFljOLfnX6zYdSU1Nzc3NzoltNfK+T8/qefq1/3YJ+QC/ACbErhAf5AL/s
isPAas28//tqwl+lbc97v/qctqiLFy/WNYpuzE8tGl771kuGdmLSAcrm15xj
xuE0hJQ6sWGeoqtD6g6LQqHUBRqHQlO27CH9mm37gOF58+bxl0o+pKcKEr5B
Ramj7ArxUlouyg6sC6DSaFSWf6kCU4zMXQcV9XOQQiYkJIDf5eXlen3kL4ok
tzMTgbE5UVWZwsJCiJ3ZjZFSS0pKEhNPvv9+tWGnaD3SUFMVVIprrxSf+lDF
J+6FRrhciztCFSi/SwxqSRkXyeCnACEVpzpQOsW4MftPbs2+f1/sP1I1WtUV
CuoLvTN/ITfnbt5WFzV0fOSMQGNedlSzp2Bk67IImdNQZNsnuhkFFUxV7wU6
fSOraFFOiVRP2dSN59nePLI1JVRbhlN4y3gFwPWC1/8hf+E/8C5QI94pKFrf
jAYvYOZLhi1btoTe38kvc0GKf1W5IaXoTmL4n5dCLXcDN3M6+6XD/gp0p1eh
L+KlJiWZUDC+ldLz6nFpniIKTG681LzjzsG5hM4t1cmkK3CpUfGyfq44woUo
ibaxygc43Vm/UedUmKfuJKPW5FAV3w9o3xcXkzW6B6e7XkmPof5k/qv/kp3w
qyASMeQ05VElPv3l58F+LWGVGmme7+gTYo5A7KdO5/CB229j4zv9saiiGRZ8
Hc6CoxipPhh5hfCp99UHPw1Hgi81fTXoXoyW0Y+xobpVufG6nw/tX59uzI1Z
ETcLtRN/D7rrRqNRSaZx++pbwzWjO93LfAkt96/O7eagJpgS9XDktpwDt4uF
QZtFBRKB39c/GODcuNGDj8rwLiOqKy4JC9icKJEGx7Mu+anppwq3NG4EjRUr
p1UeXL0yabp9o3aydj6WTXG9ZbYjUhRvCdknQ+W69m9GxNBVjpoedFAWzIVC
5ybqAQZTUFBTl+Pqxv95/SYJ25EG6bcLdrpzqRv72I3MJ25k/Tr/zdSV89LJ
QZcOVIdvA5Lq1FG3h3yr066ZKhvFIGeGlWA8q8qK315Oi2D1fxxZ2OFbTXKN
C+yTOaI4SFUZBhdVU8BdA/9RAPVL/1t0s6gUkgJ4hPIbRly7UcM2WVqSwecz
Bv9t6uwfrIn/oZakHOHDVcgTaIfnFdrL2JTf8Y6rk62LF3q5IXPnGoyqOqNw
PsJYr1o7o7b+RSkVHPLT6KYQXnsx5Wmwh+ZyjLYapTJnMW5L0ODVa72aMxA7
ozZpGNM5BWAgh6ZNm/bq1Yu/QKDtoyNu1WGnnWPbA8ygFJAG6mg/aFAkcAu6
4BRNVneP77hrXAc1Wy7HtvsktjXnwlRHZ3a/EvfksYTeIBbEVTn1WZgcaId1
j8zoBoobUJWD5MB1+UBxQBp/cUQFDF2vgI5kror4smXLGvqEzMzMXLVqFegO
SAPzQLvhmbgicLtixQrQFFAnJYjLT9mvdsmj1xf8p/RdxYt3HXqjfoPqAd05
c+aAqVWzelB+YJ5MAG8gnA/YnL6jEhqHOSkSdYQ/KbA/IVJQE86kUjQRKYFn
eJgEID3tA/RC0fAn5Mm5kDwwzF9AKShLAbicDnAOZ/Y4lNGdwpASGjfIEQWD
fqkCKcmKnxHZeHHxjh07QHdag/ZR/d6VBYrE5Sjb8fyYi5te2rhxI2xfUFCw
e/fuzZs3r1hx4t13j+hFMykpiWzVSKHu5A97q8NDIXkAKCftzxUpJz+ZVakb
wx1kKsfTogtQFeDBYA6S+PqC/+PmnO+eWd4KyKeO6slwN40nq8sdFYS4EOBK
o7GvR3ceNt0TcYTTjc/LdI9GJgFF5WZRZpqLrDhXH6fPRDdmlE5IKYZu5DW4
5gHbOqqtAnajNYHKuictfP2HfN6c8BOZFiAX3XlBNPRgXsxrxaukdpnRnXhx
eK0gar4heY7o+F2e1wmVSjsh5hGZGIWhU6dO1IursF8w8HtbxvxnLsfTTgV5
VGhMNXB0XKOBvJHgeG3pB06Pe/zGtJanxz5OfwKlG4zpl9FN63suTUpearVf
pHpKSG4qzyQO7Fid0H9vXF+SkYZquvKoUQAZuqDs+qxOgOmv2KE6dFmrhz4T
oqxyrYIXf5Mf82tOCSJurZkOHE4+d7GAz5nz+WFEdmvy/0bi4KNYCVjgc/Vt
FN1TBsdcF2GV8xinVW533CRBEL7pcUJ/ApRNn2B05pTZRefPd+f49enGkG16
rz+6NuP3cHsQtjcqyTRuX327jdVvi9PkS/SFMrxX3K76R1BQv5Pbg88Z4Vxu
VzNcnA4eIwXy0G8YstMY03Is11KhzmU7qV73IMEuRlsY4dP4FMK8St0hiJIS
8gDeQUVHg32KSmcorgdnWXo1VxKuhqFuauzZFOCr2qfCof4GvZBF5TuYMono
FsCfiilke3MLvnTUurk2pcWNuHZ1S5uXDvurV9fkzk3OZqiia9UnmKGplL2o
Aa6mh+E8+HbGYaeq9xW1zZUjqaniTXFHZXJGJU7XKb1a5Zqgsh/cuTCyhHh/
DkAqnDDOMkKxDwzz7exD6b1BzHXvoGEXGTpB8wjlAdqFc751xaaBgMGzXJ5w
cqRFgNMKR+3gE5IWyOv7cFH/f1F91EGWHQbcn0Q3tdkZPTWeNWa6ERhdzpDe
SQB+Mwoz4OqouXTQo+UjIvZxkjnIoVqsHuANp85PGoFvBnRO5JscdP+onozk
A3tsebkNH/DMkKYcIQ3YBhzCnPyEKDgCvSuih6kAcng7Err0UNerh3tC7Ifj
nlernFNge/IxsA47/ARxQTVP5ye0D5uBWGTywbS28DwpIbq5c+fOnz8fEAVr
FUdXz+4JnKv9ohoGpAp/ci0DEmVnZ8OiEHvBgWP5lTXwNj+BvaLjkdCo/ISo
i09c4i8Vb+RhGQ/WLag5n19zToE2BQA4oX1SHj48aO/evnCjOi20BoTJDugI
plI19a5VWecUphhMKDiRsgHhRoxydsC+au2R+FBb9nAJJdIUBqw9mt2rJvcF
jTHJhEpREkOy0pgcpynIMy0tDRovLS3Nz8/nuDakcLtOZkjPVajUR+ue/njD
sxC7xq1btmzZtm0bEwGS0W6UPCUlhYLpuZH0lJ9LULYhQ4bAkExGOE7OlIH6
BtcuPDZFU/oVTIr4P2c6Bhgb21T/ivBn0alIjFfanCLR+NRR9Sf+MkAqO/zF
/eVG027gNzMCxe8QPlfhUVSjnjLwdDEhIme17mlDymO7sZEz//JAMg81TDD7
nMXd3Dhr2KGEgZWzIkWF7X3mW0Y3pgZAOIkz5/8477UfLZr4gP5noG6SqaMi
8Wpaop0pP4FquR3w1pzE4Eq0iZo5zJGdFJPMHoBzwX47InIjJW3FzIVkJUP/
ctu4iCUpxaPxOQ7tkxsFYL5MwyqWZ6NU5HNuYotb01vxOTu+Ob2E0VTpNziF
zHmvJXMuxylcyxpxm6iyUZ4pUtrIrinDn6Ufo3/T4Ywrj+Sgsb+crHhE7lXU
o2ooHZ3qfypAnhnfjA9nGYbP9VD6wNUpM+V2Pg0dMIYdF1KD83YHIMk8iKeC
Jgz9pwv9YbE4eGBwXwcyCuqDezfTu+5sv60Nr/6BudDyxKn7DyadOp3D921I
c89pOSgD3Bm88jM319//PzGGbdz+9W2f6VKmIb03XIe6ywzv8h0Z8O4qPnce
9x3Xz2E4cmfORnYIZi9KuYMYnBdZobch2ELfopqKutmwk6hvV6DvRD3DKK7X
hUgQa2tWT87BBztHFEeIuOqZa6ojzKv9rjDB4jlNaKjGo2Ep3akKJ8H/FZdQ
bO66g6IJpwNyZuBzMqTvtStWPK43AAXFUB9lNlvPMr6qNqScntH9Z0fm9Xsj
q4hRZs7qrISkTEcoReXKzOVV7TH5STLw3tmKavD+KydbVE6h/zcTHeBr16lg
XAeMxmAV70nDjsonGsPSJgxVjFz8S+es2om+JlxoVmEGPFbkbgwUMiRzpw+a
o2qmClTr2VLpvbqdyuSNuOQIEhzOh4jbrhqXDPxtYb+m6peSrbIpDuqlQQ/w
b799+e23P2ToZNAEqnX7lvvCr/i4Kk0ZVD01hCLfLh8YBJYNnNCBDBjM4E5K
oEJRv5qxeqFhTOcSChKVJXLvnnrqKSM0ObKDHOL0paltLsc+oeNHKBqCgp3g
OjAVKAIJQH09vUNxEAisRQII8KMjva4eiYQlOj6nD6hpdCHYT+eHpNcUsVu3
bmDJ5pGt9Qyv70eQ/sC05z6c/sTVuPbqivCTuQAfjtTE91q+fDnTATKHtMl8
WXQjpdwOqcKr/AUeFx48DrrDz4XHIqFU/ZzbOfH6pq7nyoaSj4aoyqU5XWYm
B6A9t+rMyy+/TI10gRLxxH5wwCef9Lx8ubdidr2sUC9dnesWRv8q7JMeDOYv
igGyciGqT0ny9lcza+BIdsXhrN2HuGLq1r1rtu2T55mG6AYHkKZSJKNUzFMM
Xer8hZT8xUGdrhcVFTFJYQLCDIWSO6cgPVkp3n/jjTdOFLx4fsMwiB1KB/LL
y8uPHDnCieTG5dQepzXY4XLcR+4RVTaGFNMoSBJIJh91+KFKbjeYDaCuHdc7
b8ILUCXTN1JyFo8Q1ApCMylbtXFn0qZdPDZcyDUCdmgHJe1Mc/iL0lJICswl
9JCpH3smULQhLaa7++7du9O8fMfExPD46UmeYvAvuZEJKTWJpWDGSyIlP7ko
3H5gdv+ou/KBgHGrVq0oMIXkRVDZm+efV0Pvkfo853XjvZPDeUF4TfhXhuc9
omfgIG8ZMKyTRoGZ/odkpFEPjXxUI/dfslIzTYNTfvKuUXJmJUZbgPA5i+fq
+eefB/iNmkoJeUcM1arr12hcs9Zyu/5eXD7T8QuTC4pEzqT8p+jGX4ZUsCQU
nh7MgLPG1FBWT+Y6mVSpRpUSjfdJr3TFAcsxwuGPU6g+BciP+TUfkdh+WGUe
+sBDR1IbcnvYwnjt6BlCiofYgoprHMUcGVWY8Uiwfg0+1kLAPq+roo7QG6Ku
0DnreM0JC90sXfSZ8/mfTi4uFBiA5p7rxnxRXA9nKalrVJJp3O7J9pncHv4K
y1tfKMPfy+3gevyuo3w+k9sVZTe8buD2hsmcv4dCutzm9JxvFdTFeIUA+p/R
QaLyZ7mdf7///e+DYUrajXPkpoIN3VeQHuiKRF13U6p8rqIdlyArT7yvPmAT
P1esnMbHrtIFRHshOyILQJHobJWB0K1ZMA35bQ2p0hmE11Wr3590X3KvziT1
iCtU627FXlRFdztPEzubYCsc9OcbX/7fVWvU6zjdvmitNpF2UiqHGM5JV2aq
lCjYD2JtNXYYbiD84rorgFbavmOzV6an7z8+KzHN+Kfq6nu6wVL1VDlqVNbY
sbk6RYfb1Q9hUxeIqwDASulVuaeEumhQ/O7cIRTDBQIXu6kR+bDPvwxSDkkN
PRIHPzmZPX7OdIa7wE5e34e5qCvIzk24nN5gyFMfj4Y3jXL7ZUZYIwLoqj2n
9y85l2FUzw9KAvUgzSmU3/AuYgMD8flJLT+eFomOpNUqY3rxgEeuT2vJcXVp
IHm14pXacYrqBKr46ptOtQG+d4/veHFya6B9/5TOO8e23zqq7cCBAwEhyK1/
dFMcCnXvGtchOEVROKyj9erZPSunPmvoUq1Z1ZY3nBPcxQ7kz+nMEcgBuIWy
IHM+cDsffnLwyIxuQPvlae0ux7YjT52lUwwNNkkA6qhCk5SUZJRPQ53qB5IC
FNdGBL+lfOqunt0x4frGLsfzY4BVTlFHBdIGxXVKw/QBpISTR0c3GBKyorR7
9rxw5UqfmprhcCM4mrHzANcl2TvvvMNVLAbpwUsaUNNL4BOeBODBbCYIqamp
OXuOQOyZmZnFh08C28wvoGWuS7sZKlQPlvCtbuSpiIrc1hGU5UJQPdAOh6sz
Q7K1e48yI6DKKtIvjW7OFIB/vjds2FBy5BSzGJ1hVlRUrFu3Tm73EiC9nupp
DWrRuXPn1eW7qSOTLH5STTLhFvPvmDFjOMgdZO7GE8szoFwanofeeYqYjtGY
BmZS4d/oXTQ1mRipCkonDSVUg4ipIldxUcNJEE8LrWeNKKQaMgAt0yLjVRmA
AERfsX4bibXn1QC2cllCzcKR5fEveRN5VqlOybQBfIyLCgy7LsDcE8qlOlrE
8Iq5LMXro7t1ONw4qrxBED7pfx3deJUMnWAAKV4oTuR0GkSjV46rJ8+J5qy+
jf/yjnOcC6lVxXun0hotSZvwvHXs2FEe1sZcMxl1bLgorc2bfmNGu8wDJ12b
I/8HopsWLpRZ/Rx6D1qJ2RCvvxGp7Bjp3FQ11EEu5dHyHfAmf/oTelF6J92U
cVDctbPVi2OIZ612DacY3dWVULpWOyg6TLm99kyukvCwKV8KO24uVgbPbAqL
ZFdZ3TgpnqJoy/HOJW8l7ffXb4q2tKJSGq+HB8VKDCsJSZk0SFgR4HPqdM49
1I0Jzve+EK6Hc++rDyDbqCTTuN2TzQfycx4nVcu+UNTgu+H2hVXn4fY7U4qU
36r37OrBsL7W8CoNl+qMr6oGiMBPnwNf+e439DSlRNpwRarQ0JXx7nNQcgth
nQHj++rDw9nR2Uuwb9gj+w3VYyRqLm1naKgmfd6S58qk6XyMuMoptqfK6gFW
1dAgfzs9deHswYITrRDYQrl90D/RbbiR5shHo05lGsb1UMCi+EJtQIrHRVUc
cqEhr/+fbhgZ0Xu0idj0oMgRJwIUT93sSISR/cf5cBUIVqNR+nz1VciWg+rV
cGL8qgy5Hc5nP23/Mbjd2YHo7rkh+DU5LFhwfOHCUyqrM7Cyo3a6ieV2CkPm
qjhqIqrWKH+pIa+SuVsII6VDSGt3dnzzM+ObFfZrurbPQ3zqxj6W3u1B1Xgg
7WtTWtSNeYy2yn3hV6WDHgXd2cnu9c+nxz5OStLL5JqXcl21SV2xhbcZQPU/
b5FUfeebZDqQUSXGoZ9k2poBAy1aROIrbXm5Dcit75rIevqEFjdjW4LfgIHx
3/X3zgYSQCxwhe5l2Ic01EyGiPju3bs3PAOqAckAmD63jQoKd+m4Dxi7uL/L
x5e7Hzw4AOyUYKFlYBLYhvkPxnYBz8A2yIH0shZ0p5a77kqUkAu6cJdeEI/O
7F41qwd/HZrelUyUxIKIB6Y9xxEdFcJ+pIRLQVzYGIhdtGgRWJi1+1D6jkp2
Co9d4HPujUFn3n25hGep7mrBgWOUEE6GjjhL5RBgmELqAUYBNd9W00KSAPin
/FwR+KQwuVVn8qrPUmXSGCeINNCvmvA6h7F25EktoHQDHsHMEDIF4Lqal0Ls
MDZlBqqpAvvAqmrqtKQyauYOZMjV1fNPTk5OT08HxakL1M1xyuCJwC1YSxWY
IFAYlw9AWS4dCaV64hLfZWVlO3fu3LhxI8m4ZWlpaZRHF+76meda3CluNwWg
Ftws8qQpqJdu29l4APS4DmHyXAGuvHGgKYjLiRMnTuRECqYqlF5DwVSom4pz
XM/2XL3g2Pm8qrO6MGIjf+pCGbgWNWUSpO0AGVIqKsiNM/SqevVLSzbzAX15
PEjJ7I8btOPV0VXzhx54eyoNRR2dJPLgAepPRTd2zIQnimdYiTfld52LF4dX
jxfEV0Z079SpE1DdNLrxrlFfXlv9SYLKbdu25Qhn8c0pej7nzQL1ebl46Xxt
dRXltJoe4M3s4mWlW/Qho5UrOzQOLwjNxXXVsad4vL/OuHUmSdnIQQ/zCzMK
VGKhu3NtjjT0AFA0lybbmJgYqpz60nPJwzrTLejDysgaWoDSxVFxI0rQ1ZO5
yK3sxcVcF6A15gqibIcJV4fZ6BuptYbw2hnpbb7ubEaU29c6pAbTUTncccpx
Ta/IQelFY64QqdzVZ90d/1GDTaQP7pFdv1Zi5kaeRsd2sNBYlQ1oZ3ypu1Da
kNsrD66+J/Efw1LCl54CKDNsVJJp3O7h9nu53U2jzrvJ8O7l7UOWptyWpzpy
4WAw4riT2++rD2dsGn1VaUDqQZ2xK4EPYZHpNIKrRjoEgzHpnFwXK8FjjIwt
ijeJLgGAfIoIgheXYFkjn4cYcy7z8VNlG/sx1S0Uv9uDydU6YPn+97+v1rqW
OHZT0rWK8U5G9Jljh6nwXzfjdK0yvP0Y/bbKJ04xXE0w+qe+UJw+8K/56O+L
ZAbjUytGPfO/jm7s67aFwYLhzP6cIwYzBYxVTdcRurMbI8CShqy46PSlyTOW
pwLtGZUn9NauirizIZLp6JLTOXHUqKzx4/MZPtRgZyCzALpNo3iOKaq7qPei
431yZhRmmFaxn2+bwtUH68VgRzuQ/sy4ZnyK+v8LQA6Hs8+Oqwb+5JuzXDiG
8E+Pe5wj16e29EMCV5PJkLKp087VrQIQLq470xHjdU1TPOARJgLyvDCvEI8B
GpYIirjGYWeHBJxSNrRZCKLEWaoBKHPjoFq+nA5Tge4qsUM4YBX0NXjwYJ31
DY9uQJcIBPOonwy5HTjQ//Ll3kePDlm5cuXVuPY3preBt6GsyqnPwu07x7Yn
E9CIbxgM9oMi1HwAaGvie8HnQDKsBaoZvQiM0U23AYD2THwKUIerVX3fN/kZ
Zficrt8SFUIydx1cs22fahj51eeKjl+MOIc8fhFSrX31xboF/UBc9bczMzOz
srJ0IMPpXFQ/4ewArqqjcJzSUncuQR1pAcpDMpXzQUp9xcjJHOSbIkHvEbX5
wydXr15NDpRf5+cRT+wHj284drakpGTPGxP2L43EZoKo33rrLcBVy1NOZE6R
mprqLODN7ZVv7TxI/tppclBFbvYpJDgKrufk5JBSY1LDuYL6FJsyc11yc0WA
C9G2/KRgfJceraX6FKas5gzHmSlA7HyTJy0WG934CQBzp5I3V8D/cLtxTrkF
1NRJBI1A5uq088j5+PGMgcSQPMXgL8pM06khT2MGYFZBnYJRVG4WH44wG/Ix
M7qu0ay4oVqz+hC6uEBrsM+DqiY5AM+5xhHjCNflXuw/kHXoSC7tSV28rTzP
TlSdn4L6FEnDZ11E6ssRcgbF1fdTJ40NlOXFCWnIgazkZ18rDtII/KQn1IsL
mZCGpqDK5KkOvF2fKnnsv5aeD7pTeIidy/H2USqqrKqSDtjZaDe95fiTvoIc
eG2ZsICdxXVX6Z0qpvXZG9eXYqs7R/+W+Ur3wskvkjNlePjhh9NGdl0zoovW
TDqkVaFFDUP17sB11/v0P28fzhEFQa7bKrs2TJLQHpwVs7moahxYCqMaYVXN
4upji+k51VoJ9lnBRtWR14MOx0rFg5ZI8MnATzJX/CXtK68LE4GgIe90QCmW
hmDOL7TtUg5PRarOb28I7bfFaf0Sm+ro4sRXyScI27+ovnHj1rh9/nY3Sz/L
E6fyuZuFp7vkdj7BNjN4WQ9+2m8rmN+fye3Bf5S2pWb46qvH+Wi9IlTbddBB
6WxcJXOR2NCZ9h4CvCJ35e1eSJI3mKmKMYaoDs5pLZJidv5SucX4cerquC6p
fxjDM9lrqVqvED4obNh3CfzB03tYVfS4bhUpPFnRwwetRTtwXZerLR/0ALWo
tYJ2gE5P7Ej1rMKJRlPV/4AaMqqXO2YpRlarkDGCBPTtCud1me7lNPnXlYoT
GT3Gp+8/Tkq+C05cSkjK1MWNYwRFouQq2KisrlcE5VqOQc4O1O3UVTu5qQPD
Qc1mHch0wE4ZSAkwO05RfeO3qkvDVcifQupgU6NaS65XeaqjWrtKMp/K4cc+
dnZCcz4m1rcM52o9qnqqfmB0+a6Sj/6TIQGgff2QxyV2JeeGfWHM1UuMXKF3
aHYYrMmK8Z3jRm8J+rFcjvQcJGXwPt2hQwcIoU+fPpwCDoFqwBJsA8KBXuA6
wAajduoU8QkD3bHPNyge8aM+94VT82OuxD15a3qrm9NbcXDXuA4Xp7TZPyUS
RxXKgvdILCdz4sHYLpdj292MbQXnA59KuaFBLsG1QCwuB1DpLJFzYWCmCfAb
B0kG8qkUrS93fgLS6TsqsysOF9Scj7gfP34xPT1dvRSO661dIbY2mJqvquJO
hlAixdPUUVzXlzuXGxHdjHDKhcR4UJwCa2hpjSweBykDV8/dV2XUpJLomhFH
ioqKcnNz9y+LP5i0oPDYBUqiR0p9kusNXpcyC7fsXXT07KIdEe+RlIfrwnKU
jQT8pOJ6ttRdJIwKzFN+rXRpaorEvIACqGVE8TiXiUPJkVPUPTs7OxKGqaoO
bodpyWHp0qW0w8ropi8X48MCwIll28lKE1puCrdefzI6vRwX3WicFi1a8Bzq
FJQJIN86/KdBIPCh0U1TVqaEPA88ZtxT3UJSO3KmVbVr9kZThdXlu1dt3Knd
Ac3CcXIzmpV2BxwhWx5FwFho58k3gipF2lWRWrE3TfUeGoFGpvU4kQQ6XezV
q5ePFgWj5N27dwezmcBSNt4aTdSdOPO+AN5aiEPjGr2SD6+V75FUz5vLm6iH
GWfHTqJ5vygh/3K6xE634xofmXNRHi2qzCtMwZjnMjOl+tRFA1jmFJSWd5O3
0khP9Ab8ZTE02ZibnL1net+9cTG6jqFz4HVOfek5WJ3T9SRJaemB9ahgTCht
5xW8aztjRGYdbTlz0X5KqZGKMYwjBsLTAUIIhGosEr0NOBgZG5oCHzq65tCR
VEaBoMYZBuuGBnHuGwbRDMOArk9mBz5FZx73lPvqg7YEfzJOMRqOhpp9yf/K
voyZWHtmrcR+pDqNz5cm5IDr94qxg7D9q/vraNwat4bb3XD7shVTNPS4zeHM
ndtdcvvAJUnBT7tLUbp/uQ3OA583acDtYYIv6ntQBuZNHzYsdcmSa3x4welX
9Z3i+xiI1PmvfYJEpxGrIZCUtKtP0iTqjTZEf6MHU3PeqHDBUNSWoVIJFdVD
l6XqwUZ/8rqIAe1c/lMxRstTZeZKvI30qvcSpffKRnzrXQsILt89Epx0AYfa
VzojME6oMKwCvPJzbZRc1iS9vndcoEzv9Ud5/f80Jyai5S5kuunDXMin9Qxd
qjhoXkpO/KqMYPup3DuEKVHizSCiKr6xsVRJmr0yvbjuqpozsxLTaE+Xm5Wc
2PLsmCe1UOT+w+imNo42VjpVM+KScviwHBzU1PXori4KyaiyVqjs67KYujCy
6/3GGQH71uLvo5u+mj3l9NjHr01tkfvCrwzIonUq/5LD2j4PFQ94hDHdxQiK
p+dGBlDDKWq/oP0pPODoL37rJo5xWXcTbdu2NaCSRnPgBHThcA9ZaeMGCUAU
/MsR9gEPCIGsDPtCPkAUf4ET0IIid5jKoKXGu4HK+AngqfsNSp1+rf/12Z3g
dhgJFOcD8m17pV3l1Gf5d9GiRYAxyKSLPBiSEw9N73o59gkI/5PY1jAYPKzc
GyYM8W6A4bi4OC4BngnP48ePpwDSMmdBs4Yl4nTKQ866izFeEj8hw6ITF4tr
r0DIMC34Rwkhdk5Uyg0251fWqEBOqcif45wIQ3JkQnQzDBOFWblhR8Gx80wE
tJbV0haC5URmGZyrGHnNtn1nl469PufZs0vHlfK41l0tPf3RuaXj+IDKEbl3
1I8NF6WolE0r17eiG3hJc7218yDQTn2BZCYIWvXyrzakXGLZsmUwtqrgXD1j
54G07ftpCgic8pCAn2v3HiVnTofnqXhaWlpBQUFWVhbonpOTU1xcXFFRwT7T
BOhdo1S+nRnpYZ46gpTcAloMvuWmw7c8D+Sv6pSRsNRdB4Ofrt/6RTfy4THg
FJdXuPXQKZnoPpS/qJfO4WlefjJh5D7ShlyCBqG14XbbWaf91IXG4Q4aSJey
JW+uSNq0y0kBG3MH5gVkZWgnygDZcmkmO9wpbro+J13HiYmJUbBPXXjs9XQK
/Hft2pWXgleAibkxWI3oZPQidWNaRzc1W3in1I3nbfXN4m1Su4YXShV3lXM0
CeeNhmDpB4yeBk4bsGzDyP/t4pSHr09r+cG0ttxWzVR5Q5nm0MJ8UzwS6wyH
bfvoJ068MbTw5GU+r2cW6qyGkuuXUg9UivFbRTdLZXBAvfXaqxuxgiPa76j6
ThdHfelq7MmZF2hkpNhKE6fgl8wFYvpe+mQFLDOWp9KL6mCBnNekJ+Tmv06R
dGsQfEc4gtzmENIhzFFMJVtHYQVQDrLUQhpvqCEflrxdsw7SKq1WVZJXIGZo
QkZPBtyzFyLQfvZC/uGqNWkZc74odd9zXHcLsBQ0dRu3xu1ebbe5gvxdW8Ow
R9/6rDhN4a+75PYm9SjuCyuR3qbE3jBMavjLS4clOS/nkhzMBre/++5Hb799
WTt6Ixyx0QVBU3ZEvqeqryiCEKpVEdcTo52S3/YkyihUk1Z4q7ydcxURxO86
+ubxD16vvjB8RZpGoHRNauKF6KiQvMokivT5S2g3JJM871pAkIQ7Q3F10s4w
iPFzev8yP+bXqmfn9X1YYbUeGnXkpRaQ+jOaYXq6ejXBViizz/35A/4su+93
oHfdkQGZiqb5lvwZBX4U3QDOK3P+47VX/xPoTj65/b7L5/qM+6/NuL+h9zDy
ZwRRaV8vjkI140JG5Qk+mQdOkgP/gscaHYTYH5onOPQoRFInnFFJhVXXBVwj
IFvvS/A2Tw7OBMlH7/d8K6I3SiCb6lIkYFwjN6rpZEcNIl3NqMvqnCtEJP9h
/RZc0zCS0vj8RdmMeM7l9LvOoK94nEwsbcnA364b/Fj5iFZ8gyi/iW5gOUO2
vuxgJAZ0/gIVOnbsSA6M14aDCRJ4F/FdgtdSlbPAA3YoA4M73NWtWzddQeqm
G46SHNQqh4tgqlOLhl+e1u7qjPbn3xwcUSBfOCA5ORm4qpjQaceYCKoZRkfF
EoANsgWQwDal6FAWhHYwtsu+yc+wM3HiRJ2x8Be0tnzdVnV1IH/SKPYHvQwt
CuR0794dKtOHuWJbA/0EqTLIqn4FTAsna7NJMpBvSXQDZY8m/PfT7z0Ohxt7
FFynbCTQGwyAp7NBsqLilDB1696CmvNguV4KmddQGMqgAvzs2bNVBadgZ5aM
vj6nM9weEYfWXimtvSy3F5+8lJmZSQkpT0lJSempy0w0yLPw2AX4mQYETXU+
yTcloZCUGXrnSITno5Ge3n77bQA7c9dBqubSg/sUmL8U/nMiYK//RlrG9QWu
WFZWVlhYCLRzvz54e3hGRgbTB85iRsApiYmJ1EL/4TQC+cDG3BdmBOTD3eFR
ee6555SiU1MurVkluGu8UZ4Z8FL5Oa2haJ3cuPXss8NBnkyXb2hVyFmlGtqZ
ahqJibpTF3IgDffa8FuGW2LCQoFpB41bV6zfxqNIlbl97IDxPnJSPRMEMmcO
yF9cl/RcgszJyjmdKyw82/Dt89GNhx9u552iRrw7vBfGP1X8zttKf6KXGIMl
AdK8bqTXxoT5svwMtLOvaape6GOim0ajpNRLrUFOeU9543ZP/uH5yb/6eFqr
S1PbcLtpB9qTfJjOkAMMT1bO1tmhnHsnPX16ySvZh2ozRnVbM6ILb7c+aihz
8rDOaSO7chb505FyOepiFCe6OxcZdWyrbRS1o/NRikLB6JfsjQ1pQbcGjRec
uDRzxRolGPbtpLHXpWemi+Nf0hTXXdEcSRWaBSvb5e7pNntJM67C1WlAsnWl
O8RICtItcULpffB45iKvQ4/HdTIQ1GD+oH4L2imauQUVWQX4IapgMGhNSp4R
1GMOHUnlw5G71+lVqf53wcxX3MLYfc/d2jRujdvnuJS5bbvt2ftMer8bbg9X
VHTsQphPeMOSCOchw4Z672Eau2zFlP0Hk/iW29WpUw+czm3UqCw+unYEDul2
6J0adix0SnRWIZqbvYqcpvhd94AeZ2sYJIjeY9B7q/kMWZrCNISd+N1VCbur
5lRUv5KcEzwuysb3RZ3Mq82uBg6lVVygKrvOTOzoTOlCodOWb9WHfFIhPPi2
zer5i+tTW96IbXltSgv2qYIyZ0XW6iWqNKJ0wimD2inWyGz1eKnmiR2+tkgj
R2aMGbNWg1OqfGbKd+BzPrdmf/vW7PuLh/yFR+om3X9j1revR7mdSxuKSL0X
dUi0FaUAXsLwSQrM1VrXOFeNGlc9uJxye1VlSMzIxUEmDoxZfKu0r34LNVWP
3c01Cxtf6Xcws1U9niGbfTVkON1z1ZChDO5TEo6rBaSrHJqXcuq7hvJQMMGe
gdWZDvUy8CsFYPRkvJYNKLkRl0h8bkILPhuHt9g6qi105Fq5TqQZow1806lT
J8CDEzW1IxMdQkIRm15qWTroUfVvpQsuyg6Jm9Vv5KZGLmAAUwXeUKZ6ZEY3
sBzSvhHX8tb0lhGVmLi2F98aCgrqtGRWdAOcIDGYFjwbPXq0Fp1wlGWjqOo8
aFpI5lxL1RRVIPyXfNi/OKXNlelPgjEanxqnidyARhKAmtBsXFycDgyXRzfo
Fzbmp24nIToDhoJ8QixACx7D24dn/+RI/APq26Smprou4CQCVlSSLJBTI50N
ckWNQyFAFwLmRDcKQzKmJ1STsjGpOfPe6IjwP6rGAMBHZO+nPyo+fJJJRMSt
zemrTDEoVXp6esmpD0rqrhjelGID8FSfa+kgxSixFNgosUwxOGvFihXq/9Am
pKfk7NB6MK2F1+KVljRKESXkr/z8/NKjteuq6srLy5lt8YHbs7OzDThlqFZq
R5W5fUAvtwaypTqry3czNSATIJwJIJMmbk2XLl2MfMod0SckD4+3mNvEWWSi
m1DtUmlMpmNkpXYKIM0OaaBl48ZSwaqqoR9+2OfAgf7MuSg2JQH4OZfE3DjD
tnIjpG6K7cIHFacA+dXnbO207fs5CPPD3lx9SeHG94o2cRWLHeYytNvOBWP4
UEddxFMjai23834BwOAuJ+oCnffIUGhal9Az8FYaa8nIqvwLVPMTuuYF5xTe
I3Ba2xM2w8saYY1Xj76Ol5HOgV6FVqUMpCwb2mzLy20oGxXnPvKqUgahnazU
bCfZ9vF/d33mH9+Y8dCxhYMPbV1yeOsSXlvdzvDKg/HZY3pSCzoN1wLo9ziL
4ulKS2VIxQtuBnTWCSRdmRb9VJY60oHHLUuZvTJdQbdSbvo6KZ3j9pBzVmdl
HDhRcOKD4rqr7Gj+n7e3+6aTvTed6JOcOosOmfyVhNCXOro5iKjBogMZTVz/
fXRTCBYcRSqS4hT929xGC0FGrUmduu4apdonSx1CO6evTJoeoF1HOvTVnw/J
Ade/VgcvQQjZqCTTuH0d291z+23y8CafpTZzN49o0MwRX8Oc+r56v47mkNbz
D9N7/VFDs5dA8l4oBF9esXKaqnqaN4qj7A8blgp2ApAqY/NSh+UwpehCrMJ2
peKqo6hPou6fEZfsmqBEXbiQFb3Ewqrzi45/sLCi+vXqC3yGLV/jCqAx6UJs
JvV5Gsr27d8ssxCuLp+TCNFdoXEQQQSznaDDw8HMHj+/FdvyVpTbrYvK4aq1
qwJk985BVWhCUCR+6veS3Pipfy16fnWBdCAzenQODUjTkRVteHbKd6LE/u2b
UUrPH/BncPvZqX9SNPg/FAz8HicyeJEVJxpiW1mQ8Y901W4oEB28qPhN/89Y
mZCUyceJjPJq7aq4LqOYYf44Qv7sG3xcqleM74VUFgoaQeodqVejmN04rfpb
c2KiwMo2caWADB3+1PP52c9+Rp4Ko4yHq/2pgyP5kFgf7FxFb5BshmFSJZWf
OpFYP+Tx4gGPSOzajT7zzDPtoxsjPmmM2K73ORLwLySjfizFIB8uUT6iFTkY
8xGkh9iDNB6qFy04zj6c8Fx0AyEgZ0B9/5TOlVOfPTDtuYOxXfi+Of1/cjvE
q3Eo3AVpwMM6Qj86s/veSRH4Z6Mw6lHwDSBBvJCbR3r06AFyGHlTkal6I+AZ
LEomx+f0ORz3/LGE3nprBAIhK1BNJyqCrp7S+akeu4oflAEshHvhNPaTkpIo
JOxnKFVOpLRkosv3EFnJ6YCGkE888QRF5bj6G1ZNdyjGtVQqzqb+uSJ3tktT
23wU/7Sa9oHb2UlJSYHbI5ozpy6zA8bn5uYWHDgmcBYcO0/hqbXhRDU45eqU
jemPQngjJakJTxonHbqvVJudRqABSUyRSEB9pVz+ysrKgtvLas4A8Fu3bt2+
ffumTZtycnLUunE609DZC3WfFN3yqs5SNnLQYaPmnKSBjYOfH0BXSuf+qrWi
VgzPqm5FOfHdgg2rNu6kSEApUyFy4xlQl4YZHBkeOjTw6tW+fDP7UIpO/rQn
f40aNYo5EceDl04nU7ripMXI2WZkOqOVK+l5F3TVwgtCCSkDcE7ZuHc03a7X
xsLtTrvgeS2vKQl0rZGI9qcdo5sq6/Zy8Db9CUdUSOMS7BjpCcjn/eLt5pve
SU9N7NN1sMPVty/vULa4pc4b7aDoDXjjaCtmFkZi5S7wcJJYG3OeQ12y67SH
b3rOW3E/uzW9xflJLYtKFq8rW9K2bVsdTvLN28RPPVXSa/Gt0juZc9BOUrED
fZf6eNTLQNJs+sgF+O2amDvQucHnkDldpQqQ6ZXHNYllR5VF3XbRFcPzHNTO
aGHSk+ure26ojlmTnmDUPNdqdVZmIKfg9CxEKtFpg8GygwlbUP5sEg0dTuZB
07VJvZeMoMWqH3gVZtSND7MDB3q939Ab/010o+tOSp7B5OIzuf2bwfWw3Vfv
vLpRSaZx+zo2X5a7TPyZK0oN6f3zuV1PMirJ6COloYelsG9ucrvPfCD2htoy
y1ZMAdorD60ObhjV2QPjE1fF0iEMHZoycmQGHZemms7Wm9S7iFdLPLh5V5yu
J0lVYlTts6sR42FRHdSohDOnovrN6gv0hOzwCT4e9XkuCQfdeFcE3OivRHf7
tKBhaDelEF7FmIbCCtcTxXunHnC78vYz45qpOc/mdMNwpZri6n1F9RhNOEmQ
nfCrjFn/rLSE8qiWY9gjekI6ZyqoLoo+WOgY6aUB9dOT7tfvupJqnQMb6oic
z5zpcu1a97VrW3mhIMYnpbJxDU6V5KiTzyizIC3v9cxCuJdLOKwY5pWdn/70
p5RfWT2DLEOtcZScGrA5S9KBjIor/OWdJQeVXkKwbzLR0QTlcZoj9lueoCGj
Xap6QS5J6yFZnXZ16XWD6XxQE1TydHKhwRpQrU8YxeAbhjXnw1jMCN6uXTvG
XwZ0ZfIM03I4+wzojO+M/sIwp5O5AVZUcVfhFsbQNNWg7SQjK3JQKdcgqhQA
Ttj0UssPY5+A2I/M6MY3FH0jru21+KcvvjX06nsvfxz/1NUZ7dVMCEoI8IYu
vneP7wjh9+nTBw6hMKruQBT9+vUzUKZ+0TkSExMDSvEzadOu1eW7YTMYhjRw
nfF0uC6fgwcHVFZGojuRP1OJqlk9lBJrlwpJgnkwvKE5wTnIVoNECHDNtn18
kpOTQXq4dNGiRYqyuZaeZNRFAemBWM4iNx3IgIu6RiQf0qRu3cvH+Kr6Wlfk
S5pXo5uCemY3NFfa9v3gbkntlQirn/yAby5nsNSg0rNmzZq1e49+6lv+1GUy
FLbJn1q4LkC28jkHmX3I59Zad/o6LYe0aQHyp15gPBXRaDQA/6pVq4qKirZE
N7h948aNeXl5TCU47kyHpuMsEqvww6bqODeFW8PVYWaeLm4KEzHSgKmUlibi
WeXp0sxZbW2+YWCO8/RyysCBAznCwwkVk2Hfvn0lf5Ae+NcvKN+couoR8xdw
GqTnp9MQKmtIVk7hoSKl5g+0PLzNHeSUwuMXmCup6qO+E+l5F3jGIHBfH21j
KRLlJyWVNUyVfnt0cOpMs1t04xHlAWY+cjHuz87HflcM1ueMcYeNrMRbxhHm
0eTPq8QrzHukNQ07nK4bKFpgZ2Kn3aueluoVvOsPikajJWkNLse7QD76daeR
nU3sGPMk7yMzAk4pGPi9j2N/cX3a49tHk+QJldy0ZOe1pfDOKcpG/DUfysZf
nMUUntx4u40cR0+uCig3TrfwOqSlr7N3ovz0WkbBkNtJZoSLtH3H+NAlxq/K
mLlijaSt2qHLpvofIH8XcF2w5lwNo4KHRophuD1Hf+Xkjn0hiOG/qw+6FECd
xMGnTUOpnTIubZ30+eDor4WU9K6Oq2qQqiC6msy4v2p1XEOe+XKRkr7iFpR7
g8+Kb+a6jdu/ne0uXUGG7Xc9hMEq/HOyAtoXVp0f9N5qoT1I2kPO4XRzC+5i
gqZ3SOxrCKLrGt1/FYnL7eQ/ZEjyiBHpdK2qOgSjdV/kb9cHYta+3i5I6bq+
VugKlG+rpCcYM+mgFkOXpRoAVPIMC3nauWuGHyz3Re7Qy6kNYtSk0F/ZFzlx
MDqSqC/Y2+/J8BxRnUb9H+1PVaRXqO5Kpfaw5OCc5cc//rGa9uznzvvNtZI2
N9a3rctsYTeo+3qduhv5GhZVjVwvKxRMwQ4cq8aIBEtitU20AOXgzZs9bt3q
ceNGDz29cDyovmgUrPids+BbRhCj+6mc43yBHQViRjUyqrg0zgirP3ajcgv2
BkhVlm5EJ/adi6ksxA1SB8l7qkqqy8q6wddJpoouNJeK9I7Xrkc7QVAhx8Kr
Kk9KJfwcpDq6gIAHGFUZ99lv3bo13/zF+GuoUwmBBBzv0qULpKTzGWBADxhG
Mzf2DQTVoUMHT+Evqk/meoTTRQana2EHt7NDkRjW4XZOVFKneLw0duCxuQOv
zuj0yfS2N6cbpbH1h++OSE9Ph69UaNG9uQFPAVfYA9LQMpEdvcHDWsppwUu4
CCZnhzRgEnwCknXt2lXpK2lAMjJxB6ACqzJ3Hay9OPXDQ92rZ/dkEvHRzA61
r74I2qm1orJKcOcOhQLwKkKDc3BvypY9iWXbwb+VK1dCtkA7HKvPQ40cKSo5
qJECx0LmGqWq8U4Oivczdh4oPHaBb0MUcYpuZyAu8A9cpCnUq6fkmtByUTCb
PEFislKViKukpqa6SEEhIyL3uitwO1hOCfUGA1STQMk5ybiWMa3UnHkjunEJ
pf1OKKBoUnIjKFLW7kN51WepeIiaSuZFh04Un7xUVnOmPLplZ2eD6zRXCB0l
t2sO7AIHN4jbys2ivvp74Z72jG6GRiIlWM5jAzHyWALJ+hvntsKx3H2eOh5a
yNlYXdomcC5nkZKHQXf3tKGidUibn9xHis1Mh8LQCCGaKg9S586debbDwg2t
YchaPfyQmEbQDw+XIFuK5PoUpdKRu4BNXSgkTx1pOJEK6pqSK+pBiEuQjEx4
gOH2SzO+p7YJrwkviyFWXRrTipN/KZtCflXZjXOkG3ZSkobCGDpq7bjep5Lb
Xy9t+/G6dluXPkkJbVvOtdjGhyJDHY1emNzq7ITmCsANdsxMhH9zcl87XJWW
mT2feQE9g7N1fcKUDP1LuJ2L6veVjb6C4hkjW8kD/RW9B+fq64YuThkFXZP9
JF03/yqjfnVN7qzENH0guy7ZcJVWiZP7SicUQAX36cFqTA2Q4FxC5UC6XBVZ
HWcb6smEcCpBOG/i4K7ZYcs0QYfTgY8C6ENSyZWe2RySaAS6X5JRMMfrwAzf
MK6HLQjbg5/qb7gAjdu/he0LcfvnS9R9s35XAi1SfYvDpPg2DfaG5C9O36Yq
41+8EctWTGFyba9iAnZ0aW4/wFuszAEC5E23eEFVxkm93hH1CelMwc4tOFoP
G8n416nH8BVpSsv1Va6E3J7EyKT0IcaesPwWRleTysODmrpd3H1Rn7f64BK/
lc8ru/BcFwKcpLiMaMQidebtZnUm6WKixqfKxjXPlHKzE351q6wdH3ZcytS9
jBMTDW8TkjLnpeSArOo9Kt+Wz11LVZGGE3UFQwK9uJw+/RzcfunyktS0eKXf
rlko/1GJRee9nM4R24ojQcSthxYF+PyUZo0nAhgbW0TnNtq0UiOV4fU/Y7xX
teX1Ce8siSNq0bu0qgM3/cxonKVfNQObciFGSR1dGqRVf49BLYfLwckM8Xpd
U+HcWC3KulWdZc5IPsZtJAFcZFBUONwVf34ae71du3acDhVA6UZpATOAJT3G
kG3wKQ0SkFKvEZrUcUVDnGu2pqsKkoEigETh5BcPzB4At9+Ia2tc9Ztxba/N
6li3oJ8WlMOHDwftlPpqbQoX6dAD0lBdHAhR65tNBQl/KthUoguMcTlO5C++
B0e3fZOf+SS29ZXpT67auLO49sO8qrMQ+9GZ3U/Nj7k+q1PVrB4zoxtXSdu+
H9aFloFY4FO7RXZgUc05KWrl1Gf5UCpO4Yju0J1xwEvQGsRorKXsisOn3x5Z
E98L9tPNI2koT0HN+TPvjalbPIIEUKKTBUMRgXkAHjAGXjIvMHQR/0qVtIzO
XsBjfgLSTCsgZENHcfy9994rOBaxToU84dWcPUegbo7PiG6Uk/RwflZWFt/K
ot99910VeyghnJlffY7T4VhO5wiXIJPcqjM0HSUh86LjF7lK6dHakpMflBw5
tWXLloqKiszMzJSUFNVsEhMTOZH8qSwFC07XeZYMtGRAWG4oVebGQb8J67a9
umm3rjv1dsjky8ePR5RvHjwwlceMh4qXUf0uHl0ain8B5k6dOnGQ08mZW6ZW
vDpIzqS0tCU919X3C6TNKVyIJ430MTEx3Did3pODrWHLuAZEyUmmg0ooV/cs
WoJwXSYR/EWRXAMiPY+EcyXy4c4Oq9+0wOXSat04t5WQ9XPr4hfZOkcmT3Ad
bk8b2TX95efZAbOZ1/AXUxhqdzB+4OXMp2+WteOza+VTcLgPEu8sReKBpNG0
NHExYvf4jhuHt3gzu5jP5tF/w4frkhXcXnsm9+CRFF5hTqG7cDXTkBOUSukE
+7z7eoMnW3oqFQ5dQeA4+8o9XDDVMa8ecVXqY9+oeQp2dMLg8GGIbUc9ZTjk
Ro/q8MQQ5vhCtg5eCpQcl4P+Cac7TdChMRkqYA/6M0HdhbMUQHktulYFXA7Q
Dq/K6r2QIZzUkDHCIJVSF9QhTwc1li1Eb/zmtwDqjRapjdvXun3ROennPIqi
9ec4nAl+2m/LsOG0NPxUozvI4RtelzcUbk9cFavGSJP6WKvqdWv5okIynGZX
Y866qPp39dGWdWNrL5TW8w8zen+q9O5MX1GtQmx6JM5l3jF0WaoLduqHS3Ra
5evdnc6Nvss+StGEVVaiLu0HJRk7NEX9XtcdfT/qiEYdISto52bvaugiRSU6
qDTkqPrYFttosKI1IxQ9eYSus1ryUdleblfqQnpVu+H2OauzlCTrO0Xy18LU
IK3aq6pYaBl0FMwgkpE1Ly1jDvv6S9Tjveol6ky6vMu/zi/IU/8GMjnDljjN
uZCqy9NKvX4W3R544AHKQ3WCixjHKacw9upaRekVU2V43dSI9wZLYrBTos5P
Jwv/D3tvHl3Vked5MuPqmcnqrMquqqms6dN9+pzp7qqsznZVdnZNVmalcXlp
2xjbYjE2tgGzCzCr2IwBAzabJDax4wWDMWYTAiEkoX0HBAgQu9DGLvbNLHZ6
PfN572PivBZ2TqYrk/xjdM8779x3X9yIuHHvjfjGL76/70/mPBVjAFWxwaCB
HKEa+pS5GM3IrsnOpQFploq3k63gnx2Xv42vZGRV3UiB2eAiZWeM6lIxvM3W
EU8a85QEIBMSgMm3vN4HzADaVz2SQgHk5E/mwAOQDNMEoBQFVSx9atuyiAF/
55i4qrHtwRhxcXGl04eUJQ79YmYHQftXM9p/lvJSWloaAOmd6GbwI7ClYTqN
Wa9IoDR1tvHjx4Pl9FV09V9iM/hBYWr5xob1ARcBkCQMHJr84pczIgLvm3Yf
BrcDm4GjoGLQ5pn5A06mxHMWBVGo1mZqQh2AXvqiBn0Vgzodnd6NicDE6EY+
gFX+5S8gmUTxuqTuJAC2idvPLhwIlDX0ql6fYGNwO/MFfnJ11ARgqWEWHMuJ
ytqAGIXW4Eawn/o5FERNOAU0LgFm48aNHAQfgsnVkOF0SgS6A0EDbiRbMiR9
VlaWKpFhiQHkz08J+Vw+MxcypGgunOqtW7cOyKrsoZMCyi2Jbjt37qyurq6q
qqIlyZZT+EvuDTCe0jldCSB9EHQ7ZXLEjeD2Udb6yn2zS3ctPf3Re2duzN9W
zf3iJoI2lQySygIyd+bI0wWaBSHzzU8eubDOAvzmSSN/mpH7oiHapQruC9eu
DynXyOyAUkjmQgwpVSilIKX+2ad0o0FxFq3KZESRSTIkW9JrrmfH9QL29ebm
Uaf+PIHsc8k8DNwOvY89nYtyLtm3b18qT+nOi3nF6Ap4c9VU51poLg76+ihH
kzsxPm9SP91VCie/UjRlIG9c8dRBZxck8DmY1oUPR3htaUCuUUFX7gU/mfLw
stOSKmcyESs5e3NZfkXl2H9XnPDnlEiT8lJvzppXV/U+BZFYWSoNGmB1+iK6
DkW0DPnkegEp5fLR1cjDl1VoV6Y4pNGr7Xg5i4Mp67PmpGYaptA1WfGz9Bjd
xDjFgH0qNjh0uhorC5EtRDzkrwPT+52ZP4xvDWguBBuPI+jMOJSHkZ0+39HZ
4ThYxsxBmmhQm5HxbrkunnpFjhpeiM5l2rX+gK6gAaW0kGRatt/rJjD+zdO7
OvZtf90diyH2Xy3bd58Vi/P/lztxgZ3It4pi8tjJRdCBDDpURkeSNE6HIzVd
c65R7/VXDfSbIMNo0Gczz+r3f4DbBeohAFOQWFcoUiO5guT2XU4QjOMjO51/
jVsh6pb450pfEKelVn90J05cWEOUUqKWu9GrNR14VpDAlS1DSnpy1wskAsnA
oWKGdrWLIx/pf1TPGHyGFiV9CB0bTOJUlaGBymjq4Sro5zVrM3zIY1Qp0TVW
vVBJrAa+TEuVJA0V+h+jm1Qi0hsMy6VYSiTPYMR2pJBOD0ANEJrxCGSr+V2l
dw4qJmNAKPYBxvqKqp+gDUohHfXnHbmC4IAmeipDQeoky+Q3lqssHcpVpdm4
5FrCRc7qt7sM7bRFpwA93UjJDpdPYpWiATnAdctVBJIjpBRyS0cHFyk1Y9wl
Q1ICKoAQ+W/0B7obxpHSVavQb06CLtCCoR/0ciW/w+W89uD2a9MiAuxXppDB
M+QDqLgD2tt9mvLi+cWDP/zwQzCerp1ATYDNhAkTxkc30JHgWdMogAo4BHok
jVKBEtfBS9S/Q4cO4B/SgBKBTOAuviUkf5YUqUN9cg/w+el5/QGoYGnws3x1
NQBBU8waQHSTJ0/mONgV8EZZuhmCzEF9Wr8BvYEC4UIA9QEXaZwHoXGETG4m
P3sz6VnSAFDzDh87s/gXTUv+iXL5AI/JgXqSrdFLV61axRFy05yuBL1zGQol
2QcffMA3RRi9FPysLR1kDjYmGXkaNEomtgI4HKS2gHZqRRo1VUhTVHsq/8hx
roWDlEWecmxUXOGqjQm1KLpJs2deoGj5hp0HgPSUlZ2dXVFRUVRUJMv90KFD
O3bs2L59e0ZGhtGXSKOqDDXnvnAjuH1MBsHhgFWw+ua9Ndyg1eVVQHdw+9v1
599pvLB450GANHd/09ZBWTuGyY0HdYuHAYQ8VI8//jg59OjRg4fTJwFQqr8D
mVN5IDH/Mt/kcnhCgPQ8DDQL+1ys/CKuC/AvUKdisndofK3i5My/5OMRfVdp
T0536YcjPDneEWXqmSRSQwqiGswgqIkEM4PDcha3kvQGC/D5pAjKUgyHS1Au
EqTNK8a7z1vG28TLaygEZ9nkTDI6ItA4LyMfrmv7rJGA9qaFCVtnDL+Y+Py+
ic9xXRcyXria3Y2XArjO3eQsVSipJPmUb11x8vKuraeadH29//77DRdLbwBo
v3hoTc3MQXQvutLQZWnxNnKrC538tD/kFBKQif41atRQbZ1lFM6VlK7NRI0C
jot7xer0ybJAHUccEFVmozhyVk7NYcie38gXDBmGXHEEPDF3SNOChAOJ/YN+
soOsArzk5mq4xivHKQ1fJNC3S+uW0N1hMTi1KQ6maoGjlYsI6qfRJgq1ifMZ
WZrxb+/lFsyPzVSsW7aW7Xe+fYfVnG9L3+wpbeay6ut891m+oc0qc9+dkEyt
7rwFgYET2GuCcOG0Uoq6q9hjqBNLMiCT7Bet1jLYNVDr8G4mksx1Ow1MdcO0
uTwn1y7IXqkSqXVCL0jXGTUgy9jRRKBZ2z7NrMw8sICcDlhJLQ9ONCSru+pn
b2YXxym6aioRE7TZTa8+jJqWLjfIHtGwLKfRcEIS150gaJ8HW2rEEMOTudQd
MLOAmSaVPMm5lKUFm+GA9iTBT3/6U81E2vZVUBQzk8+YMZmvv54rEcjphjBb
6UhVDgyPwkEgujZ2QK8S68ZL1fKv461qjZQFQtY51NjchkzilCAXqXuslHV2
yFbvVAA2UFlnUhpHf1LGWcZKspJIw6XpoBqk1VyA4Ih1U8zBKQZDp9Z1Y7Lw
lyrrFEqe5QlPbBvZVgu8RNadY+IuvfkUB/kLTM5xsuU4CEQ0Al5S6Z2hHyxR
NbZ99YRO5KkaBtDiwQcfVEly63tPV77fDqx+dUrcV/XdP6vrDgKpn5sQjO1f
zuwIFATRbdiwYcWKFVpfAaLgPQneqmGDc1RupwL9+vVbu3UPuBFACJIEg0mN
0D1QA6YCLCA90FT//v0NfPlZciTo6rFZvYGv2sbXrVuXm5srlAX2SG7hLKkm
oLLly5dLXAlujAJjMD+1FdmK1gwYRMoTc/oen91HnHxkahdAe11Sd6pRfOpq
8emrtTP/7uSCnxnAlAowW6EgET7IllPY4TJJr7oL6Joq0RQkA/2Cw6kA8wJx
OxXOOdgA9qYyTnmoGBh+5syZ4DSJGYoTMj0BHgOSs/fXLY9uTCLKL9wubbq+
efNmLp+m4yxyoAK0Od+0KlcH4uUCuS6unQsE5aoAmV51iKwol9tXcTESByrC
pb/4cXV19bZt2yorK3Nycqjwli1bMjMz09PTAfbOZYC1BjPivrDPDK4usxeX
w746MyBtYDyF9u7dO8KorxqRsW2wiyBUDLzKzLFz584gah5IEgNreV+USSdb
/+InD4+Mbu4+9xRYzqPL5XCZ7ANouUAuU5db3ZYpl/TsS0YS51MN3ZwVujGW
loGx1JDUyVfpIW4NhSp2qus0N4I6UzFDBoOKqQ9pKAXAL0coeNFaByrJMyz+
1/eEK3rooYfYZw7OxZKznH9KYYc8uWreO+ZEPDzbZo4AvX8y68VLSZ1Jc2tL
Vz5MRsiEEqmPy2dkVVz63qmmnAsH3z+REgmv4GIZPQYvS/b43ucOrD53cHVq
wgt0VqoWi9jp02hzexLtHnZWgHNFa9WhpTcT8Ntnav2gFzLiBun1ymGHZOQz
a22G0j0u3f7FnU1mi7Z6krF/fmKbX01/JrvPPxkNXAsVw+KqQc9+MKC9JrI1
Q577cGBHY5QEXmiwVnGW/kTGKwlWOEexMI4zmrha6ggrP0c84DAnmdN4hVqZ
aA3J8FyaEnPrN8wI9PJ7b3JvZmxvUYBs2X5/228uBRm2b5tIfttBX+RY9Zhm
m04uzUz0clpaxawIhBdZ4jf7wRoganU6L1/aRUABNu94CO7GuRwJjBqzCnGI
gjndjkKxSk7XQq613AuRIS/bRMKM8YPsUuwGtbq72ui0RVEaWXyBBRQk3DWA
O2uQxB6E1k0vwlf7RQ/WIPmoe6zzAk36/AW8dDlSxovWEnnvOlrS9dkOFmrN
DZztQidFcET5F+3S/CxO+POiYX9mtFaaWrVJLo2zpAkZdIl/rYlxVMeOzZ4w
IU/pRXIGGKulpinJmY6GJjKh2iRQFY3SwcyqwXNQzrnTFkUjg/qZBB7K1YFU
VymFIkkZvMwMm6izJ/jZOEcMf1Sbb/4NWg2uZRi5NUg+GrCVfYrQLAZKlznz
s+gmUZafykUC6bkQwIBqcnLRW0e3K4e6fVr7cuXoSMRG/iVzTm/Xrh1oAZxg
yEUwEnCCHQADRzQSgiiAFuAHF+75lzwti7nA9aM99u6NqOGdnp/w1Yz2X85o
X1NTA7oDIxl6EmQItgSQq6wu13306NF9+vQB4wFpgByAJdAU2B6EbzhUvoEu
alSCiGQ7iNuNfQMgUWAE4FSb+PKZ+QMAw8BggBb75xcP1sqtvXTSpEkgKMAP
CYw3Sh0AY0bVIZnhhNinwuA0NRU5CzgHBgPXidu5BDBtfXKPo9O7aWy/tDbu
/AdtNNuSoVoraWlpQYCRKzVOE+CKbJdW1/Jhh6y4Fvk56tWo/UI1+JaEL4zn
yKZNmwoKCrTecxy4zmUCTTP2HKFtC09eLjp5xVhIEUY6MOnsDa5RrXVy05dW
VRYAJE1B8zIzkuDBjlx98gdR63TJWRXRcMNKU15fNmrr1q3Z2dl8fzK786cp
LzIzojhmB64vAIAVPOe+8NjsT32RDzMgZR6ltXPHDacr3UhBGMXn+0Q3Hi1x
O5CY6aF6RwYn5S7z00C6JPPu67bMQyKlXCI9rxi4GpDMNap4qUsFF6i3LFlR
T2qiowGPmX7QJOAICfiX+2VoAAWFmBBxLVyCaz3USuV5qkGJPPxS8WVzhaCr
MmdUwuEU+TOczqPulJNvwLnvFxPkp59+2ktgukpuRkMgZxLw9ml198O7Vjx1
0OX5z944mNS0b56TX1qJvgX0vmv3uqKSpQVvDiidPoTWoFwqRqdBgto5Q+pS
htJXBKNKiFJBnwAyp5OhvzIohh2glg06bZLROdBrSeeja6LOmlPMjUzoUuhp
FbZlLkCazJqvlUvlUjrGBYqmMe+0OJ2fEMHtW/r+0pFUPE9Ksbo0GLfYEd+h
yrVUmfOODvSljuluDtmBEKubquu5wTSnuM2/ubNptKFigYTjsrgubwG3t7rn
JvdYY7t2yBaSTMv2+9tizd2/+fZtKqnfeDAoQf0a3H53HVRtDUHHQm2DZ6sM
E6VXguGdXoJ+SahsDkJH8te3RTu85uIgih7s4QpYaTaX0+7qGz1JCP2WNfuB
7Dmt9Xy0AtICXfizt9TvXvaIYF5DOvu+1/rgaHxQZ1LTvRnai1olZz3hSoXx
QGX1cJSUN39htoubmiPoz6kS/6r9Imi3A5QTqDVeJ1a9hBTGset2BqR3Kh0m
eBjcCzAGtBcM+YFuuXJXZKEoPkn/rEwZYwejjNMENR4ZPpRh114tucVuWXoS
WSlr4JosddblEziqGYqcGXrUgdTI75SEbPXe0h4eq/FIHSgL2MwAClRmXGOk
Uw+Zcx3sBO1aqIyp6uCoS6wRCbVWSSKSokNrcEXWihEW7E2eIHMd31wK1+RO
HYJAjaYwUgIJyss7l5U9Dx4wjnnF8DZ8GNBBEeAEkLB+bfJ4Oc4pQBpRE0fi
4uLyJvXLmdBXtWcJ8BTNlYJJACEl0wbfmvni5zM7XXsvEq50/PjxwFEyB3wq
yQK6AEFJ3uYISENPQ+NsTpw4UTuw3JXJkyeDecBFVIMKKBgIuAILgbXkwIOd
SFCX1P32jOduN/Y9enQwcBpQfWpuP6A7JWpiVa8PtB8CIYEVdfk0ehFg+GT+
gOO5/UD+2qUpRa67OzIfkpKSSEANQWUgRr7Bz+dWPNGY8lOJMUB38gTNkiez
hvz8/DVr1nBQJjnYDyT/zp6axTsPcmmktx1AyFRDERhquGXLFsC2sYQkfpAn
2L6wsJD0YPi8w8dA9cBIZ0DUjZ98lJ3/OlTThY/JFlC9ceNGrfTCdVoYoKhF
WilIaqscvXCd9hHfcnplZWVx3en8I8e5oXyYizElycvL+2JGByZol99JyMrK
KikpMXIrV0S7cSHsyICiFBV+uGs8Vzqu8q2XsUFv+Tbek0DamErcUx4Mnjfu
b/fu3TU7e/e5ai6kc3QjMdny/HBHgMo8EjylQHrlT3l0KYiaSIChYV0XCLrx
4Hya99XoRlUpheOKRpKbtnruPlfETaT9ufX8pA482FSmb9++zCCMu8QbQdE8
olSGfWYNvD5cEQ+8Yv4GAgaTU2FnKGJyDpKbovRPRjcDqpIPNaQmpHFazTev
bf3cYU0LE84ujED3U/MTzi/o33i04nhNgfMgKkD1dPhVJJ9pAg3iFOP6tPYf
JXbYOmP4pldfdsWWviUoVrGvU4+doU46xqGje2dHrogCsFow9ADiLHo2hy1Z
N1ppSGPQh+UFWxek5zoOOvq4+qxOmooHDkMMuDJnHH0MhGG4E8ntQVbCEdxx
1jFFxK7RyRGcszStsONCM7XSHOewqBnNJWzzcfHa4dixyb90RHV93DgpbPLb
A364l+buZmJ3LSSZlu33uv22UpDhrLsfy288EtRj7ruz3V36N3Lsnbb7Isey
37V13x2HSEyr6yUdnT2JM3oFqWShaEsP4orKTxm3VGqKiaWmS2KnhmSoqTwi
nJ7yILhdezhnubQX0LIhO+l1SS+HUOiuMiSVCdr1wcgQSO90O16LONaoE7rt
WFVxPv/SA2sbV53GixLAm4+9mSKKglg7Uk305Hxhyvd+NeuPcwd+XyWcEEia
nNlXFF0/02BYVlXMQURZdfYNbKRMuvR1Ya3hMNRyJIFMG44bbzTIC0vyCd6p
zgLE3iTWJg+gBWlrrtEG5ZTB0U3vUT1DA1VGJ1AwP6crkgagZVzT8ZZSVI/k
ooT9cmbUTKbRGJ64di/QqhpribPAxvquchYpbSLBOUN8bDBT8tRK/1ZW0d6l
09NHdzNOq4vaXBH4B7ANyAc8MLKDtwHtO159hoHV4JUdOnTYPa7DzjERsKRu
DIAcZALGADO0adOGrGgc4zcBLR599NGrU+I+TYq7Nq3dpynPX1nan+/PZz37
+cxnP53zYm3iyxEsPfO5Y7N6Ax6AE4ZGkhijGIsqK8BFABvAST12cA4/AXuA
OvDP+sp9q8urqBuFAueMj6NTIdmCskj2ZdmzfOrqht6q73NrRidw+/HZfSg3
ApKjBG/F5D/88EPgqLx64F/jzF6kAcjJNhe3UysNpBxXO10WBwmAWCAxamuQ
IHAgcL1+9k/4izyFf1wOpyszaCAkCqUagHZ1YACBhlhVqUYP07fubKRRZZFk
hiJVu0b9SRB4RkaGxHJOdBK05UA9iJ1TSAB4BkKXX7j9dfCmdxJKG5oA3hwH
ugPRFc8HcEoaIXOwK1MM4XrQRaE49XOKi4vVaS8rK9u9ezcTB9qEg8yJPpnV
+cKSITQvswzSMCUB0+pZLKNbN08uU2EZZX+8ucJs2oGfpCeNAkHgcCOlCqR5
8LjXzPucmfIMk5KD/EURPJn8JE/O4tqB6DweYPVu0Y2nncskN/6lFGV2aDqn
V9xHMiG9KJqfpDT8EI86z7ZTDCO08nhwmVydszzF/I2l5foC80qfT86VpUPd
eMXIhyOuJWl4p80D5tcV11gGXAhlSY/pdmfjJ3WQQi9Vnp8Fbw6oSxl6ZuFw
oPsnOV0/yemSs6w6b1nlkaQfcwsoi7kzsFyHWScvznzpJT5JeenTed1Wle0K
8SC0k0hHpGejN6P70r2UrkOnnrDKaZerzcFFPToc+X6GSaWLsztVFsyIHppB
XH7l4J/e2VxytSPVaiTlkuFJAxEDCv2nvaKGpuDO5pglBzKMzg7KDmqx2ICD
EhcdmAIM0BSvbgz5OEFwlUE3Jb3SNLCH0ZAjThnYNyR6KOieWbxj4VALSaZl
uzdbCGr2W213i8bc7YgaK/l4350gSoEPEybaQenx7tPZ0aU0HOQs9VgE7cEi
TbIQo1PTulg9qLUHDRneblcZ9KO3hzErCSpOZDRl602jmpb+OML7QDiXs6c9
XLEXFUs0iTut0IvTOKqx6o4BuoultWlo4Ve3MBCBAqOGZEJWfTmdDlBPPUCD
Wd44sHTCxgxS450jWr855XwEt39Pukvw96EbZwiQReNiq+Yag4qqSyPRRZ6k
yuqGHzLkqAQVhhI9ocjHUKoFQ35wadq/Lhv5l2rX6NMKTg5BTkX1IYaREF0L
P9CUYcjJgr5aLr8afVXPLDAtaRgNGaz55hSwt0FGHCAUfnf+ZUBwaTbsKAsj
f4YqcdArCv5cNGOsv63BvDTvC8V/Et0A4YF5/vDDD7MjuXRRRv6+ZUlZ43o5
NQCBi8zBEqAUkEnnzp1JT+KtI54sG8bU4XHBPwfB7SB5Vfik7HJu1dj2fEBN
zBc4BZQOtjd0zqeJkRC6nyVFcDufLyPk9vafzXz2yrvDAc+AdlD00endhE/q
9akiDowRjgJatEkCPotOXcneX6cYOHiJ48AVQHvq9mqt5aBlZfqkN4DuOA5E
AbR/VfYseKxmWteGGT3BnHVJ3cHqJABosSMXXWl0I4RSGSrGQUsH/hm8FfDP
x7hFoDXjBMmQB2KRoTI4HGmY899uz/1h3ay/V6WcS3PJgItStQZoTSbg8Pz8
fL6B8VzshOjGtUucVpOQgiiaNAB7vimLFgi+q5RLc3H7wJyZmZnkY+upi5J7
qDH/yHEg/aZNmziXC6QZy87fvrRi3MUVYyPxmxrPUpCwmTYkW5qRugE+qSfN
SLMU1JzglOLTVxU/5xKo1ebNm/Py8srLy9esWSNuLykpSU1N5XJkAfGXzJwN
GzYAGnfMGV06fYiwnCKoOVlRqFdHi9GSUpJEztTK6Qk/AZxcICCTbwA8O0wk
n3vuuV69evEEMmfkuWWHs8Ci7JMmPj4eaCpBnSbSLs1lgniVMQcDi7rlCDll
ULSf6ZXXTnohN4kBxmQLouabJ5aayL0hB1rDFtNNVZVLZk8Gz+KmMxemJsYd
IFseUU7nXPbJkOOuLxici9IVujdygbMY5ej5V4l7uTekefHFF2lMrs7IrTJ8
IoQZcHtuVz4R2szCrz9NUQpN04Jh2eN7M/umrVxB4L2uHP00r1LRyStrt+5R
ropuSjcieY+HkgecnDc0c2xP/Yy0hNijCt3VbKfHNuIGMym6Mrl2/OXapfpa
rmlKEWd2rwX+wsQnL0x60jFRH097S5W+HOY8S+8nB1C9lgTzQSTZYExBEDKo
wThgheOO/lrqhNxU1WFR6B6I7g5/GqaoHvlbrlMDF9C1cXEk2Pw5MdbKd8/A
c6yRP1gp70G5Ldv/n7fvFp6gmTZjq/8ZtzcD7a3+5yf520IvxeYWXnCXz3wB
g9u45nFhubN7o7m5giaH3M4nAGP/UjnKOE1O3gXGuosaVjUQe4Tx9Bj67+j+
KdfF5cUgCxNM5dLUdVcM64mGhxMwB5q6PZWrAMLswN6R6efCpYZ9Jwiq3Iio
tclrZvfS+Bl8deXVq3xy//33K6pjbhbEKVpvDM8hN0YWolMbijCgUhCf0QRE
3+haZ5Bh5EoZRySfaxVn7JByo/ALo1LF6L+6NP374HbOcm6lXAwnUj3OIk9g
tpZ2MpfoTlYkYKChCOW/wL2XLvXgoxOWQivgB4ABI5dijDJeyFM2vmMWiSXw
yAWlqhJyVCRjRxEbg4ZLR9d0z0xBV1ZDFsqN4ZtSSKDwglMM6qaCetu2bakS
FdMOr/KzhHYqbEgX0Ls6zNSc9Ay4VAzQXjo0QmUnK+OeA84Z6JWMNqwqOYPS
t496SmoNo/9H0zscmhyRlCHbbSPbXp0ax+f69A6fJ7f/Mjkiw3hm/oAPPvgA
NAJ2BbkBXcAwMoGBH8qbbNp9uPDk5bQd+wFCWw7UA9fVDNc7koOiLCCu0erJ
ioOHDg04fPgVZSEHDhwIIurUqRP7wG+mCYBkdo7PjoS21KDNWaAg/wV0KXJo
vHsOgvC1xJqYuoGaamuHHDs2Qk9V2SNidcnS5mzgngNT/+bojPuldpMh0FRX
ROCfoiKSakTj7CxbtgzQqFxhYnTT45UcKA70CyBXxtBFAdCasJA60xSUSKPR
VgqGc6IClatXr1Z8BpgNwM7aV8sMiKz4Ljt/q+T0NSoA2peCwl0AKxrEinO5
FlqD76LaU+UXbpecuUataDEJM1QpOzu7qKiIu8k3uL2qqoqDW7ZsIc9Vq1YV
FhYuXbqU66Joqn1swciGeQkuVUjIIR92qOqKFSuoNtDXiE5cMnXmFGXYjVrF
ic7XqJ6WcwCnMY8M+KulnfuuDVkeOI8W7cxxYLwEFTldPNWcpe+zjxy42rCn
zHpA3ToUBC0aHmZeFnJgnyO0P0jexSYjCJCAUmgcLsclGx4JHSW4R9RBxRhe
H76pGzUkH/0vjLjqAoGEeR8w3xEN+4YqcLGGJjJKlxENfDg145OnBK3qRa83
LRoREPvZO+QZP0dnD6ZQpvbXZ/7ZVzOYXLdjcs1MnPaherzLdFmunDpIsX8y
otMyDNxOF6T+gGxAVyrZoX3oWrUOcRa9FvMp+yJXBunqHRqE5Qat1uxAfw5o
56N+u6Z7+isDUmvMcd1WrotjhwFV9fdX9V0zVxi1Y/mf7jtYh1G1mXacgFzj
ki5p8kWD+IPxNWSQnruYf+lq0abNKdRZc5lpQm4KL8c6yt0D/Hy3sb2FJNOy
3YPtO4cVazafDZncDdqbKbQHDw7BeTgrthr33Qm7ZgJ3tI3rTyrGFvryItOP
8WoLxSWWqDElcc6QnQqbWDexq2Z505MmkHacLJChq5b6q4p1gzdrgPci56Do
omerrotyY5wC0MHSC+lEY1dm3yjBXqCuKz3NFcwOgnm1syS365svblf1XUEY
+udYeUlxL80ibg+hojXs63nqt/x2C3LtUrirbqRBlzgrBGCim9WSzOigoVsh
Gs04xs6zqY3cbcQQo3yKhPVjBZ1aSWoojVycb7XNjVIY3UD41JM0ESrI1V5X
r/aW56lhnPx/FN202/OTnNVkMFq3y8rq1QC2raHkHGNI8a/yj9I7Aw2GfLhS
dvhLrRiQuV66htiWnGO4c3UgDb30P6KbUo2MhsZktNGA3wAYQx+Cckmj4gQ5
M/KSiQFPgToAJBC7WhlAYnIwuhPo3WhNtAYplVInqy5dunAu+9dqun9e3wPc
/lUUt+9bPKFy9igDR4KXtHaCwdT0AJuB0ApOXNJVzU/OwQYQ6ea9NaAalcmB
VeAr4BCIBSAnr6a+fhi4GuABKAIOAdX2T3re+cKNxI7Am8aZvfiAEmUyG9uU
cg0txBF+go4ATjXTuh6b1Vv8ZhzMUaNGGUBTmjqwk8QAS/nJG3cdBDZLyVDF
nfTkTDLwJyAWlKUKDTtcNWdRIgUBStlRMhGUm3f4GFdqrFVaQ+L6ifn/z7G5
/x2oZmzTt6MblVG9UN0b/i06eaX84seFJy4L6qgbO0BomnTlypVZWVnMDmhD
PlyvuJ3ZENVTJIcK9+zZU4I3MJLSlb4EiKqBQyWl06hUz10A8Ofm5kZwe+2p
bScvbt26FchNbgU1J/hkZGRwoirulLh7/tjS6UNEs4oxcheo27pte5lNyH43
MpRxaZ10ROq8eTNFuxihbGO3bt3AqLqgdu3aVbguk0SqPM8qDwYPgFGfOIWf
TjkNHwzM5jHmNmmNB5+TmJ88S/JVFMxU7XPo0KHkyZTW14Tn1hmEzHnahx0m
C9qu9bMQP6sezybRiBajVXV05b3gKaWeKkZyIhWQrq/Pgosyzst41KmYsk5G
5uIhpKlpeVpbAE8yq0QFDHpbNe+15rh9ofb2hOzxvSmOsj6b86+/xu3J7eg0
gi/M448/ztsdlMnpZtcN65w+uhu9K/2Y6gr0bHRcWjZU3KJPkAuqUV0LgI75
ymHZ7RsS2lGAlPwlb1ybeZApkB/okqh8S20vP4xu2nY4TjK1fxkvHLUDPA7y
aI5EpmGL1YeJFUvUhu96tzpdxkM0TpMDH32mo+G5i3ng9rSNM7WGKZ6m0rKl
q/8QoMXdEOX3scVeewtJpmW7Z9tvK+He7Nxm+3eD9la/NiRTrDm9WW7BLH/f
nZBJ2qKFpvLr/igaTzkYjbU2S1mXMaIglR46Qa1FUXGZLaJZX3kFYIXlWtH1
KvWKFLmVLWPR8lI4Ll1HNqCGcRkjRn1ynVGlXDl7rjBqvZemYumCfNnyQWg3
CMXYj9G1BuFKSfgWSlk2jtoy9sbqEigp48KB1BqVGEOoa66RvyQQOnDMSc3M
rmuat2EL7aabqorllGIMVpUVdZvSfm641SDnyL/8FPyTp7GHNARRK0YZxinn
U5JkPNfVBE4HoJKAQd8YhYxZ1oHLVxZG/K9mAqdIYgGWkxUDIhhYi5DEHvn5
EubDnCVwbxSHNzYrxzmX0vkJYv/lL3/Jv16Ol6A0fTB8cVDLPDmrJEObGPlU
6z1VPTJzYM2sQQrRgM93vdZu64hIQEawNxnqLavrKxVjngLOEQuRGNzSuXNn
MIwOaAB1Bnp+AuzBIeRgMHd2xACcvnPny7fq+3yU2OFm8rP1yT2qF71eNCUS
IkcwDGhXYQ+QA3BaX7lvTcVuPqXnbgXcDsIE2klfUZwQ1Cp2PX585KFDA/js
3x8PngFYkgB4U5P8Xw8n/pfDU15yvvBZUjuwkCQEALnm9NrElykUGKYHopKD
QDUO8lPWsYItThPAwOq6KzjJWQIzoCa4PWPPEVCc2uMcJzcyIWVKSgooFNim
D6aIVP6P3Bu9YgWoIl4nCBSqNf74vH84tfAfqQ/tI5EDQAuiA+fLk6cI7e1l
52+D3knGcbAi+XA60I58FKgB0XG9ys4D4KmzAj6UZYAkECnTDeY+Rg6SQCJn
W4oOZZEnpYOuS0tL8/LycnJySk5fu7J/ypXqSWlpaWB1LiGikJ+VtXHjRq7X
qKkGMOUhUZxf5R/aZHV5FZMI6k9zUTHF8EGkXKbMf6cMVF7ZH6MyAWINy2Xk
I44MHz6cHETar0U3A86asyLttLm8br65WWRFJvzbsWNHHm/BNuW67KLNn6LJ
k3NLpg3mueX512WVBDzDrrPwRthinO4qABieIpwF6GrNv2RIM2ot53HiNpFG
XSZZZ85H1K6k/tScW2Mj6MvAQWqrMyz15GlXZYg0KuFQAalNLpc0zE1oinLd
Y3F77ZwhAGzVdfa+8R95U5je7nj1GXE703xVqnTk0YeIbs0IzvLe1eZ1PZGU
9Nt0FHRT9DOy0Onb1WSgiyAf41mTrZ25QfGMtcFx1QO29P1lwSsPqZbg+Kh7
kaOJvqV07I4ILrYqbqCxxYEmWJgDLBe6uw6urYnqNVOK05yu8Yr6hPHdztyA
fRrPXYCQGEk+NIiL6eo5hDCLjr8CAEuxSnezAn63W6yxMdg/W0gyLds92L6D
FGTsuQGHB6R9d27NVq/CFuzwouVmud0XjTTkoluInuZcXrEXDePyUsTkEmA0
KQvLdeSUDiFE1zk9RFMStOsGK/DW6G1vYEwi6SXCabVlgh67WdkXaVsgK/Gw
xmqFTSSfO1lQnsVFTMk5dnT2crZJCAANAjcSnJfjSqVEGp2DRPsBwwfVXJLR
Dxubg7OUW/QqNO8HIVw1GFWD0QTNd8r6rC11Z5dkFsp+MRN7bMEzVwG4BXOK
5wGoQFAtQhpkdIwC+jopMI3RQ7SuM+7QRSu3TlbKlJGhCuoKuVOKLlecIqtc
kxH/Gm6JHl4ddZnnVI/KBzgtbnfyIjfeSkpK12zFufpq6WeqfAE7clcUq1E2
mdPF6vreUsTjjz/O4GugJc1foGu9YmXm8E3pNTMH1cwarE67bJbLk5/ePa5D
xdKnyt+NKLqDxjnLSE9gctLsHBNxL60Y3oZ9Y6oyxBtoCUgPSnnppZe0tKuY
oYxM+/btX3jhBeAN+JkPIEoOM/iE00kMsBFmC56BcPnHL67dusesVpXtKj51
FdDOJ3t/neBNDz6+jx4dfOzYiNOnx5w69aq0c3BL9+7dgUNgmyNJP25M+SnJ
gGrg8yNTu/BvSnTT4RTcXjOt643EjreSO4GfSQmMUS9diyj1ESwZMhV8q4Q7
SIkKy6CQUT958mTmI2Qodx0sB0wFU8n00PAOoEpNTSUHLd7kyRGwnIxlcqCI
VatWAXQ1vPMNBtagyk8FyUFitJj6kFyO5npDpnK6mE3tRFKKeCm0oqICpC3V
BLzNieQmxmNHu7cVWLlyZc7BBuYgwRmT4kCkqsHb/lwjcx8dAYqiG9MNUPqV
fZOv7J1UWFhIiUZipWLp6elGYuV0deBpZK6Xcqkn9dFELKalMak/30Z0lRlu
cVwpLWZKml1fTnEsKPqVO5umeDlXPAnq4XOZNJ0CLGSumg2om8y5O5SlWgsb
V+10wHUfEpPSZQtu0/ZZI/kYt7dv3748ohRHrVx5cZHC9RqAN6VrhJeTr2wR
OSv4T0savYvEyjeB25+Nbs4gzIr24XHVY4IW4PFYv3490yVeGWpo5pRCncnW
+0ibc9+53aThODkcmPo3ZxcOC7j92IKRzD54c7kLvBQH33yBOtDb0BnSy/lS
06vQIyl7Sx+imUUjg0702hMkMdL/uL5sHFWlGCR+G6KOvkiTCJ0hvaIRN4Tx
YaGWri+3X+v8Af+sZYk+0wmC3mGOTeZA97V26POrB3dypGCkW7i2/dsbnnPB
mgEowNSgza4JS2OU9qVAbo911xLny4qRYuo4qPCCK6T0+RRR15h+7mJ+ds7C
eaueyT3QI2XlUxrzOVf8oBlN83usv54zgt+f9TsWogcxzBbc3rLdg81n/juf
Hvva+uY2SyCY/8Z3Jxao+17rGy521aAdvFqcPgt9Qxwl+gRecEM2WAfRryZu
6TQu+Smowr4G+RC1TQKesFncHjjzYVJv8CYtCZxIJxlCl9p3hQ5KwG/Xpzyj
UJYSFXXR8C6fxJ5KPo9mdh35YxcB9Y0NRQRnf5cDgsa7PBzNFNpGDJYtkVtD
utMEHfCD66vqkTps6nZE78230TcYGjTy0Mgk4Fpcgb3//vvpUR988EFwZhBj
ZMQRtHNE4RqqTR1kmHO6Wo5snGVUcTG5vpwKreh+JYRWuV3rN//amTt+MaKR
QI49x1WV+b+jm3H6OEVSCikZxaRRKctgqCY56qRUf0ZPLr0kgu8tmQQhZYOl
UgopjfTEv4o9itKNY0ibqDzJVZhtQO+KvVSNbf/www9Xjn46QlNfHlf5fjvG
WXkvHCelpvUdrz5zfVr77aOeUsJdk7vxWEEdYJ4QuZKhn39BFCQAjShqJ2ME
xCtXBLAB9OWbNMrZAXWAjqnbq1eW7OAsspKvSxoF0iWxL1++HARYXz+spmZQ
Q0MCH1AQKAXgSgKAlpQDw9NrFQcu7po7ZmfKq5LPgaDskFICw82kZz9Pbr9/
0vMGwRQeA1nJRz0TkA9FiBsBbMC8MwuHNy1IKE8aBoA0Ig/pj8/uU5fUPajK
SI8BhIO7KIWUmqnffffdjD1HNu0+zFnWQaKFMZJIT/7vRTew7oYNG9RppM6G
8tRXV4kVWhLgpyXc6QnNq5FWN0ayIpO8vLyysjKSAURpTzkbNI5BPNUSJyvO
ZZ+/8g4fA4QbQ5a/uHdMBkkPGqRBaGfyz6w+ytQDlEgNVbBhqzh/s/zcDSrM
QbClLrRUHgzPPgA+ZMjDIEQ3IBFtRTNSAdrceZyBjXT+1QeBitFQPHi0JN9i
cjIRwHOiJBMfGC5NpwnSKCDjpJIJCA8nhbrAobq7fH4l5XmMdY6mhkby0rxP
0TwbNLJSPzoFq0sJGieTvCV/n//WT1yy8TibIo1UjNJdufC6uH2qPoLeuelc
uEGpmOfy3jHPpWJcJvWhDkymKJrHjyY1GC7TGU6kUL1uuTona9aWm0KbcxcM
U0uy+tk/ObOge+C6n1gUUcLhDeVamL0ypeUdpEeiu9hSfza34TxvdBB+cUET
JB/EYZQ4UMxKGTH+ooOi/yET3ertujVQSKqRviijRvOFo5j2c4cwbSC6FBn8
wpgddKoOavqckmbNkOdWDXpWIz+DIOB56aYX6Et1O9UWJPYOS9XSPv2pi5a0
0lhJZ4dX13kdjpVulpjKv1wv/Sdw/dLVoivXixuOZew403/n2f5Ad4dLUgYs
sWbd9NS0ZK1bIVxLqxhB9d/5FmtsD8bPFpJMy3Zvtu8mBRm2//XOZjTPZjmH
mfU3nnv3zFTTehBIjHV7CcxzxWHuiwZFovegp+LbBTInDsH10k4ghB8FN0oR
17xs1yQqNkM1YDXCmyEdi0t1ks/tEGTUaz1wFqClXTp9MIDTZ1Ix/Rap5II1
7fgExUidj6yP/aQTh8DMD72faeQKuo7p5EW1dqG4nBBJ11bGllFVwEaQ9qPQ
JRXQcu7iaRArsHvXFM+/QHElECW3MFio6644JEOJ1Bd5I1q8GWioA2WRrUr4
aqEz3Dia8K3ciqKLcukF3mrFkxsl/sM//AOo2CFMpC1DxurpD6uEOxWQyuI6
ryKWVNi1Y86lIEOghgCC1jNMRqiMdi2XCQK1RiUZgxKSg8I1zjLMgZ+uL3uN
1Nx4hfxLfR555BHGVmF8ecITVyY/A26/OjUO0A4gN3SLKtDGXQKKKxbNVT/x
xBNgHuY1THAY6PMm9ct/oz87jPIFbw7ImdCXNlTiQ9u7GnqGxQFM8n1kapf6
5B4yBIzVbnqwBwiEn6AjsJYehexwUOQjLwIUF7EQHhlYVzf05MnRx49HWPEc
lxGhuAqISDEZEoN2AMlgWnAmoH37rIiyNwfBSJRFtp7FwT3jOwK5AVraNsnk
8JSXwDMcATVRB43P4BzQFCVGcPvChB1zRov3APbaioFJXILYjH1t+Oycntcf
VA/AMyor1ZYzQwLtukZKBYwBzKgzO4C0nIMNBTUncnJyAGDgXk7fuOsgaFn1
eC5K/oauowYnUq8G5EYdNKGDnAHtlZWVsvSl8XDVqt8PvrNxUFCqzVbrOjXP
3l+XXnUI6Es9U1NTaZ/juf0at/TVARYMn5aWlp+fz6Rg6dKlFedulp+9kZmZ
CW5kvkAmXI7C5my5ubnmTG31a3D2xJNgPCaVWEDR6yv3pe3YzwWSUkcGWR9c
oDR1XUp9VLjdoFYeFUG7gcB4orhrNIWcHx5gzelAYvZdK+GG0hokBsEq5863
N1pdHROQkuaSkC/kVmCTBBRKo3FfQObF7/wXPjS7ayK0JDi8b9++in/2jG48
OdRfp9SZ0U0PVp4xrlE3Z0NQWTp/kV7uFlXSL4AZ6O75Y3mJuPvMy6SWMROR
3qMEPfMmbt/69evToxsTLm79mVi2zIKEY/NHVM17jcS0Dy87L2/ZsMcvrZpU
cvYmvYQSMUJuo85xkL5Xzx1+pia8kDGmu8vKAnj1sugwjW1h/2mQCLE3nRVd
qB0RR+zSDWmhBYnMNdSQktON8UHpig/IBXUk1Y7EQENKSZ6UGOiazeC6ZM4Q
LtzBSOW0WMxwRxb6PuNuBwUJF6ZJoKsatUrPmNNwPOP8pYK6hvRtJ+N3NPWf
++HTQbohQAtwe239xnXrk4IFXktX4Nt/N3jza7YWY3vL9ofd/oVrSVraA7XM
zXfzaP0GPt+W+d0PuVA/IGdeuiAS68TZzsGeZPHiM0uWNNEF+f6GRTGdTOX1
gVrtUjhCb+aLLG6nRwrmbvO3I1K8UfO+gUcl4QRPWJ1PA5IPxJvRozOWL79B
rUL8aDUPBclvpXVauLa9RnISaMrQ+iFud0qi2cH5i0wYaXvu01uK1e2KjXCn
9ysVJiXdcjC/SyORHKjBn/TUhxMZC7S0qBWj066dv/BYfK6sivZtbfiKbYqW
QdfKJOr0JDWRbEmsPyw7SjsKrZVkZPjguEgbFE22yhc7GMnitlDSGMwov/Bt
+u3zl/I3Z80jvXVzxiGpnssBMCvP7qKANZeco0JasNiL7bkQXbdIbAwmzU3K
L5i/QQaB0CSQUa9ug4QWGe9BAT6IUgrgtZUxdJYOfezy5Kf5XJnyzGdJ7cDt
B97ovHtcB9AsMBvoTvWopJMUYzU++OCD5MxOmzZtKIV5B1gd3A4CAUFteb0P
MP6xxx7TFxV0tHNMHGBYhgyoDxwC4r09I6L6CDjhCOCfrIBS2kJBU+SjvIas
YKAIkAwgpH4If924Ef/JZ0PPXptWUzNIVoAEaVLKIgAIAXUUKlRPD9y4evVq
BVgaZvS8mfQsaBxABRbSPVCjKNgMsAQuUqlG2RlSSqchgeF7QDhqGBp0iRnE
gQP9jLyjFyq1BV4CwNSNISX/KjLZtOAVUFZk3pH+cs2m7iQwqpTaNaBTMtGo
u3btWp1Ywcz5R46DwYDE4PaVK1fmHmoELWuCnh7duApaiRZQCRC8ahArrheM
TT2zs7Pz8vL4Bjl7aTSLajxBKR14acQiSqdWqhGCzDfsPKBdnQvncrKysmhM
Kg90NwgU9dy8eXNRURF1o5GVf8zIyAAxsqMn5vLly4/lxJ8qeEV4Tz4GSOVb
t03qYNHeOy4kdXs1pfPMcJtoFmrOX8pj0s5cI88/6JenqCI5YdvMEXHRDfjN
nTUcmLKKPBvcOGaRPNU6Vrdt29ZpHZnT8oYckrJlFFFO5BnmmVc7nSK4drIy
BKoCRNQnKIXSkuqOrkz+xZrZrdk/NP1vv0z5489Tvv/e6Y/ea7q5sHK/+p8G
QuXxVsqGnEH7XB0NztVxXVz7yuhG/gB1WTdcMvvx0Y2aULGSaYP3LBjHI8GT
BkoHk6t+Tzsz13M5gONUD2C/KLqRIc9Pc5Z7dOJJ/ryGUnS2jWx7YvGw9wu3
qZelrJY2Hy0GtCGdmLK34PbNr/UgWQgSrRspfZ0xVZUCC9YP11jpPOm+OEjK
WFsE3wxDJKDXJbF6klp4VCdwpVh7UaBfMkwY8gnYvDi1o7GkXafWYOX4qyqy
8ThCIBKOxA76YdM0p8ibcUy0pGll4qDWLWq+IX0Wnb9xQDgi/dXpQEAXgHY+
zUCFAN4V8N8heo81tgeP1G+ENC1by/Z72r6zpEyr6AO8NjWRT3gpAqeF/XMX
8/h827l3P+SCZ/1PnYwH93MBuVBZ0zSgHZAM1nLWoLGdZGJdZWlllfBT/RBh
sxGTndGHqA3yXoJsC0foo+gxNClo7o5VbtfyoD6hVRozJvODDz4BulsfEtCL
hthzyqToB6QhWsUYY17oGOuUodUdUX0nEc4LSMOV0mmH/tB/A9Gd5tLv1W6T
xHTXshbllshmV93L7p2/OGiMbFXN9db0OJloptYUo5SlcutgV0Cp6oiavgNv
hLFGrrvElTDrUUlSDg/jDkhYXUTD/HGuQFevT3kmSpORQ2b2/MvXivjk5i+R
kW6MEmORKDIvncYxSJE0xY3lSUoZVRJHC7m0Fi35VCYQ8rnj/OswSn2clWgz
N2qh3rjKy3hcZXiXIWTgOEdQiEZLO9C6amz7a9PaHZr8IqBCLccnn3yS760j
nqQmStB07NgRmPHwww8zfwGuk8B1CgZ6USLNa1gZkAZAXVGaT5Mimu3uk6xm
Wtf65B7AYMpSQK+ysisfEpAhWZGzMAlApQA1UMf8+/fvb4icjz8d+qsvhq/d
ugfwAxjjCPASpA1WUbcQrKtsI9CUv5wmGJmUv4DiN5I6gqIl5ICm5HuTP6is
cf7wY/NHGO+JlEendwOanpjTl486gSBAAJ5sBC5h19wxl+sHAN3BmfxU5QbY
RrWBXhwRrQHzmC/w4SdYi8zB7XWZvYB8/KXEN3XjXM3mgDHALWgQoAUkA/pS
+fT0dNA7uNcgR8ZmVWaQ+oDoqJJC37SnuN2ITlw75xrnVO9FEB3tk3xnUzxT
+USanROpjwGDCk9eLjhxyYCemu5B6ZxupFQjMTEdKG1oKms8G9FvPx+J5VRc
d3rTpk2ZmZngdu4FbUjpjVv6AvU5zlmy+sXqoE32VWtUnsXAqVwIk4XiU1eL
Tl5JrzrEZIF8XOkQJAM1ufs8dcVTB4HbuS+G3BLr8rgad4n25K4B44H0rv5w
lh7HzpK6du1qGCOjo/L48RjThsB40vPkMxVVdkatdTZvk8owTIJAy8Bpjeo0
IJUEsX+V8j0+gPb3zt56p+GCekdsPAO6J8jA4ar1ayY30LUaRLQDd4pHyPCy
utN67YZkYl5Qk/xfjSam9g7PD08LDc4+N0tGGW2oKV7HZ6p6Nm1kQOyfHB/A
B9xOY1aO/Xd8eA1pVd5rfcmzxvXa9OrLdN15g/6EDx2voZx1zJfEYn9lrDo6
N20L4tigoKvxhIHGhVc628yxPcnZBVOFCOgw6d/UNLYvJVt7dbG6SgshZKGh
t12btr/NO9gz/1BPakuG6g9r05ZiGmzvUkZDRKewWh3k1ATtLlibvxMEJZrJ
h3agVtrfzEqJCWn/7ATnOMFGIM/fbScUZgentn+5TmMsdAnwqUUBsmW7l9u/
RAqSlxTQHua5sapQre6wzr7xXP7iE35K1/lXdzZnASFKsnN5IbQqLgYJBVkp
JCXqFt7L39PsoMOmGrDq3NI/SOTgiHBXZ3ZfahVmpLIEjfcQj5WfSr4IsBW/
pcP0LPIcOTJ99OgMLef8Sy+qdZ1NAobCkvwUYGu0136u4LwTFucOdlmcYmXo
XdXIspezqzRzJxGS252wiE5pHynf9swujKoGE+ztxvuQDqQVReVz8gR/Mrh4
jVSeE/WWArIaQohhhR2dOgG0UjFlB3G6JPlAfaFQQ4iSv8xMKZqMO5Lq8wf/
aXHCnytcIIzXYfPRRx/dkrsoO2chA5bKM0YeUdSFskzsBCSWVGOVbECukdKd
DhgviVFPr1I2w0tpklIN0iqF2YSMU05R54EEnMU8hRysA2nkDgm5TU9bcZn8
9eCDDzJSU3/wA3AFuL5tZNtHHnkE0L57XAf1YTi4Z3xHueuM5kZT5doZ5QE8
ACFl64yDQ7Jt2166cqVXVVWPq1Pirkx5xnDq+/fHf1TbEzAMPgGWgFiARtu3
d+FDhhRNPpwOOgKNkACgAu4yPg6Aim8wFd8g9hVF27mz7INktH8CwBITE0VT
QERQqJx2cM7NpGfB7TIHJEtLvRACcRbARisuR04vSOCjDvaRqV34cIqKLoJw
9kGV1M3QOeD2iuQE4ByAjdNJAEwFy4GRSCannboZ9JMiuBwQlHQIYZ78c1A6
yeT8W3+AsYZx8Bj4DaxLbsB1wHBWVtb27dsBwEbnpBGUPdTBkymPwTf1SKX+
RUVFzgLIQd1FadIgQ0rRa0BuD1nRbqA4xWoKT1wuO39rw84DNo4+ubQkENoG
VOmFSUHF8fNbT1wANJafv3159RtXVr7Ofk5OTkFBgWonVMBm/OCDD9atWwfa
lxckqR4g7ZoLt5j60Erkz881FbupA9AdAM98geulVT2FNhe18mixAyZXbpR8
eCw5V0Wj0dFNphZInpahLPLXx4HL5MS2bdsqXhoXF/dydOMh5DknJfnz7JHA
eSuvCRieIkTRLq8ArambIFlm15cpfwxi5/tWyl/OKasCtM8s3kFBNCMTCm6W
oXVlKyluMyq6kQNtQkMZG1e3X5pLbhKPnLOzozPuZ15wc/ZfUA1VaHicuCkG
qKKVuLk8J3qRKP7vGgrzvuvXp55bOkLxdnF7w9yIlv71mX92NfkHxmigT+Dy
8yb1q5k1COhOT1Uw5Ad8XCRVDUD3VXoYuyl6G5cX+aabpbehIwp2Ejsxumu6
PnKjY08b8ZKGeo3zujLJijTyKRkaZc/B5V/dCTKu/IJeUToo8Rd947YT8TvP
9i843MvFYlcnHZ5EEfJXXZIWzxvvT8NaCETi+KhdTj0cfdYM/OFZTkAoxYmA
Y6L0VP566KGH+DbKqljdMfrbNGRi9e4Cw+d3ooDdYmxv2f4g23eTggzqMTzD
4vO7p7p/dCd+8d2bFJqQlc6hvkdhRuz83X+dsAuJlRNXEV2meqx6quRqw8zp
vWIMI7oClwtdj7MrCDNxpd3tWKTnka3rhtZNco4h5PQq5RR1WtiRdU+alSt/
xUf6iprkmi84S2aLpn59VO21SKD2l/UMzBmtH/SQ9m+A0jANsThtI3LdFfiy
WxaXkl5tQzCk9plfzfreF3O+lzfoTzS/B+O/Lem8puFYRv2xTfaZ4GogqDoq
Bh7iiAFJf/azn+naqQwj4wLlMljopCk4VyLSHZdxyVPvVE3ZxstTMZKf5aN+
WDH6ryhCeKwJXb6NDByDelsZBVs4GOYaYnJ+8hcpdSCVgu7zoOyMhB/OJRP9
Rh3XRPhqs1vJwIRR452DSjtynHMpgn8BKmAMWTRONxiO+cs1HQriFH6SBqCu
n6mxlmhMcAvInCM7Xn2mPOGJiuFtjHxqPEq+wT86AKobI7tby+TDDz8Mbr96
tffOnS9zBOwN8gEG7NvX9+DB/oq0gzYBMJ06deIvsmXnqejGT4rW2M7BvXt7
X7/e98CBCL+dskjw/PPPA7pAPproQVCgbsBnw4yep+f1BxOCc+QDaz3WmVEC
DHiVv0AvgmpDGoEnAaIuBIDVCye/UpY4VAlH/QfJ3EhMcuaDj6rOlQq/G8uS
s4Bt2rQ1pAPnZMvwLWhnYkJlQGVAcUnvwLONuw6uLq8CQxp6lR1AIGiQZGqP
cF0yXjwFSAYU51u7t1xoKg9iNOwml6x6ISd++OGHoH3O0gWSU6iJxnaV0g3V
ROVJIM9fey9zEABz4cnL3AsuUJ4STUGGGRkZznS4LorgMrOzs3fv3l1Ue6q4
7vTFFWPB7UxemDVQT8qiINqZEymIC6c+y5cvpzKUAlilUDAwN5enhbvMNXIt
6VWH1lfu4xmjzbkX3N+TKfFK2ZAJTURrKNLIHSGNnBNO1wIvaBckkzP/AsvV
NQLbk4CU3CYqAErnoeJcdjiXNiQBE3+eLiBx9+imlqnxyMiN+amBnJgdcCJP
kbM5Z448CSB2PpxInlTDUFacovGfyyGlDr9qjSrpw1WodaORnDxpQxJIy3Ey
yOPNs31o+t8agZfHj3OlwXDjmEVWL3qdfZJFKDFL/qlpYY/9SyZyI2hwHidm
fIWFhaeXjDm7YFj08zVPZvuskafmddv1+n+gfZhEG+Q0d2J8zoS+gnO6Kfp/
eXd2mIVD/03piP9TnRmOM9Onz9GrVG0xoTstaQALezYNFJrKydMITfac9G9C
emN20McaUNsY1nppuVxrsBLGYmmW7HDujqaIZ+ji1I4uMkrIkbgSWOsi9uCn
FrjoIT54UEiT8ynZXlUHCnX4Mxyefmr3RYOkNyPSGwpWp1rTaG//RrnpVjFg
O1Yi8jcE8IlD/j2fWLwUm22sC95vhJxatpbtd7F9BynIWNDeKgrCaxs2NntZ
APNrUxPDbLTZFqjvLqjFyjcF3B6kpWSVB+lFXmrS8G245KDg2iq6WKZ0jJuo
WNFybexs9hsk1hvUsGuu2Wki4KCzcjoHaxicQwXkQnqxPb2lp0uPEbfrHamy
SsiZ/pb6ULSyiiJn+yhtF5pBnFPogy+zxUmHoiicwkFpP3L/7J/tk43vqe+S
yFOjsWZkcXt2/+8FaUp9eyW3yyQBtzcczzCWEIMFGI/BIliP5bS7jBvYI7LK
PU6C4EBqJV0yMBCVRiRK0S20devW4Gqt1qoHgHJF/rqL8q0WGdBXdrqIWgqT
4JmfRobS2s8pHtezVfmFfx/dzEo2PvmQhiJcXHZVgpSkJxNXRhSTcRKknjw5
0xqcpZAy37+IbvJ8ZLY/8MADKghRq6JBjwDXQb+Mm+xsHfF1GBpQtwKPlaOf
bpwRf3rekIYZfWmKDtFN3G64JbAW4EdPUmEPMyndY8FIIOqu0Q1ID0yiiP2T
IpAbWHL48Ct1dUOBN8AzMKHMedKAGeLi4kRW5Mx+VVWP69f77NnzdSwbPVjB
8xRNzoZ/BR0Blhpn9joxpy8YEjhUm/gyH8CPSim6oILuqid02jO+IxA9EoBp
RrtbMzopbH5sVu/bM5+rS4qEuZGTA4JSmxGIRYZy1EGMsnE4IsXagE2kAdOm
zX8kfdFjgDfAGGmAZ2J1MKo2c2oiu4YW4xQOgn5Bs5nVR4tOXtmw8wAwkiNy
SAzAqr1Uir6+kFyLUoSgXxKrMEOy1O3Vq8p26SNAe3KENIUnLpc2Xd+8eTM/
aSJVKOV1SCXim6oqueO8w3UBCtLJV/9Z9Qy1gUeV4W+VNX1EU1ATkCQVLms8
W9rQtGfPnoKaE4VHT+YcbCg/dm5FdAPPgxhpTJDk+vXrSU/N09PTdT2QOiKA
1zNUmz/Tn/xjF6k/jxm3npvLzTo0+UVOIR9ahobVfZgG4br09FRQhTtIPsBs
NWcoIvib8/zzL48QTw4FcVEqKNJiPFRgZrIVYPMi8AzrUkoCHjby5P0C0/Ic
WoSRnqgGLemkaUp0M5Is95pnmzpwu6XQc1GcaCBaGpmbQvszPaFJpSTpQMFZ
RjSjQdjnGZOHw7erFe+//77iM9wC53rOtsDeWtEb5w/XhTlneVXO8uqmRSNO
LRlzZOkUEPuW6MZ+RBAyknjogbci87ttM0dwuvM+Lmppbtn7hdu4WBoBaE3T
ySSkw9F0QH9VMOQHQHd6tm1j/m3F6L8iMR2IWltyBaUF0gXR79HZsh+6QSWI
6YTpi7S0BEUvR0aJLvS6+j3JSwkKBsoUGO5ECxV5LljTTnK7hBwXoF07VuxR
4QUhumvZYdx0WVx7u95wWswYWxl9nCDQf1K6wpX8VCje0zXpO0C7Dk7+El9l
cnItGuK+ja8Si6tj5TJ+DYAHrqfP/s/F7/yo5J0fhe9mxvZYF7zfCkS1bC3b
v2T7bXG7oF2k7bwViH7uYl5t/cbYZDJhvm0SCmg/dzGfU+TAx3JmnFm3uoPb
Q3RR39/A4gC5cVzajC+dIq5SuCWQu+mdqq+oNo3AuLMHUw/Hi7LPUcDKBT7/
CtBdSwX5SFZRg0Wobw9G5xPkEA3KrDVAJUbj0MkeCbHqqK38dp2D5Ol5vRYX
9Ht1mQz+mBqZXU8kW6GpGuPaoo2yIQ1G033+4D91NZbE8tu1NhtmiB5eOC1W
N1SoVmjhukwbK8AAIfVdPoxBVJVzUebdIEq6rMqiF9yCY6XxGMnI0H6eqJQi
SFgAL2uFK9J2RE2clbgi4HzBUOCS2DmipZ3TARIRt9b8dnz0RXU12YmAQaA8
S8qNnryKvbsEQAXIwVmMUxKJ/aTkzha88tD2UU8pJk9xZCj9hsw1fBUPfhSs
Dj5hwN04quvm13rQvABvAM/ucR32TXyuYngbcHvtnCFZ43qBWPLf6J83qZ+2
SnnmjO9geEnpgm2O6MFqEHngh9B9+/YuV4+8/PGclz5JeQn0dejQAHC7IBxQ
BOYh5WOPPUYFyIQKiMbJwSUAjpAnO4ArjshS1soNMFMET0O6VkpgXn1yD9AU
sBNMwkwB4ASgArEfmdrlo8QOXyW34wMUNFzR0endSA+UAqOCCUFKB9O6HEmP
yMjIfyZbylL+kVPIWWs8YIlT3njjDU7ZsODRCydfrq0dQmLjOkmS4V+Qqnov
FmGUJeYIIPa8w8dAuVn7aoHThmS1COYIQHqAsSoigfCgjyHXxT6wDRS3evVq
fgL/QP4qbap+CbqORKq6cBuQTG2VNGcio6Wa3MTkCj/qxgj80+pOubI4Qqgg
ZV44YnDV0jPXNXqzkbKo9lTZ2Y+2n7pUUn+muO40/zJf0K+WmUVqaiqZi9hB
qhF1muxsro5yjTcqYUnDODeX+RpP19qte7giHiSeDaZUzK2MZEqFOVcuDaXz
U8TO6TyNwGOp/uQwNLqBvXmueCzVkAF18zgxK+QvHjmOqCEjF4spALkNiG4u
A8l7N5qSkYIVSvLR5duASmTOo2j0KFpMRSCOK3NEWew4ZXBRSdlGWlW3Xy6H
RuZ03gWnVzzhfaObV8FfKszLeOe+Z2ZmFhQU0LyKz/N9ZkHCJzldP8ntenZh
ArPRSHTa5Ydylu/jJ9D92Iczt2/fvmvXroMHD9bU1DS9PfbMwuF7F0ZiKFAN
yWO85jQFDZi2Y//Kkh3MbuivgO4cp6OjH5Pmp43CgM70RcUJfw5059JoTwPA
SRdUZpZeCzxvn6YjlQuL2iuU/A3ikBo62NR+16fJUH0ySPX61PTEgEUaLRtk
y8+c+Afy+j9okAsw/PzVcQ6sQRNGZ7EQX0nbe2DIiMBFuR50DNUlTZY7VWLY
UrVS6730VFfeDdpiEXp1OcJypXa8ATOI4cMW60za6q4Q7a3uAvBs4PaSKFwP
H3B77CmxJJkWBciW7V5uPG+/ucZpLGiPnbRGTO71G5u9CM3o7rHb2tTEuob0
2oaNV64VX7leHNxXrYxvnO+RxWlv59UG47EPhPNt1RSvt/hfRDcAlfQSla8k
tEjb43gIviaZXAaLq3vC8qAMrzE8qEhJYjcaqcw60xirSBsFWY0enbFkSdOE
CXn2eKoE2B1RJaksirrIdTcTOYHkqZ3WfkzHVcE56FG0LFNdPRz5NnZ3zjIU
6ZKmElIa3sgIp/TVDAFlI//y76IbHZ1x91RHNMar+5z+i1/84u3s4qW5ZRzX
bu/yqCRzCTl86y3FpkqMcZFUfVdwRvaOlefCjd8n9hbDOwtg0NFLVPO1JB+N
83JpVHpU5l37uSid/E1Goco2unysfntJSafCwg4KSMqEIasHo5vEG81TFK1p
3atzDVrWuuOg0zGxvXT9okGPVI5+Wik2afY0JvWn3Nx+rRndyEG8DaoBmWeM
6c7ozEgNzK4a2756QiegzpNPPsn8wphTmWN75k6MlyEArgZ7ABGBQEpKAqqB
NCArVTuAMaAa1d3J7cubvT+90btp6Shw+/5JzwPdgdDKfaiqQbna6skNgGQI
J9kO1MGYTRyUtCwLGoBklExjyssw56C6jqpnCD7VSAGP6S5KBT5Pbn8jsSMA
yYCYgKKMPUfWV+5jR3E/QPvRjB71Wb35GNMzxP1hn2/QJsk0yMuKqa8fdvv2
K7duRXxUqYba6SQgZ2A50wFKB84ZYBSoxqfo5JXiU1cLak7kHzku6YWcDe4D
mgLLifaNUkQ95efzV6CF67gKluMUXXH5NpiRuB0gDbDniO3AJZuDiwgGFQUN
kg8XqNi70wTdXZWypDEXRDcgN39xCm3LtyKQHM/JyQGuVxw/X7L0/sjn9DWg
+7p169avXw9637x5s3MNGoELZHaQlZW1fPly2oF6UoqcImVSwHjGIQUGcyQ4
b1Jn7d7ca3Kj/hqiyU0lRh4YniiguyGiXNfgknmKeAh5bMyfJ1Zddx4zQDvF
GTKMp4jEykuSCbmBlvtFNx4tcD7PqjZ2s+0f3ciE9rHBdUcdPXo0V6S+PZes
SywHaU8rIGg/MPVv9k/5az2vFW80VBbnkswIwpQib0c9IolJtAPPCbidhuWb
FmZytGLFChr2xKLRH+e9/EX580D3tLQ0jh9+d7L+p6ffem3Tpk35+flFRUV7
9+7lW3HL3fPHNi0c3jh/OM820ytahh6DRqaSoHcm9eBwegB6j59EN11H6Wd0
R1IlhiP0LWq/KxtLf0X3QmJOp78Cz3OuYel0n+fb4dLBgt6PUrSTODCpoMWI
Q3cd4ptwlkibv2QzygV1QZNkW/r+sjax1+rBnUgJbn8rrZNdMaOtGDsEQHG4
1KLu2rQjXXBKDdLujHSUZTKrzXHKDVpwGthDhBSOxKpMm49kWv4yRHhYAghS
1ZrjxAxu5v+/3dnCgrvr6Vw1zRsL2oHxseA81jGwhSTTst377TeUgpRGru9k
swlmUHaKTR8L7GM318soNDUt2agKAbeHUwJZTvK8bxO9mUZy6eimDNxyvSzF
veJz+yUl3LXMa6g3kpHdi9pTAvuwrhdiKsVy7yWfywlXvEWrvmBbeZnFi8+s
XPmr99+/KfYO3aMTBPn5dmiKzIRApcanI7FUbfnSslDYAJkUoTCLvHQvR09b
q8p1qcGiUorwmxy0BgM16Z+1ogMjDaVnsDxt2rIcZbPLeySrLXVnc+rPSb9R
pZyNc8nTny5uOk2QmqKlOsRCpVe3A5QwY5eoKV6nVGnkwnKNSwwu5GC0I6cD
DFXODoLWmVFFjC1FPi4KS4/xSiW9SE1Xbl3+OfU0ShQjHQMoKTnICKgCgzM+
eTKk18NXwoyGekOZqB7JOAgMpm4a7WXIcznUvHToY6D68oQndrwaCWUOvK8Y
3kYBSUAycEVhdjkzAJvGGfGNM+Pz3+hf8GYkOE7b6PbUU08BgUDdFMFZK0t2
AESBW8Ab87w2td2e8R1JCW7/rK77R7U99+3rW13dBzxweErE6i6FXs6wkZvk
Iejoql0dCEERsu61ixo3R1kP5VMU9GOfaoCI6mb9/ZGkH8tm2bBhg5Zto96w
D1wBHR14ozPoXRc/UqpbwoeUik8CkABdX2x77vNtnVT/AKhrllePZdq0aaIy
Kd/8+9ln8V9+Gf/FF/FAd6UXZTuvqdhNywDdC4+epD6KkwPXI8bwi59Eds7f
Lr9wm78AWoAxAJghRBdGN5C/iuuS5BW6UbmRRtClkRoCnuXGgIfJgf333ntP
8EZlgIK0EvMsA79KrXHSQYMYGZYcVNRUioTrolVpB1kfZOJUAqAekVWPipZw
Xdn765hNFBQUVFdXV6x7seTdH5W8+7cy3oHr4HOuCJTo3IG6USuq53HbjSs1
2CsIHGTOTVRZXZ9QrpFKgmlJTIW5ZUJlSl+6dCk7Mvy5CvU5QZ5M66g8rUR6
nhaeKDLUY5SHk3+5RlqYR4WHykUcHjxjDZBmSHSjJsBpfvIEavfmwSBzsK4a
PmSuDgx1oLacQp4cUZpGB2E9TI3qq+S+SpKce3TG/Qen/UhdGucC3iBDtfIc
chCQTyVJ713Qidi7T0syLTKQbnp6enFxcfmxc5WnL7Nzs6DXx7kvH102jWav
X5EkbgfAr1mzhjtFcwH1DRHLrGfbzBFnFiScXDTa5R6q2qFDB53NaRDmL7Qe
E2rNF3QR9q7BeceIGNoo6Nn4lzfUmHd0AvIPdZynG6EHU/dAy4N9uxwVRg0y
scNxXkDmMjYVV3TBV5VgBgJNPSoqK1Cs6Z5xZ+3Q59cMec6yjBvCdry445Xq
F3MP9FDBWEtUGE/l2wgedFANQU8ku3KxwAnyke4iA9/lb093wVpmO2m0twfT
uvkHuQbOtQGNtBgboND5gvMIx3FHcHcc0/W3pR1SRv/nANoLlvxN8rD/0AzG
BFzUQpJp2e799pvgdi3hvi93P6XON0W8sQebpZQCp/9Iq6jVXZM76D3UJGg/
Cu9JA27nuJQS6eWqqQuqFXjUXEB/JWBWs0X2iK+q9nZeXp3lnb/bM0iQtvL2
AxRHDxamBs4g9NwUeBtXTgagXG5ecxKMHp0BaH/rrbP2PKHTE5zLVNeXR+EX
l0TlUbMDUhWC8pc++9LX6aW1VFOW3Yv8Hx1O9eJhdkBPqxYi289//vMQJ0j/
Sjtebf6qBJiVapOWq/Mm6JdhgqFk/sact7KKZIxo9pF8qCYwhUrI0elJHQPX
Zz3OvhMNaqjBX7qLBBvGDpCzHBVDl+qTJXTXTKcpm7GGOlgBzvWSVX1xPcJF
3kBuJ1suGWysiI2MGomjVEYNZEY6SqF9nCg5A+JfmfNsShYbmDVMWGRAkV6x
HRB1mzZtjN9KtvkD/rlw4MOcq0Hs06RIjFTmCNtGtr0y+RnAefb43jLMGUAl
nDNkg23Op8Rfntvv9LwhR2cN1tJO5aX6AK2BHB+W7iw9d7P8wse5jeeBRuQJ
br86NQ5sDPContBp38TnwCrgdj4AD1CNsIT8wQakp6oM94ZnBfwAXZSUBC8p
KUmhICLKclGANHLsAXWAHMM5cTBiTp/y14em/y3FCa1BO0BorccDBw7Ui5N8
1P3gG5jKX+AugJOMa3Ykotwqe+FmWefId2lncq5L6n5rRqdjs3rzr9FIZYkA
ourqhn75ZV9wO6D96NGIYgwYkoL4izwB/OeXjyltaAKvGucUCFd+8WNwe1Ht
qdIz18uaPgKAGVFU6Q8uCrAHNF2xYgWQlR2Z82A2pwPiUrAlFWZfzXOSAeeU
6QbOAdUUsTHuJ02UFN0EyQB1CSqa2bWHg4etoesIugbQbmHiAG5PrzpEldhh
SkLKgpoTfLZv3165oVvFO3+3++3WzEHIXFRJC6SmpgLjqQngENxO9VTFoSzu
ETcRGAlopCClUZjNgc+53dw1EDhImwukRFAuV0F6bpaBZRUR0jVYLoqSRHJL
OFFPasAkN1q/DB2WyZznXP4MMJW/DBxAeiArjwdZOYkA1RvISWu/BC0yEfzr
GmCoAqns1NwYwcwCqC3l6pjMHCdjzxHjZPF40Mgu03B3DKtKC3O6ikxshveV
38XFKvtDcaqbGieXGZBWdJ6rrScuAN2ZQJ1+67WmRSPA7RwExufm5iqhz01n
8mWUW7WP+Dk/unGn3t17NH3/IeP/1s4Zwh3PnRgfYjHwxv3jP/4jHRfdCN/S
3aUO0iv+OLqJ5F3dMGRqCDlNMvoc+eF07HRBOo3SmxmXUKRKx8UrTyegbV9s
b5fLiTlz/7lg4aMc54gWKrtWzUSaoHP7td7S95cOxDp5OU6dKOl0dd+LO5r6
z1v1jGYxbeDic01eWvaCMqQGQPXQFHyj/uotawRTDFmaTfCDc3CX0OKY7qUp
MmxxLnCTkuvShiMAMH1YxBfPBIk2swqyFfyc++pfb577ozmj/hM1aeadGssu
bqYw07K1bPdm+/+UghS0Sxr5xkdU3C4sDwmaZetEu5l8zfoNM8Dtl68WBQ/0
oIYqunYVzHdQ7rpCMYHAxosmmlUFS9dONg2nclrMSp65VmtfTCf+nOjV2T9I
vaMge4wQulRsHMLACXQpN3/BI3zsJ6nha69lvf56rvYBXUcVnBelG/fHSENa
4+ljg/VDvXHt8HxzkBJBgMFZkk2DgFx3O14zBFIySoLNAKUysaUIKvCoOV3x
Gbu4oHnigmygoMiQF73LZmeHqgrFxbHGDOUUrd/kQ4PIgacUZyI6e4q3Je14
0OEjGMDFzORGnsYn5Vq4CnZ019LdlRFKOk1g0dt68jl1wqXaDmQa3gHGzg5o
Je6LPBl2dPuiUAY7E2sw1zOLPF2kUChYtE+asWlbXl2XaSn86zyFoROUa53J
oWTI/ygd+piRZKn5Z0ntLs+NPzVvaM2sQbtea9c4Mz5rXC+gOKBd0gvAQwC/
e1yHa9PanZk3pG5ORLUDMKOhUooLKd/LK89rvFB69mZuw3lAkScuL9gKngdy
g9sBrkpqALoANuwABoAEtCS5gZ3IjbkAsyEjv7DpWghMIkM5CZKTuXAqST7s
A6jAThohj0ztcvDNFyQz8A3sBAgJh0BNErkB23oFAodAvOwYdEkFD3YE7eBz
PvKNOeVGyfPgdvJvmNGzcWYvPkCgN6MbaebNmwcoun37lc8/jz9yZCAZAlAb
GhL27o2oiAs4T6bEc65W7uLTV/lo3gf6lp2/Xdp0HZit+VTBeaAaFVbcEtwL
ngdiyWHWMZaNyvOvVA32jftDEQBjDbClpaXsAPAU1dGLFigo2YYc+AazUZbs
fdJ4OUuWLOEsleQFlnv3bajak0oafSGpIROErH21AHgAXsQL9cLt8rM3Dh48
eOmDcZdWjMvOzqaJFi5cqMGf62L24RyHc41+dWHJEFqSaqsurvFc/1Bl0rnF
3FwgKxfosgK3Rvs8gNyGopKiYqY5IGRZN85Q+OY5dBFH4haYkFkAIFn/C+XZ
Be2qPtJBKSBjbCMKNRIrWJoW7hXd+Cn5nFblWyKWzw/FUS43XeTP88npPGn8
RTImJjQsMxefHKnv/MUVcfnGrqX+8uF5FClReXnanH1jgUko8mGmxZYtW6Ya
0qF33gSrNy0aWbd2Poj9+KpZO3fuBNJzFxQRUkeUn9REGRzXcZRFJeXS6trM
vXti46gC4E/NH0Yf4vvOK6korvZ2FyvpZOj9jNesB83WV/+vbWP+rQ7yLvmB
2A2NyuniVemOwaVUjorKDCTmvpOSBJJIC155qDzhCcotXvJ4+bttY6Omqocm
+1RT0oVJT/LRzK4aM32vo0PewZ7bTsbPXx2nL5hUdkXYHFuNyaK9yDQyW1zl
VNlGixnDsSI22tiDwJrutKo9uOLsphHeBdkg7BBY7mSu46pUGSsjjJcYo750
8Ki1IIcz5TFb3cWECR6pd//VsrVs92b7NkJLqzvCL06ff83zGf6KZcsEkC+e
D496bD619RsvXS1qOJYRxB5d6go67YYZ0hOQV0/gHU53lU38rLuNLjZ8C0pV
qaIPcU1NcVr+CtNtMtcg4LoedVu3Pik1LdnjwTIfyDDy3p0mqHwOaM+Z+89O
MSjRQK6uwYmoQwxN+diSpTXbSkfUomIHSOcsU10+DKUAQQWo6jfqkqmRJIRV
EhJrKrHFyFzpcsOASk23znpfKoMjJVLmueFQpYiAabVUcCLZUqKAWQFzun1O
0QKjdZ1CtUiTWBzrzEKFMWcQatrrtcpBPUOllKshyTCktgxDEqVIU9eKDuB0
rJEeo98raULrKQtG8zr7YJ+s5NVL8lRF3/BVuu7yUKlaowxyINjIVJeB7xIA
eY7bkMPHGU2YvDBotm7dGkCicI12+GOLhpx8KwHosn3UU6fnDmZ0Pjp7MJiZ
AVp6OXimS5cuO159BjBfOPmV3InxABugRcGbA/gJ1OEnBwH5roZzyuOPPw6G
NzAN8EkHwJUlO5blV4D5+YAcwDyAme27KiurKgEkIHYKatOmjXFegEyUTjWA
BxynqUlPVgAtuTdUWAymejw3UZ48WQE+AScH3ujMxzitADwQOFAHUAS0A0AC
isBIIC7px4anB7rzzRGAWUVyAh9PqU18uT65B3hSvKSzIVMPjgMXExMTgaBy
S1QmpwJffNEP3G6UKIBuTc2gw4dfMdI9cIs0hq0EuRlFCMQO3JUtU3L62jvR
jQzBtwJpQenhmiw+5MAlaAmnXECd6wVcDhBRIjSXTAKQGMgQnJybmwt4BjO/
//774DRgnsFkuXA5/FwIP8lW+XqnLewo5M5BStfeDtLbU522e+96ro4rBf6R
w+rVq0GMNAuXUHrmevmFj4HuO3bsiOyfvVHWeLa47jQzDiYOzEcAjdSKuYnS
8YoZnl88+NTcfipJ0shqy3PvnBICnnlsaqZ1pVDuPgm4TSBhbreBVvVKMNir
rqAGRXUWQIPwJNAmfIMDJXcZg4l24wHjhVUphdeEHZ6ujtENbE97ct91DtXl
GZRLVirVGGuV9HyTM+2jiR7AD2LXg4BHSF1HtjnRjVblOBdOa9As3keqrTer
NBvOIlu5Yfz0WeUs7hTInNYjE2+cIZaOzf3vX6Z8/4uUP6Nt9y4c37Qwgtvr
10ViYDHRoywDLclBMqirbgs8CbxcLjDRGhx0wghcz1m+Tz9WoTu4/WR0Xq+o
LA1lxytxkW9eW/ox3krNKexfmv79K4l/4iokjayJwH6MXsj1aHpaMaf0UQYy
rVvG46PLohNwXkC/nRP/QOHAhymaHLQ526uPGrXp1Vc3axNTo5jv8xPbgNvZ
SRvx0sZRXYOLFr09iH3eqmf0FGNsDVEONbKZTAVIaqUN38zVTObSNm6azUf2
qRI3muCMu+oIqx0sFpYLKgT5TgQk1VsBYbmseDUNZOzEbrrTatLXmucaawDt
d1vUW0gyLdsffPs2SZk166ZLYgHKgt5jVV+abbFQXKt1qztxP3Utb6bCFFtE
XWN6RubcsBDmWybdTrglwU8Q7rssttdpJchYaYWWoKIhWgKM775vutYDJ+xq
1Qb0Lr99bWoi13vuYj5/2QUFSdvAaXdpz6zcNK2zgf0mTMibODFfVRM6SQPS
CWKFuFLZNapTVUohBx0eQywhVxa0kEhHD0wSbensBC1KrehyuQXkygWoGGAY
UPZVnuRC7IdVttd3yf5T9Rs5JyBGhVO4EJEtFWOHS1AZJgRykv2uoV6FFgoy
JFYIj0VTBDqKLE1pnPTVujXJbDcek7rrCpqJ7UG8oFBGJWrlcKOWo1wdFyls
CtmeyhEYtNRVEkk7rnEw0sntMQSqnrO0rWGhKFEzu7FQNb9zFyQLqQzvJIuy
qCEVo3oAYxcgOP3E4mGn3h4OPqFim1/rseX1Pk9ENwZZhlrQCFAcLH1tWruP
pncomTa4eOogYAlDPKAFiAJEfzu7uOzExZKdVZyVU39uS93ZFUXb3y/cJndF
66W6GTwbVWPbg/9lGvfp00fcDi6STkxuFKfmHmjcqJTGuFHcA8gkKGIoJ4GE
GdKDuHaOiatL6g7wBsjpmShVhsxvJHa8kdQRsMdx0IvQTgSu1DmIS8IzqIk0
INvS6UP48BMAqcSHcVHB4dIhyEQnVqAvJaq/Z9BPto8/Hnjr1gBO5EMpx46N
ALpT4sSJEyWHg1TB5KBoMBJoCpgEAN68tyb/yHEQ8sToxsEFCxaQjLLIf+nS
pecvFTWdL1BaUClv8Dx1cLrBpAZ0Rz0pUQqNWitpaWkAeMCepBSqTbZco7Rw
wwPJhOFiyVam0KDoxrWAyaXEgCTJgXpqq+dfMR4VkLpDzSOI/eInZU0fAde3
nrjA5fABtAPd165dm5WVtX79ejJUBJIWcxpl6CWulJYR5Wo2B1IGF4br09vf
TI5om1BP2pmHQcVRbyg1sW0NlWskKS5K1Xp9H4zxyll6lVKQdnj2H41uPEWS
t0GePoc8sTznpO/RoweJ1ZwhJQ8kTwuPomFY9W/lMaBhKYicqQn1VBZVL1Td
il2OcZZhpFRVg9IXPbZhwaMNc/7bkaQff1i6c3V5FRei2qQCqsa9ZZ7CU0H7
0GgbNmwoqDnBdI/9yBJPyl9+lfLHX8z7C6WHcnJyuNfcTRuW3DiL54Q6KE9E
y6iQI12f/GkcHgaqRGIarSmK27OX74+1uvuhx6MneeCBB+giaCL6GY0MtBuN
Jp/QDrN81A9LhkdchLQD0MJ8k0CWu72fasOyU+wY9fbSCYgejLJ42bU/0Evb
IdOvqqailX7cuC2jR2c46kVkhKc/wwfQfnFSW3rsNUOeS014QR67BhzZ746D
kkg94hKAIsyGGpSX4ggSorjSqaZtnMlHoeZYOo0K7a6D81cQssuc9Us+Agkt
/Fr8hO7BIK+5XlDB6UoNSLW9787m2ro2Ote1qVist10s2oklErSQZFq2P9T2
bbhdp9GI8MvXgo35isb4oI4cmc5n+fIbH3zwCTuxJ/L8t7pDjGnmrOr8NPh6
qyHZeGKz/qFSccLMV4Fx6Q1aD4zdpv1fiovyMurZ0gXx4lPh9Iw5wc/dNP/7
ndht+raEPkFFmnCQyjBVYSrhShyF6qKioUCCnLYCvgV+cp51mZR3bYBOWXYG
4tTaIFTWN5OKgfFU5VIWRpwpaOR07bf0MHpl0mPr+O8yqKo4CkXaRErsetWy
vnU4oiCrIVyXIeNCpyorJHAtw6oqychQqzqKzHZdUL1YzdE6UgXpePGz1Vbg
xX3PIr1rqWSuWV4VFzKX5+NBkHPr1q3Bt8BgrlcvLRG+8FjJF/KRwCNLR+l7
xwjb0CUDyqKS+vY6xXANmsoolaxCpgddqlDx3soErWNlbaT9BK1I2U1sSzIL
gdnK8jCAepuefvppFds4yOVwUfLMwfB5k/ppbz/wRudDk1806AwoAkCrYZzL
XLy5IKfh3LL8Cs7Ka7zgJ7fhfLfoFhcXp1Yk4/vPf/5z/f5U5OBfXfCMmiTH
WFYMmS/NLVtesFUeuxKRQCMyUbDdnKkYB/UZlHUsax0QApTiX2VDPkrsAG6P
j48nGT+Na2M0UrAWx6mhjOX65B410yKkZZGevGjgNPCb3EgDJOOIlG+QG2BM
ZnhDdp+jGT3E7STj3yjp5Vbxqatgp9Onxxw/PhK0Rj5pO/YD5DSWMh3IPdRo
PB1gGPhqzZo12ooNSGq0I1J+GN20t1OcCufaWilRuogIk1pxLvhQmUrg+qZN
m0DItAy1NdqO8Ukzq49yaWOjm1FEwXUScthID9CVhCNRJ4QHMq6onAq1ZYz3
ClwsOX3ta9x+4XbFhY83btwIJs/Ly6MOTB82b96ckZHBN9XmSvkLDEme7GiK
nz9/vkVTBPlzF3pGN+Zfe8Z35AnUd5h/uY+AWJ4N1fI5UcoQV2G8V4UlOcJE
RhdUafDkSUNxnOblUTGQkzwrFUeZJ4KWNaHrEqKXB/iZZIYNLUv8OtyAjhJ6
ZzBZUJpSR2kaUyM2Gw+egpw8LWoBcaJMLW4WOyXv/pjPyQU/uz33h2fff3x9
5T6VLbXqx0c3Tqma99quuWNodpU58w4f4zFT4efM4l9cXNU2Y88R9letWkXD
kka2vy60LvHw7RoTx1W5VNNGcXiZOQZUPR2F6McXjty7cPy+xROE7jnL9m1Z
Vk2bANGNrUwfQuPQd9Ht0FwAbHqb8oQnvkyO+zQxzijP9J9S+Ogk6QHoB+ig
RP6SW7QLSSzR71IrSpAsoCz6BIXFNHDREwp3HVYksauvXjjw4a+S46hAwSsP
5fZrLcnc0K6GxlYnTf8pvcCom05hwbLEcX1RJZG6fs2+sm/yGB33NbBrAAQn
qNWsQKVRzjW2Z81+IHtOawG55BYhh5rMWt21qMd6wmqZ1+dXwx0HZ67ZNGN1
upZ2NgoKani/xtjeqoUk07L94bZvlILkcVVcnSczitvzNUTrmsq362hGGmIn
9gGW9CI7JRQRPEmdrvo6gNvJ9vylfDqBVndkZCTbOE2me9EhVNUX9oPrqEwP
QxrJfuffCG5v3LRx02xJy/zFkdS0ZBOrl6jglec6I3CCQCm1Den1jZu0P2tF
t/cLYZtiIxm56bwvjBcbjx+fM3FivpN3yjJwqiwXDSA60mpnUIZXuEjOdNT0
yUoUytkwqrV8G1W5ghOlapMcdCIgZVHWCjVU655zNUE4a1AmReKNXHrqbO+q
vV0AL3nSyshp0awtKUXCjG6n8vBdLDB8tiBZFr0XpRyxKVU8k41JKVLQGTtA
udxrl9cZqtRFV0OSfCSTy4eRBqObqisysveVESAfyTO0j14DLryqAKlYjRwq
QbucUpk5irezo6+xwgI6Jrim4IoJWaWP7saHdgBjg9uNHgVWJ3+DuYNJQOmb
X+uhj7Dc8trZQ+pShjrog50qkhOKpw4CRch74epIbKgjzfLAbOD6O1tKVpbs
YJ/bIXU2t/ECwJ6xvnV0Y0ZgJB2giFHmQV/kSc78Ky+C4x+W7kzdXg10Ybym
troTKi9fNbb93tefBWMoD8K5WjWNj6nZnBpStHGdVPAD+HGWsErCNrjLcJZg
ctkITE8aZ/Yy0BI/dZgF1oIASQawUU0FjKq5FdgjcK3L7MVHt1Dhbvb+OkA7
wBjkDI7iW2/EopNXQO+UGyES7z6sUyd/galkegPt+EvpGDUnDbrEcWMzrVy5
kvTUjfsyadIklSqpCenBtHwbr5ML1C8VQGtkKC5BHhGVyWU71JhzsIH8gZSA
fHJgQiTLms3wo6SXTUGJcshVm1c8nPpQBFgRACkJh8wjqo9N18vP3664+AlF
UBboHaxOArB6ZmZmaWkpmUcQ/oXbnEi2a9euzcnJAbqTWE8E1xT4Bm+rx8jN
dUbGPeX0/5e994DOqzrzvT33fvdbK0AmCZmElJu5985kJqTMJGSGSWCSUAIh
uGADpoOpphjccccU415UXQH3Jsm2itV7s2RLlovcZEuW5CYXSS4YEjBtfb/3
/cH+NIYkZIbM5Fuf9zrrXec9Z5/dzj57//ezn+f/cJEOIH2QDmdpQDC/GiYU
z+0MUlCDSOYWvWjVxI7cvWLWqorNWl7Q37SVoGOwgtPAWWV4+jYY3jWRngVI
v2Lq4A3Th2rLySvQNpZXT6+gd/G4nnm1WuWN0GLPRgMXXZXQniB2yknxaDFK
XvTKFcWv/vithMvei/vLo/OvBr1zkB2gmi5N7vreqksYA4pumvXD5tgrtCGl
prwU+fxpN15KwkeBFmB9R30DEb0rVjW7aD2qxl1aTz5/qmNeElGK21sShvF1
kHVbYkT8nrysM3Phtn0xA7PHPSLVlXapDB2ZYx5i5a5S34ZhvxY5Mwxy96qr
rmLkdM8XuM43zihaOeKy6tHf0KeqYgr5yrQIcyYiONYxkDJqMXQwRLu1rWaO
IikNrFS2Ydwj3w+iq4bc/v+qEEwZuzRc7tsqlpE/gXGSTINYLJiY/bePvJ+T
rBeJrCsW5w5ValX1DOorAgkZJATzgpBAO6m+eoimZM8dZGMGZCLmF8Yz5UmA
H78uR+4p96aZR1SeCXzU5+Gi81DNnwCRXQgXwh8OarOERWXwBRwiqCezb38q
J/T5rs/OmXN47twjX/oocM4Vur307AGHBxn7x9enLA06TxWnZcT4vcgk4wpa
Y0ylAXxl7n9pXSJRiZtoROADdORRFAD8Br0zDjQ2p7HWWLNuut84X6v67X6h
DhqONo5C69JmZmTGSTzCXRXI1XaTZ9KtPQYE0iQXVgTKt1Xklptl7NicCRNK
dDmnXEKNQbMT/1tmkmUIZSBlNAZP+ldbTrCiwl592Klso2a4DjJcSgi8OTEX
FdolXQwuNhSeKGG+4oorZDVUVK4trSsUCWrE28wg10aD3C8qjcjxzuNiXc1s
5YpRF8W1gDE5kaZGDRPxsG6YeBzcSEkE8GEtwEWgO9NWcKLq6kOdGT2TKjyX
SVKaF9+dAh/iy1FpYYzs/EXt9JEaELtkO+4dKNh3k4Irrj7kgZSORo1T9Y44
yRjVr6Kq/6tpd5LdddddxzSqGozq30CX/BceP5QwuGFmxJUkv3tnPcMJs7PG
aIUvRTRgm+KGAOOB9GDyRQWVAHUF6fySJgkuzK/Iaz6+pKgKgM2ETiNwFzyQ
3xIRv9MgOskCLQCZjrw6fNeEiJQPYMMvyQKzAecgKGbn4JKeWxSP9Glnpnta
gL+nJvZ6d1rv7c/3VVdZMAYcAmsBUQBLgG0ugj2EfOAQMpXHRtGlXkEBTuIW
gBntoA48f4MQVRJIsLFCSBCaKtngHLKm9Rom3QfOJylNVnlk59p7G9L7NWU9
sm/9Q9qN8iAgHGym7gdQOXPbXq6r5wzcmjt3LgiTCKRMUcmOMnBdPRmgLBFI
nDIL3QnSCZI+BSMmJ/LhsHghjsawZAFIXrNmDRBOJ02kDGyjCpG9gOaj4H/S
Ye2QWruTrKkpDSgjkNBdG17ZS/ilJEA+EiE1yXn4CzikOlSKlcXChQuB8SQe
sUtt/1BhhtKuWLEiPz9/1apV5Ah0z8nJIVpUDf43AHsSj9DR5ORwi5iUnOrQ
YmqD8/qou/bC0leqA8MJlaXKvHHZ+7UacHmiA1k1fIK7W4KK3M0Jww7OH82q
UD2cu6MByMp57969JR3l5bJgBDbrCFjbVSLQOemo9DHaisf5S6el89NdKbaK
YUQGtKvho4mHezoq2+jqlyJReB3s8oKyX+0OdH8v9uIPYi8+/srPPoj9HAfg
fPeU74LS6QAaR9C2tDbXDyZeqanv5vjRzQlDy6cMApnTCfdM/d6+Gf/AslTn
vHZdIDqPj4wGOjllkDhIQlRdlZ09+/ibbz7pNgRV5v0eTojg9sbYwfzdnXr/
ufI7ipJrP1R3j5qp8s3yRUsItm74vRy0DNCdv4x4hU9dox83deA1DtJ4iqGA
8UHfHDQ1I5vqlCp2OmGp4sgwC85nECMjBQU8qHBe+ywNQpkrHfdcNYDYge6d
L/XIeexqVeiVqzvqSvKgeIT5Tj+tzNTdoqLpwPcYlMkVXinX0pIUYKDoSRGi
sqbzAL9QXCQf+CKCc0Z3zN1VDwrwgcw5ULiLtCWrdMOdRzIbDke+rBO/pcq6
Pu8WVYb5ON91t4+0fz2/oCRzIfzXhtAbP9FGVYcFroUVU3e9K0+LmFwYzxe0
rykV6B4+1a6mH/9Xl8Aj+k4FLasU5zcuktQMXKjsh+k+l+QtgbBF+0Elrlqg
kHXHqWIWDqR8vKNAznbiC2h5SmtNuRnd7FP3e31WfHbubJVD9DSkdr2415Ko
hkfKUY2adBIHUKk1TYLgecD8uHG5zz2XR8rSleuiSI0ONS5kDBDKKlLWoF5U
LwGL26CSE8qgqCmrNVWNx9FSOi/JMF2bKOh2oFbKzbmkLmHt4M6mJr2S/XpL
16IRT0DZCS0HMvmdnZ7PEVT0NVNVLUfBuwa2QR3FW16Um8V9Cl+oLOiqmoCW
FeZLXKPzbpX5gdkUQ5Su+1Suu8gygjo2KkOaHS0gWY3UxL5lNZ0ILg0slXsN
JBJxk1Qwb39LRvr6WLX01blSP9/llZsUrkyVSpHOovX3cPDeNaf95S9/CTIB
V9SM6lU7+pa9M585FD84e9wjrMgaZj4DYgd+lEx8ui06QZdOihg8gt7LNte9
lle+rGTj8tJNffv2VQ2eNNVLZ4YFsUg3wV+KqgMmMqquvrei4s5Nm+6vqrqH
mXpFWU3ba8+C28EM4A11YHpFg4idKzQsUIdcTPnqq69Wtk84s/fBdxojhoqU
iosKSNV2Ji99WYJVwGmidNCaOjNAJv7KPAkIBNiUTR5YPXM4AAYEpadOiqTi
MQCP3AFdYD+gY1D9VdCqU6f6F+7Y/fI95AUMU0N+x5p7zpbd8ZuN/Q7VRoCW
NpKqmvAIQHTlypWLFi1SlwPoBR4GhaampgLR1f2gVNLCUP7FixeDh+Pj40mc
MkgFCSqjkIBGUuNZSkV80qcYIDeuEFNEnZycrMIMxVDjBZTIFdAyB4kvWLAg
u74RKKiXTCoOfJVIR4V5ECOoMjYaJLEnNdIhQdXyqQK/gHNQPQlGSCyj/PMR
YpwjZ4r2HqS0ekRlBUF5wNJJSUngc+qVkZGRl5fHXeJwMSUlhYv6kBKZUzW9
QcmmotTdNYjWwTS4vC6Ulou8QUksKU/BnlZQrg6hNBDmram4UjltCECXpORX
B0XTb7nOiXbQdFq5yl/JKWWJqg2FvZ2FJ71dJ010D07on1xUq4rH7YqqxEsI
qQSebqmDMFLjXG9QlJ9eQWXzF98Cbj+e+K235/zPD+IuFrd7vBf3+bOzvvzW
7G+2dtYd6NyyfmsDPWfHroymtirWXID2w4lDamJHqg7UMO374HbevvyWNggt
JoEnnUSNHb4sykBhaBZNm19/vf8bbzyhHhS/NDu4nW+fQcDV6Dsbbj9XcQfZ
HUkcCnQ/MnsoleWrTB/5QPLgO5Vv8PXRaFWjvg4gZ9Rilc2QRRyxPcMmf7lV
OeIyvV0TYeOYb3LI8V7wzF+emHhR3oAIzA4bu8RhhOnKDM9QT3aK2R3r1E7n
hMVC+ws3lzxzvcrwap4Ip10LuDXprrdSo2BMKirWmXi3j3bh1VYVBmhyxRXy
JQWKp/ycRIKbGFV3pJQk/SADlyIyyM/dL1bYHqikg0VboJ0M9BfBrJWLs5LX
J6bluZtMUC1HMWPggu6Khboinz8RHrsQLoRPE37X6tKgiNtzDUC6Qnce4Zvq
Gl/yGb7oYOzJEZyUuTTougoePTpr/vyjI0eu11STOBI/ql6iQojmLaquqfSi
QbpSYpXbySV5zVRFx1GRexoAmxVBMCYNWhOkwBeqvgTDEdHA2zz15tZB79bc
Wzj7eh1SdFUjF8tRpNT0WU0t6Z2nijtPF5O4NqEMm1pKcpd8s7IOJyU1KnzW
nojhUYVAQXJw2+SuYvDlpAq3bOQ8zgAbDOqVYyhVdidCObMpKPSWldHRWBIe
PdDZAg5umveqUS9zo9a7blWoewMwJuu0jBgAbXPr+uLGvdvqMjomX6K6i/hW
wklpbVT5DjJwgHrwjsoJkYMCvIBf7XRXKEr+pYXkEaYVNYVoUmYl1yMSFIul
3ThQ0KTdAT1BvUSnEoni1dtRrcU1gtJ+ZfXqKaljz0qNxd3+1vUq0qhC7wKB
NqHAQXTvi2M+ZTJlZmS+U4+ddIC74BDg8cYRPaqf7Q4mj8jbZzydNfbhvOf7
y18HAqmYGhG233TTTeAT/hYe6ChoaWe+BsA47V5//fUs1mRuBAyAf2ShUc2V
WpA+S4PTDf1O7X4A0F5X9xDRVlVsTq3dKRc3KeubRmf0gCI31kmc0pIORaXW
ZAcKAmiRO4ls2/aohrESy4CyWIOIlDinMIBMwKfuU7lFNLLgFlXT4hIAU7d1
zYH6VeB20IsMhKoly+k3JBqAOgohiSOvCzBVlhKy0McTT0l0Q5pc3LXuvpbq
UYvqm5YvXy57DNARTC5jOaCdv6AjEC+wWRWaZcuWqcCg7arKKgsXLtSAEcgK
slVbm9w5ofxyBspjA4Kl6bhOsor3gdAljYcB5CQlZzsF1qGqkF4OQEqitFxH
S9ySPhGoqVtSUuY6iwU1z7VdJfAsWZMRKw4qSCtRMNC4UnQwM8i5bH9bYcMB
PUClpaWB2/UKpK4+EdLT03Nzc2kB8gVgr1+//nD8E/unP+R2A03hookq8K6p
LM3Oq3ENosBfDXBag0cog3sNlI3EqRcHixSakWhuRvA6JPzkEfkhNdOmUwnF
WT/eEQ3AWvrVq7llS4qqOOfb4TvVwwJ9kh7O69YnFH2VK0UHOvk0XAuTLCuF
tZvqV5bX8h0B71kLkIUultxgoivqREnlH7130RPakvt0Be2RI+7ic7O/8X7C
F062Z504XZG2edfho3knT5ccP1kOhq+NGwVo11kwzUJLqlslsTwN4mflStO9
A35dRLiCoAx7pn5vf8yP7Eg7J33n3dhLfhP31VOx3zsZczndjNKS2sms+86V
33Eq+35WPREPBUumtCYOb4vq0hyKH1Q69Mvvx15Eac/NvKhz8iWcn57+xaD0
TmCEdGcT0F7x7FdpT0ZIIvBg9ehvMALzgXOdxzsmXRwM7f/1X/+V62o2hh1k
bvGsc6ijn/vazPXg9o6Xuuc8drWjrvKisC3uKOr8QmBoDUQQEjJL9ij01SxU
EZxM7HpQknWZi4yx8kOSoII+hX4SRDg9CVQUtisVVGtF/4wiGf2e+7iw35VC
WAIIdYImvFNkkNIHjdMgnw/4/Dxq6wu4/UL4rw2uf39PBE1NDS5ju6rEg526
Rharg4Tp/EFPPnwCXe24OR8+PG3u3CPg9rFjc/iswPCjRmUqnVYSrh2oxOn8
rkubCTgXx+pcyX1AMBXXQeB8/sDpxub09PWxSgmUoKrjEfx7akCq/bu4nQ//
rfqhH2y87b2qW/WSGTSc+a7nJPdJWNVrw4H+HGQEdFdCSxzpB8FCIljw/Mkz
JeBArsgASQS1Vhwq3SZQpqEQWwDvGiHohzMDKi1Xzk9eWt8H9R6VQJRIazzr
uMr4Qx21u9RFlMr/qiwGYbjiER/RWtYFgnSRLDccq3Py5nCcm3URU4BGTAqu
ga+uDqimJ8qx1dsP1sSqu0hESTT3AlRukWdS9hu9mvIgCFYvqFrF6vKbR5iY
tPYlF1tJF6WO+ZbZ1RYFc1/DvRh+2yddzNzHpEbxwAmk6c4CSZEpudBh8grm
yXfhwsEliZElmXFXmioQDeTwSk7pguwSIwNIxOdbxt0KaFeOvTcqZm+MGbQ/
boj+GZ3cT59+9NSpR2QaBG+vrqwDq8gnCeDRyanWrArDmWrJws7AeeXQmzaN
7Fk1POImFQBPjjxy+JVhxxaOBBLoIx5oAbxhCUCaYPV/iQbSFP9XL+5Vu/xW
KdxB9aAdNRCUnFNCkt02/na9W5KggtBdky9vmvVDXckLkIgJxlP2rlS/ZnMS
0F0FadW2gYISQlL9HRP/HjwjGTgwTB3mDxHm1gbagbwE9kB37rJq0ARgdDSA
xOZHA1g9Z0cTj4B7gZSiI4m458yZk5SUBLDUMb2edGgW4JaGlptiRpAmQa86
ADPKyXWKSgkpD1VTVhyUalpy+3OQLJgZ4ApiB/m/HA1AX/2cytOuTSsLqOz6
RioFONeBlDSS8qIQgdJqe6tzH64QjRPd9OxtzN2xK4OKAJWpSEZGBjicrGWA
VH8G8Cx7zKpVq8DtkoerG19UVASYJ6nk5OTKysojCU+2zHyERnC5RMuTLw2i
FwCu8IqVtE+LBhCvzOdSNVJgyi9lJWlSbOpFyhSYriJzDrWj/2gBTdPRzehy
nNM9wNL8DZtHfE0ymYjbHTP5WlntMkK6kqWn0W/pCWXH3iw7+oYsjjppTane
tqKshr+U2XUW8TWX0L2vPO0UnsaUvb9t3lVvzfvrD6IA+KPjonNzv1VYWNiZ
3Ptk08KW45vydjV3nCoBt9fvTKdB2hbfcGTRL7WwpuK639XSlpR3T/nu9gnf
pniUtr6+/zvvPHb2bGRbimIDxTUzoTAN076/d/oP6A/0jebYK8Dtb8Z+5WDi
la3x/yR7P23O8vbN3Ps46hLG/Cbu8vfiLn0r/nJ1ZpriBtc9/79DmRl4I8We
+QVakoGXcY8RUod6DEe0JwtzNd+4BQLnq1f0wYgHdC8e/OEgzF09zYUdZ2Vc
RCZZhj71CRlFhcrOR5IPM5gzJKpX6QwuD5uqlWrOaP0aJjU1asTearAoCVEJ
lgIo39MIlHN9sBonUNJ5SzAvtNYE9Ty4Am5nBg/4xEyFHG4NyIcZbOtE9To3
sVKuJgJEkRWN325dNIe7CtsvKMlcCP+FIaDo34/blZOHvzoqDdCdPn9eH97X
lMphHEAsB1+Wi2jNUWWV5BzcPmJEBt8IH2Z2zM+SF5aPH58vslI3W8wptSzf
NUuAjlPFIO0vfBT87pQGgKXXZ8UDw8DVmdkJKmBIzKJkQD2T4EuOEcDlAFfe
qroL0O7RkddLNQxBLyNJ/s4Hqw7033TkiaqD/Rn6mHSychLJguER2KZehw5P
5eGhGMJCJcDibTXSHTNVllY7RVIXmeHV3uGiDJCKpmW5DKyJViQQqpCIZJtK
GKgO47mCYvXhZX2XVl3PF5rzqyojN5cDrzsRqrKIXaVwZ/yvHHEZ8M+9AK7I
CSNXpHVXLq3ujbhdpRpSk3ZAJhxF6wrbFe9IPqzWPTOLknntT3U4IjWlOjmy
wZDamDHZ48blmiZVDsr2Oopy+SNpZMeki8/NunjDyK+pNu8ug65dNXqlslwv
HfplDuG6vlmd+66++mo9iTNX0gKLCio5chqPlrad3b54au74x8DbOc89WvDi
ExtH9Kgb2weUkj3ukYaZz1TNGFY+ZVDZ5Ai4BYHr4YiJ/syZR3VAI6cK13nX
TP3FL0e8KAJjSLBHjx5SNDNZU3fNhCWo0epTgE12JH6u8YF3mx4EWQHAgDRX
XXUVqcljQzo8zoO//vWv7777btYUm5b23rwiQjKjyg0IX/5tJYqUp/6FOzgs
M9AL/Awe2/ri34C6QbYsE8gUYE98SqLzShLhWdKXkn1wNACJpRyRnoXHgT3c
3Tv5/l0T7uapcePGqfcCHs7YskcKQa1HATasBYomPEXrAZMAnCQiWUp63e6S
Q6cK9rRqc0pkoDIpaFSoeDw1NXVSNMjZvmDBAr3Yb5g+FLykUrdOTkGnPKWO
N8CPWtNQegUFd1HatpJnOjYMy83NXbZsGXEoGI9IkDh9+nQ1W4D35A6kBzeu
q9kBwuQW0BpEreCdalJO1gu0A7lwV3Z3Hpf3UqpDCtnUXCDFDZVdEg1g8vzd
LZrOged5irzE6hEj1oyM9PT0VdEg80lWVtbixYt5sKqqinOKx3WagowkeCQv
2pluJgkkdacuXORX/W0qCP4cFQ2sksyRVyk5J3/51RuXXpBUmqLT0gHoMDSg
3FB0P7qrvnrphG4qyY4rdaGchDopoCsKfXmcRl6zcTsoXfemQUlG6qQ+ffpI
6k5v1NWstgm8TX41wmXpBCA/POcnQPffxl/2XvwXxMCA+eKDJ0mcR1zsgKJZ
KO1ryqMBQfvvJ3yByNomy1NEA1Jx3XXRgV+feem2l/6WVRgL8A8WfOn9+V+S
+JF1kJYgqocRZ+ek7+jciiv0JbKjMfVW5trtVOx3OWjP38Zd/kHsJRxA99bZ
wxk3eAWg/fdjLyK709O/2Dn5m2WDbmC0ZDjia9WzqroxwTyHcwdh7gLmFdHo
w057fJ1uaAvGgK/IXRkOQ67u6oLfEz0i6XNQyrJgbCWQDjOyM7VQ311jN0ZJ
xzh6QnE6UKatqicTloBZnRZiSinPSeCBATBYDJJVVN51476r8yPtW50Egx57
oGRX2t9VFK/eafCRGqjaRe9K8l2tEFO99/PcwX9GEOxCuBD+iOAqMiiD/X7c
3u3fitx9ZF3aTOF34GwPIaq1nq8Q++TpCG7nlyvE9xYnQaOezyEtI4bjRE7P
tyv6FM+9QXDlxx6cPjAOkBqomEMFFWW2AmDQF6C983Tx8Y5CCgZsVqytVana
zmpuONoom3WNz2hWkHhdAO2Ro/q2QPluKNj1UNXBx19Lv4sPWY0FsqDM6pzr
V0hAmLxmKtc9D4b5chVqKSOflSJubefVdQksu/LAMPwyljLwMt9xwnVVaCiz
1jquAlTVlqOSMqhJTgl5RN51tYPyBlxSNOiLpqwSu5Qp8uGocqNbIqnI1YRR
sUSvHyqjqm2uo21pxMhLo04V4wNjvCsUiyelMNO0BJIuRqSRkbZRQnVSkCVS
OmLdoTI9EVNvqsHi4Lnn8ubNaxs7NsfFkZ77OFF7h4y6+lElwapRX2fd4XLD
ZqGEPKurVp8qH/4VDs7JDtQhHzK/119/PVdIhyqT8rKSja/llQPd8/Yf35c8
u37xNGZJ6RYBLQBgEBGAsy1xyOGEiKchdQZUPwBsS9JIkHqRuR4YyYN1z//v
lpl3Afh/Gg3/Gg0gH2G8rk4pCSBHO1OpGsEzpP9OYz9w+4oVK3QV9Ktf/Yo4
QH0i8yDF7tmzJ9dJiitq6Wg8qCYD5Scy5QFOg9h1MU/K3HLrn4wALVSBFCg/
ccDtfaOBp0TpQCnqQkzAnsrJ4G2qL9G3jI5cBNI0TLoP6M5fQGN8fDxwVw0T
ndeoo0JSLBBA0TyrfFgvURQDlJ61fZ8M6gq6VSknKRARLQDAXr16NWmKSFUp
B3opPiUjCqMMf1g0AJhdZZC7VrdUSuUfEkxOTs7Ozi4uLgZf8ax0Mc9Fg0oj
yu1pfE5A7OXH3wQZgidJ9pVXXmHVAPYDh/NLa2iRqjUu5ywoSJOUaTRBNWif
NMGKanqAwEkWCCpup17S6ayNBhLPz8/Py8vjXM+egMOUlBSe5TwzM5PlhrsG
FFtXU6rlgEhpZIl6uEubU3FALwW2JPKlUGBKogtXtaSU21NZsrYHAq05AVHT
OVkJ8uL8fvmC6IfumukmWDUwXQXRLflC6ed0IboZfYzXvapiMw3I22EpR/eQ
bZJ+CFAHFZuXLlZ5QTwiLxNX+ATUraLN3ZSRSoh2oMD7Y350LiJ1j+D2lLhr
yEXu0DXx16bNuUG2dvVt0jbvemvONwHMPEK35O1r5Uqb6P+LXsfys2Ha9+ld
b6z8zgdxF70TczHfCC2gQtHZWV9+J+aSD+Xksy+TpIhf0uEd0f50crWkaFVy
aY69gj5QEzsS6P5e7KX8ts2OjBuV04Y0xgzaN2ugS6Hu3bvTaCpeMkjywTIq
unvIAEWD6+YY6E6rch406zinkVkKMXw52bmDrAmVUySzEkmpSMOvEhUht+DZ
qY33qFjJiYwhnTlI6RYziHamgRiBK9qW6oNJCb9qjdJUqhKjsL1bdMefwLCs
MZoK7YHAmV+eDTikq5Fp2MHXnaKIQtl4Vw9Nkm8Ed4r6/ggpi+fF/EFtPniN
lFxCF7RcnzPn8PLlby9efPazQmIXwoXwKUNXra1uv4MK8rxwHm7v9pFSWXCW
dN4tKd/5lf5d6O7B36SUKS4WQLkakO5vyQA8d+Tfwq+a0i6WZW4E1EWIYqL+
VUkKcK5mhbY2UsSkps9Stt/YnAaGX5s6AwAvXFc5WbUZlTS0xHR4YRTKjfsF
WB3E/n71h9CdRYSE8BUNwxdm3L1o/T3z194ugzoXQebBnFNrUD5qii1cVDDu
+KbMmWjBCl4NQKF+wO1UU1NZHf0wUDDkaqepzIqUpSh0zFHJRA+eGrcGQ1pB
uywuXiRNQHvx4C858uu8VX4YIbfaOG4Oiqv1YSpuPxg3UK1LYJs4kMmXFHgw
FECVHkpoauaiQrtgnrxUqxaiq73PVK5XU2nwZYnkEWnbtQmlGMw7AE6AN7VQ
lg5u1/KXt1BcfGtJyW0qvTNhST5TNuyvSoZcWjbohoohvwr2XC649BhuTfXx
qlTfdcpzafnPZxQSgafceiawYLFg60c/yGSaO/4xEAigGvS+tLgaGLykqAow
/0pO6eLCDczUzLb7YgYeShjcGDuoom7rmo3bgRxlkweWTHxa0M6zec/3V7oO
MuFv9ehvbHkhUn6NcMldB6Zyywi5wUJM39XPdq8b2wcwsHXrI5s3P0hl5eIW
GwPpQeOapjLdU4WgMGMKdXUPVVffCxYC84iptGClVNuf77vzpbuAvoBzn9JK
UbdQID0J5zVHBYmBYEG/4AqVHO6MBgnPicaJtpmsAnQHD/5Ru0buR6IFdkQV
WkBT6mmQGiCQtYBSX2AwDwLe9D0K5gGNz5s3TzQ+Jxr046mbe1G9tOqkZl6z
Zs3SKY8kjQpUNbGUlFLDRqpGUUGnVJyYwGCxNDmSJlm7qKHu+m9Sgv0hG+Su
5sIDHasr6wZGgzrwlFCOR8Ck3I+ASWAeBSB9EqSQYU0BUNdxEuXkqdTUVLIo
2nuw7MiZnB1NIHZKsmrVKgB8UlISaa5bt27Dhg3Lly8nhSVLllAGbklmSISy
sjLic4XikTvXaV5uUWWaVBMDnpKNk9JSRwAw1VfnSmUhSiVZiszntAwFoG3B
+fQZOgl9iY9LmTn9nI+Fb5y/croGpwauE+lv9HYe5BF+eQTErnUnoJ1DVSj+
aoXKI6w0iQlcJ3deENdlTyUvF7B0/n1THtB7qUz1lJlayOTPX5Z1UevUi0qX
XpW36m7qmF63u3jNA+vn32Tj05JUn0xpkF2TL98x8e+1zpb/kxbjTQXXwLxu
8iXOmRlf2vri39BQ0ijRmd+I+av3Yj+vQs6pJT+liXRGpvmGumGqS7kZxPsi
Dp1w+9zxrYnDG2MHN8UOPpI4ZH9cRFuGc9qW5nLx0jmhB4dmOLQwvwzF+qfL
HPNQxqh+NBTNq9U5Lc+DfP78ldRLvU0iK1EJwm33tSXI1X2eO7yCc3XUicN8
VDTg2rzHfyZnozJzZjdT0A5LCyD3qfWgZCJyICs2V9FRPna5a5gW3VLXvEtH
S9zSOFQMwK8oRV0XdeyF7pqmkqmS9kBiE4B3iMwJBda7hzvUElaEmC4igjpN
V4VeCq9iqtzXHB+ny/tMsNmFcCF8PHQVs3e9+Afl7eftE4UHVTmTcKnrLVnf
weRge+XkgnZP+CU1ngJsR+F9QWZ2gjp44Pb2vF558dcwMqxZNx0QThxXyqRz
vKMgitsL+PpEg1pKMhqsz4pXt5y7pAN0z86dzayha0upwsFp6pZoxZm4+1DC
roPFc294q+qu96pvZ9XAiHeu8lZw+659D81NuTUjM66y4dkF6/oy4qlhQmEi
ZowtGTyuaZWq1DIoaqEp0wurBurVuD9Nxhv1ZILSvooxqugr61YZRgU/a6dO
uCr6wDOyc8BUCcRlgrroumfVlTMP6llV1M2z0j+qp62kRYoVc5d3i/cYaHOE
7iqokMvBuEH69QMK0p4k4qJJbXYBObkLcbu6duKu+7DK+V2MEFl1HXIhNXc9
VPJ3W0ROS9LnrzTsYs7y4V95e+bnosdF/OY+dbHTxIkTD7yd8reg9I6OB0+d
eliuM0B+6dAvd7zUnYPZzdWB9JWS+ciHKdmOMnlntFEpWS+sL9KOWG+tEkhS
VM5VgMka+3Dqs/elj3zA+ZEpFQBfv3ja3uTZpUfPAt2Tq7YC3oDlddu3bTjU
ARphci948Qk1YUDvQA6SYhUgVSOJyxdx8803SyDDcgN8HiGoGfct6lI16usV
z35Vksyq4TeD20lhy5aHge4AJ/BA0BAAfJKmszbvixLSdL2jASjCxU2b7ucA
RGn9Su7iKLE3gFZhJpGlMeQXWKIfJQn3yIL4ut0EwMjjXTOq19bnIuwfRACi
CP6JwBXF2tOmTQPzcFc9E5Vh9HYE5lHgKSE2oCvYsYJ+VYZXczgQGEp4rkMc
XV6qMqEXHqIBU8GWZEFMvWqSl0hJum8yDXQfRNOPD3XX5JC8SIpEMjMzyQiU
RRY8m7FlD5CPupCIWu7gbVAu7UZSgHzXCKRAdqm1O3n1vBpgoZoblJZoPEI7
aCSra1eWBkuXLqUkQGKQNvkSk6e4CFxXL0giHaqgn1YgPXCdOlZXVwvvwfBc
X7FihWiQYufl5eXm5h6Ke/xgbH9yiWgQ1e4sPnhyXc0Omsi1DA/qHMoGoc15
ob5uqqm9rfbCakzRmNSaZQWQWIZ27UmlP6JT0dN09Mk5j9Ab6bdE08tS3759
b7vtNhkjecv8invpSLxZXyLtQ28kWfeweERPXrQqWajfJQamASmz7r1UfZfd
iJ7GLXcQJK6nFryLkrSHS5f+NH/1PSB53iP9UL5KdxnoKrxWrW4J9klS0/aW
c1qMXrF3+g/2zfgHmm5KNEyMBrWeXITqaZfyUH31Z6TBp3g0FBe1EKGa+gjW
9+u2Oc/VxI6k/M0Jw44kDt0fP6RqxjAeZKBojBnEuPHO1FvOTY2MFW4RMpb2
jAbGBEA7B6PEobpZRSWvutfGrcKXnmSYYoxV2c8JSyCtsqieVtx7PTel19uT
ewaDLGZnbVTVdZcNMv+Jn+t/RLSvmF0+GaczzcE045KlTVdQWoYq81fSzonS
b0Vnyq8YmdVsCYwxMqcFJmfRi7oubvT7Nxi+BULpgL0DZzvpyOemSaz7BW4K
GCcIIb3yf38ULooGS7Vs2Vvi9qDiHtzTXEDyF8KfIpwnZu8auhKT/q7wcZF7
t+i2lCQzfmWhM69OnrwvwuIePZpSlYQL0T2XwoWPNKIMvz9V7MSVwtnXv13R
53hODz6utIyYppZ0ADlfNICZv8D7nLw5wC2HDq1mZBcEpTe3rge6y/Qi4hU9
ynwu64hDhyriiXsOA92PlT/2bs2971X3Bb2TeE3rYzWtEXZu4DpYTk14Bd2M
CRQb0E760qooVJc21g1HET6PNDWnu8vALWI6Ojlaikj15qz+nn+5y2IhqkX/
uCQzXZ1Bu+kcGBdVRxEzB113DU4lmVSDRbl3oDfUv5JaOm5KWi93MB3ftEh1
seOaaPf0AYfiI3OHepLywJC+3kVV4yFx8K2Y3AGcYpBCWJJQZiXeVsoVhw6P
gneqwC0m56TF1qKNaei9mP+XF+LExIv0V1VY2Lv9tb8G1p48+dCpU48oiVKo
3vFi984JPSqH3lT41DWUjXLKLU+ltB2QTEBOSHKx0UiTptbkljnRhYm67iAQ
JjWSShtxP+idyVHFdTD5ofjBrfNG5TYd019SQUv7kqKqioPtpbV1YA+Z4pi4
icmh+3Lm31/84hf6NycLSeDJkWQ3jey5Ydiv+Uu9Noz82sYx3+QXxPKzn/2M
sgGNxMmqoC8r2SgSAzPoeglgEJHhP9uduiuuF1nRhiwKVE6gDIAWoBQFU1Od
p+TWIxFOJMnRLzyInWSJrwfVhx9+GDTCFfCVPp4ozPbn+4L6hNmgJp3OUDwg
EIBHTB4E78rhgUayygBXwG8AJIAKcIuYxKG5QIySQ5II4Bk4BP4hffBz1vZ9
qig3zfphw7Tvk4h3wUJap3JFjXRAJn85l3dFXRfKSS4tMx/5zYy+wFqKSivR
niA0SkI6ANT09HQeBOuu3VQPZgbCpW3eBeQji6D4LVSjWcgIsA0UdBFB7YjM
QU1JAeydv7sFXC1p5MxooEiuGjgBluu+CqhMOgBOIh89UVjdfrai/bflx38D
8gfpgS2XLVtGqUDsVCctLa20tLSyspJnwfwAeKA+qwBKC25n0cGt3zb3f6v1
8cWLF4PnI+6rDp+it7jKA2pSctrNJY9gXhtPKkIJaTqb68loENPyjkifW5RH
SiICr5supN0EfYb37oKRPiyLkdxE3KLL8WY50Xuvzp7kHSVl0hwQDfRDuYzo
uvQxkiIOoJf4ha0dRQc6KTAvQp0fikF894NcE22YPvRwQsQ/qfssvFAV1QqS
7i1Mvo9+yAuiD1MA1gLaVvCmwM+qypMI/Ufnua4Fgr+q7RO+TZej/+hfmAdZ
R5Aaz2rIIEmpq12Vx/hMZBbSHoTvi0eo7Ob40RVTB/vV8Pp4R1QfuE6xj0QV
7VjpN8cPbUscsi9mIJ/85jG9deJGq6rOR7jmmmtoasark1P/8mT9dKYwljwy
3jNiF014SrZ2lQMlolFbkrlAXkRGY0ZIXbIyFxBZ16tuDWtYCqTnLpkGCY+2
nEwcap4EPM/4H7aVHc9F3bIriAfIXcTuHrQM8JwzLEsEHfRVlOcbTfm8WwCS
aWiCyq877P41uyA29wrFC9QxrhFcdAQLVhVsNMH7uI9UHcSTggQRyv9/F1YP
HuEvIPkL4T8SPu5N6bzQ1fXS7wqfiNu7RXu1n5JZBErJlLXTAkr/UN4ePT/e
XhBVRC/gQ+ODUuOd0UY5MF9WXvw1R0sfjRAq5iSCZySNAbTzCMhchQe/IKXc
jkJa5UR4GpvTwdUKBBR9a+SoSrxbhOqcq9aidn1B4nXHyh5jjVC4++GCXQ8v
zb7/ldQ7eNzNPiUSBP4yQmrzSFBzJpSQx0kTCD12bE5e3lEqS03leGfEEzkL
sOVj1DJUHX4ZL8HtNUef4EhY1UvJgNogGpYCHRl4gXZ6L+JXYCwZlxQrso4r
wVb6rYs6LUYly1XMYsouYUTLUkSq6iOVujJqYjYkJTSunbcgu0Rhvm9Kch61
2clCMkwRu9Js2S8dJIkf3KcGkkbOzc6WUYEzaMWTOO9ayykmLCamcxFh+0Xv
x36uc/IlbjFYEh6U+ZyYXATcclI++MaTE3p2vtQDDEy3IULx09d1vNSd37+L
BolAC578BTGZqmSw4WXxSyNromsuSqucJa+66iqwh27cmYKZJbPHPVKzdUtJ
Ta286CvLazmWFlfTXIB8qapVO2eGBVoo7lYHWLvR6667jl/prCVbDu+amID2
yhGXUUJeOvCb3LeMu3Xb+IhaAquDvOYTIDGQBtCCUoFwAEUR6phnu5+Z1Pv0
pFsA1WRtdqIsygwWAleQlMR0/BWc65WVlMFL3BVjuOjQS6YunIA34Byta9Wo
UYNdgKfSO8/edNNNACpgjCwuarArNtdzDWnqUFImHI1GgYX81cmOWkA8S4JA
IBA7KBrQLn4G7u6d/oPm2Ct4CiA3evRoAC2ImlzAwCqHSJYCztQHKBgMZKXK
DSuCN6be1jrrUR1uso4gXxqEAoB+U1JSQOaNRzZwEJ+LM6JBvZdXowFYSBWo
UVw0EEf/SpQTuE51qEJK9TYAPCWk2GVHzhTsaV0UDcRX3V1GF0q7fPlyk+Uu
v8dOFG1pP6pyO8gfIE36VHnlypWao1LIDRs21NbWAvLB5GX729atW5eRkUHx
KOTatWuLi4uPHBnd1jaGR2gutwPIVItLWoP3AsKUG0eNbpqCi9SLyGq28yLo
A+JYeoXiaNIhCyqrnjnvmp6/ML+Cbg805ZEgMHfRKj85vZqvTKJR3XvRJehI
9AHwM6+YgpG7RKMkq80If+kbknDSUMWHThYfPAm69kHd2gqqecrr4vaWhGFW
mQ8kP+melLhrqCCF571QbE1KVeiimu4NuShjLUYcEiR9Ner1/UpJ+Eup+Bip
ICOAozHV0eMAhVezS7pRWpUKkgipabLNV2Yr8RdYXl63NblqK7UDw2+b8xy/
dQlj6KuticOPzo5Qvh9OHNIWPWmMHbR31sA90wcwSugumRM9qMrhUz36GzXj
vqXCEhFoc+66G1Lx6s2Fs69Xs5GBnYFFkhnnNa63v3hz54QeStplu2WcUfSt
0ov+u7V+UlmdARzgLZECMfVbJKT3OkGPgcqs3CzWQk12F3F4oGcnDrNkYH0X
90pro26MSF5tmaC7TuTovny6VJBB3cXHtWNVjsQMJZ7XhJbyBMm88sxPdIGq
PH/kyPXjxuXyFH8tz3l46fdj9QtI/kL4Y8PvEbOHcB436SeGrkTuXcP/6BKC
vg2pJa+Z2rg/TawejnM7h7WvHHwo+WUV3fkEQO+A260dba3lQ0vm3ehgAmgH
pWfnzmac15UPAHV/S8b+1vUMLMBjddfFq3Kze5ET4a5+QgFmas0BxlSGl/tR
FnrikNG+/WkmRdbMKYxd/AU/z197u+bzkrRoxsKzFIOlBwt88iWjsPxn3KAA
qtCPH5+flX2YKjCkcFd8KD7XvVRIlr9KJ0TyRHs17U5w+6a2JxQaq7Wu9gug
UVVn7bx0D6qppkojSjxUdxdXeyso+StFcTGi5F/PsPql1f5XNRhNRAkKarL2
HiltO5vbdKxiY1bhwC/IAGZk3pEO79wOELrrRoqXxS3l/KxlnnsuT2mP8hkZ
XSybgn1elrw0OsNSPV4VFwmK1YSX2pFzGTtJ0Ai0jxQ3isqJUDHkV6B0TkoH
/hJwzi+4veSZ68sW3FQ6/1dOZFwH4rYezKJ3uSqRM4d21lgAvEGazHcAVJJl
BmciVrkXnEy0rLEPl9RsfiWnFHzOjMm8STQmPgmTLZikyoAQJlwiKHhkttX0
mKdUxbn22mt1/8TL1Yk56ZcN+6uKZ7/KFQoDoq6re2jLlof1QbO8dBMYwI14
YAaIgsQrh94kuc2ZyX1YuXDORcn6BFSSYLMUIn0eoRZqBXCdREhNnhA6m7hd
hWegCHd1nwS6A1bJ3a04VNAiqwYpAFfUt9Fwj2j6f9f9qIauOmYCFCl+18ET
+BCUu6piMwCM3FkaSKAN2gT8ANdBv3pHBXaqq8Bf4uiGafHixQAwEqe0AmxQ
MRCXu4q4wUs8otIO9VL/QXZKSsW5ZCNZWVkgZ4paszlpY80q9WdE10uXLgUb
Z2ZmguqpJqhP2S9ImGepAi0AVmd9QeIPRgPPcgskv35rA+A8NTU1KSlJl6mk
yUVuUSNS5i51zN/dkpiYSDG40rhmbtO6eerngAMpJHEKCgry8/NB5jk5Odu2
beOcRwobDnAF6E4jsGyhNQD2/KWcXJHonopQR64sW7aMAgO8KbC67vqBklJG
iTq36G86IKAKtBgvmg7DW6OFaU9yoel4U26+gEhXlNXwQkHFdGaNROjnoke9
A9DltERQCYomUtWKbqatge69FHrTwexs5MWrVN9JHSqv80t2pEz/pHvrR1UM
rx+BqhnDNsWMYNVTmv5I4Ss/WhN/LSlTfmpB5+Qpsg4+pMhXSThNbeckjrid
IVceJ0nmrR0gmS+X74jUaCLi9+jRQy0gWkPNLrKjkO6VjBgxgsQB6qwjIrya
RVX5LSdqtm09nPih19TqmcNrYkcC3VsSh0nnHiGHjPJDsgw5lDB4X8xA2pMC
0LAKBKTrYYyiePRnqiBVLOWkeNdEQ9WinpuW9lYkwuCmA2vGVdnY+M1/4ueF
T13jsKNUSkdvCpS4WzboBk54lmWCm7bKghQ+K133hMHcGVZVTP2xOk0DD/bt
T2XCDawUIhPJ3gkSGsu17hytKkvwnRSUUjR/0yl5xIDudEljl2S7IhZndsqp
cFJySFKWQ77bR4ST3f4tS4wC9m5RujxnJa+7rPg0PJAXkPyF8O8Lf1DMHsKn
wfbdfreqDF+Et7raYielTAHKRtbCoPePhO3v1953csWA46lTON/WcXRmUoYy
+TM7nj9X0w80pXhTSm2+F9kCVaUAxnPwDaZlxACbJZPRERKg3UPqD7Gu9I98
cXLIKNkOe3MSxbBO57CQJA4uClyLjnJuJmrervrc/tYMADllIB1JY1RQUWLs
UoJz2SzdsyMRXU5zxXHJVYNkONrpK8/nQfBbTVsEtyvoDno+BG5JCejYq3q/
1ZGGXUG6JC0CZj3Z5Q24BLAtpXngz3S3gsigXFnCgh8rhTAWQHAbIbHPKMhu
bKvclF069Mtqy0RA7/Cv6OlDG9W/iQYp3HWfSjS5YsDtLGdCjWR3V+VGNkhj
Kn4X2/PXMZMI1J3ZSnb3jsmXnJzy+R//+McSXaoOpOaJngSlm5O/ApQOdAfA
g89VyyF05N/CQVIkQhwmuOYD61sOZLrFoCtYKiVhMhGYH5nIgJGg6Lzn+xe8
+AQARsE1z4LbM8dEKNPJHejC6mZBdgnXZVqmU5FUxqh+KrTzFDMp8IAUwLRE
c5UhUZ5lphiSrnPlxhtv1Ctr5YjLNF89vbfPtm2PArxF5jWjemlQCU6W5kXQ
vv35vlufu41GI01QBNM92VF+VeiZ7gVRFAM0AkrXx40WeXKzA0UANuABvRcZ
jSAUASQAVCR74VcjQT3RCKh03kpSauAI4PVfQ4LiQG0kSVCSFtAjcQCxHGOi
gUQejwZuATKBmqtXryYF8B4P6m9UQfGSJUvAdYqvwXWqwQNQ5RgBheplSRYa
cCPlp2BquQCoONHfJRARWA42BtmSI+hLfhWxPXEA/6wIiMOvmN+tBNInF/5K
hyKxPHnJB0gWFJu7wFSySElJocCUECwNJufg4uzZs1esWJFd31iwp5WiEoEy
7Jj/Qv28CME7kcGulH9dNADdAe0g86qqKk6oOyA/NzeXp0DppEYc/nKLgqmD
ITBumvbgu9N7vzXzTtYFXKScrDtoTBcR8sZwQsOq80/d+Qt8pUnpDBIN8R55
feB2SqVo2l0bepdCaY1P6b3akNItSe2paFDlhnToGxqcEoH+xkvhRbsrtLK8
lrUP7e9GBtVxi0dSdzG2Kvd6aCUXOjkvlIzsUUSgRmDgzfGjXQmWLPqX0td+
sHrWz1x+ArZ5lverAwJO3BSjCkrgeWV8U5wTX419/vIF+VELm/1OScEqc5F6
8dclG8UgC3ny1YSnMakpbR6hD9q4HQB/ZM4wwXnb7CG8iLLJA4Hx++MjjpU/
xO1RkTsV2TB9KMXWVkW2fMYNWpgxxN0NPlh6mt8+JeGWujSMHmL4wFQgRQyD
m5OROiRMCoyNskAw6uoei3kh7/GfFQ241jH529GgcovI3KmNqUd9SBkG3M1U
lKStlirr6rcLS4QKnJOdzkxJihQEscybcrkEZ+hdHa+7jyzeBrd3nipmElec
HiTzEr9rFRsU5l0g6C9Sb60Bh3cVXc6Zc3jx4rPjxuUyR3SFPdS6qz7wHxUu
IPkL4Q+Gj9uf/p7waaggu32MyD1k9BddvKYGc28SlACW0SCouJ/bOQzozm8E
t3ce3dLe5vUPNt3xXnVfwSTfKaMHKDoiYG+JgGRNQX+zbfDRssdckhOBX0YG
deCB8XzgOXlziMYVt+SklFFJQyUQxQKWyjiKo9WuIR2e5ZxVA9G++VEIfhmo
4779qeB2+cZdC6jvIQm8IJlBTOEzubjPKARVBSVop0g1I0ZVn8fARPBa+l0c
MpbLfC6gdT0ig6JaMUGzXXpJdyQD3A2+jdonXtQ+6WLXBUG3RwituhHXZbKl
si5AGHi/9lGQRiwhNTen8ej8rGK5GXmWXACTG0Z+TdG3OjOuGhz/1Rh3IUDL
AF85kZlTg2KKp1WvvrHU5NeDlZaq7udaBt0/kQgLh5Ihl4LM5WakNfhl5pJq
kuvkyyTVo0ePskE3qOIuOYys7BH/4K/8unjuh+J0tWJka9GVFQVTH161c6Y8
Jus+ffoIs7PHPQJuZ97kXLk6eXHOCWV4NbcM3D53faFMNZSHUpE72D7nuUfB
/KB30bh8jzp7IiZInsddl8mSpzuVqqp7Nm26n+s1474FaN88/n9xouT8TMOD
7zT22zLu1sCJx0WABxACjAGKoMzyvXg32L1q3UbVnOvBUeAlcDsx1ZBXYUbL
U8AqqAMspBtWgJ8iVvUBBF0gk4jq7/N9d024m4tAYp8CDm176W8psMw5KsMD
TsBgYNpx48bpO5U0dRuq2gZ3yVrlB8XXZBFXuWXxkbMrD5xUWV0/OyA9QCnQ
EcRrsirM6OGIAqgurtKCImjALbdUEVGXm9x1/QlUI+XV0cCDpO/KgjpaMIpB
vWRiJ8GkpKRVq1bNjgaqQ2Hmzp1r1uTIW2BBocSVK8q0lTBrCCnvuqrsoG6p
wlkLqKLzm4q736q6l8q2HN/UcmIT0eS0IS/iE0GvTOD8TZs2Ae9V5E5PT1ee
/+ESIBp4kMfJcXg0tM56VNwuV4ytQR05p+l0YutKjdfKK/Nl0SXo/5RfElFd
5bpcompA0GUlG4lDOqzsXD/y0tX95g1q76A+uaJy3aHK6AjIDE6UZNqU1X9y
NFAqnQvQhcyCJlWpyd77QDSQo9yqQN/ClyJLA3WBKA/dKWfODwDtxYuuXD7t
pzzispFVCcUgWc75NFhW871QyEeigQd1vEsj6L+YcvJFyzzMl6v3B74jntJO
hMBnC3SX/pS2JTXZ6WXyIS/3C6g11ynAzqUzVIk5MnuoKD3C35UQMRA+/BFu
PxzxxxT5bU4YRsmpOxVvjbmH4+ZooHgszDmhqH595Ev7u23HaCalDOMYA4v0
yKBr5xEJe1WAYXYQmWtkxLNuaOphXNoEBkzdM0nqqNK4U4+TDpmShaIkhm51
HfnrBKezP7eetflSRK8kjayDmrrSe5VqNERVMKXbVmE8v6ALcPu+/WnBTaqK
NPpJEfMHwO/dQFmjur5OoLrCId2483vedYrU7bPzu/T7bVovIPn/X4VgZPHp
H/mLT0EF2e13qMrYsV3Pdk1NbRC+XBbCQd6eX3CsOGO7uF3ul+Mdhcrh36u5
D2ym7yS+9OPl/UM0jpaDmW9X332u8tbC2dfzPRIHmM1xrPyxvPhrNHsBdfPx
rk6ezMcV1a7Pb2xOU3KuqolyZu+W7R42O6k38FUWccYQHgfqg9spQ/B/pJm8
tYuMD6eLWRqANuWncrvNgUUnDmq/iGClFlf8LiglKW4J+N1npHiOV4FbXpsj
SqUaoWrqqpqQqap6jKWSLireVz1GdUR5AAJvvBTu+U9/vnDgh4Y5QSPR7QMZ
Ziibf7mrTjuNbKl0aaoofkF2ybzMIimC1UKXNZ0sHLGJ41JCMjG1zYMpK5Vy
vtDLqq485YcHuLrVIjslD5KUdqyK5Ynwfuzn3o/5HI1T8erNJfNuLB/+lYpn
v3p5NJCmqwmRPG3ILMaV8sE3cgTPI24TB/52pxg5kPWOKoO95Jakc9VVVzEF
M6HrughgIAMMf6+//npNSgmcA4CNSQGYGSktwFinJ0D0X0bDxhE9mmf0zxjV
jxzVlmEadUrlrnqzJEWm0jPSyESrqXmAgwmUZciZ6V98J+YSkPDChR1Ll76Z
kbGlvr6/7mmE65RQa1ASlzGGu2ASMCe4Qip4Cs91sqZgmrABw3TgLrE8QWUD
TUfBAKqsEJloYE4pU0AOgihF8aS59bnbXp/Sp2FSJEdALCgFAFb/8t+x1hBO
KJKV+kO4CFQjNTVegLic8BQ5gmrAWmI8oHVq7c6kY28uPfrm8pYO1WyC187W
+H86mHilRZL9GxgfExOjGFyWj83xo2vjIizcar9zUXY+neCQCDGpAgUA4gKJ
gcegLK4ohqUdZMKR+FEwyePBZ+ucOXM4oQDkru6QiuhUX+YcctGbLdXRapWL
VEHkT45gbM5fi4Z58+axcPjthnvOHF6ya09m87GNzcc3ArzJCCAKwo9os2dn
6zUVoF5RUZGTk0OZucvFRYsWkRTLk8zMTKKB4bloIWkTykODkEJubi55aUdJ
y9CA6sbo1ImWkfyTSrHcoBFkX5Tkh3P6J20onyELIl7QqorNqriol05/0LUo
6xSF6pxrL6kXMCCuvI4ab9KYgXFRb7M8KMeRSx6l4l5xB4enJD7yE6OH0+3J
unrm8I2znhVyq+pD5Ly5/1C84Lv8Jsf+gu5tZL5ZfnmzlIoU9Gig5TVl03+u
fEE6MqBGnDBWMFDwbWpFzrdJFrdGg18WFZRGRsE+rUexXWnyKbFqWL+1YV3N
DuK4eXE44UO4/vGjLSp7p0aqzRCzfMogWqMuYUxb4oAjCU/tixlYOumZkC8n
vFO19ykVlWK0kbxXZl3iMHBJnKu6O0MQ1VEwruWRnMMSFCgGUfHSaYhRlDQV
FmnmrzSMSVDdyK5Mzkrg+Y1f2TN/50NxK3oIkhWwO28STRG6ypPSIzhDMUqH
LW8twoyvWo5JJa+Zery9gNlZ6b0+Up00tav1etCc55wTLfIsCRPByJHr58w5
PHx4GrecE90r7wp19DnV7Xdown8m4d+B5D9xEUFFrM6fopAXwmce/igxewif
Erd3+yRVGXG7i9mu19WTkb/xWHuB1Ovgdo6Axk90FgLd5W/kNysnEUCemZ0A
khG3c/FERyGgvajkVXF75WvdAV1g7Ii+SnvBW/VD39pwV27cL9RCUV2cDxYE
3tScvi5tpnIDBcsOSowhXC/fM2z+2tvBnAqTRdEUtXF/Gnd1GiVHFlVgENCH
FOVRRCyLFMExhKGDp6TAEs3KdqKmDfGlYVRxhcK4DSGNjBb9gZ1S9Q/l5HLg
uE2gFQ/x5VqR70XQrj4hhdQdnv6brDjFcKvRRYGeLP5b1H80QRp5Vwf60VN1
R6teDXKVvZNgYlpeadvZnMajwFqAJb88Ih2lLDFBX8jVhHZJlEFRPDFFy9zV
9FK/SG6/urAiMtUXyctpowkVJ8w7lSMu65gccSBVOv9XdAM9JUlKA9a9+eab
dc+kXxLmUJc/TK+v5pax3KAApCxQF+pfEQ0AbP6Kt/3lEfCzmJwE3TpnBgf3
kgt5icYV6TPXM/VzLpjv6hqS+pI+13PHPxZhgHzm+sqhN/Es6VMwsIRqNjqf
3TSyZ93YPiRFFjdGgxTNTLLSzmzYcPe5ph7vxl6y5YX/88orx8Hts2dv3/58
390v36MStRajJAvwAMwAabZte5SDGVwuDmX77iAQyEIvTiAThaLqzKvcYtBD
qGrqXclhyAIYA+gS3PIL8il+eUDLzMd3TbhbTQa5r1US1teqAkaJRMhUtXCh
tWzbAC2luwJmsJM8Nul1u8uPv1l6+LS0OWBvooEzOWma9cPm2CsAxrpkIlMg
NOloIkpJKK3GffXzngf0cpHCaArKXSqorN7UgLhgVx7nCuBH9X5XK2TNYoT4
Ck5VgaCcqs3rBFNFHXks5WORkxAUKgY2HcEwOVLlCOt7w4G8vLy0tLS9jblt
xwvB6urkN+7P37M3e2E0iMYTEhIoZMGe1qK9BwHenEe8qR47W958FKxLjhH1
+MzMwPFeVlYGsOeKCjbkSBVousWLF2dlZekuSkJOvUqRoETltAB9iXdkG/bp
00cKR3o7f90bUhWKwEskEa4D3Qta29ds3M6zRNYjsFYPtKQsjnoQq1t5Owfd
EvjKy83YskeeTH220j60MImo+qLNBU0tfxEnrMqlSOKT7x4N6nu7IaKOipo8
QG6epbXJa+mUf8mf94/8Ep+S8MsXzVum5DqJ0J7ChQZ50VfJjmiqafHGpc3R
FxKLXD4o98j0ccwV6ZuE/VKn+pVRd5KlNbhF+RtWxu5aPpME6bQry2t3LZsZ
JO2g9JKJT4vSV7SeWN5yomzyQI6muAiGb5sz/MC80USomDqYmM0JwyKi+NjB
FMOCMXrwhda/cEft6Fv8fCgk01zx09eVD77RQc92U06ilIYB0GlFYzEJcjWJ
Io4uMNwVVZVFWxvdlzCuStTM9KFupPJ8lWfULWemmJ3UO2/Hg7HLu0u0LuwM
pl6aoCqH56+4Qj0WWWv0xyRwVTXXZ43D9BFY3dzXlnSOv1qfucnuvjnBVUZg
eiSO7I5jx+ZQfTVO5aLpipGYQ8P5nwi3fzz8+5C8ej7h9z+nqP+fCDJ5/vms
aP4dYvau4dNQQXb7JFUZ/7qe7XorQgXZlAoA5isARQPdj4PAD2QqYA8HSBhY
zgGG52g+kJlfOJ9xprl1PZCec0YYxocIn0zF4wA2QBeITgD2oRZNef+SeTfq
s55BRk5C4ajLalfustFq6uJuoCoZ6vupypKaPku3TZxQcqUHkswHGhwVS3S1
pm0LgxWgnRIKv3V4pI6NiFdvSgxlmti4M6iWjhibByV+pF5KRdyL1L9qoLUJ
ekciZEZgaR7FzCry6Q3KIUs1HgX+NojaPjpxNk0XINr4GFPULdRXaUStlbi1
2SVR3M5fXfWp+k5pJVEU/Du8u4/ASyFZflV0J6bDuLQ8itldpDCJSLbvFSKT
OOe2JCnIo1469MscZM1kpCiJAFRmygYM0wH0RUJqTOvqn/A3t+kYxWbdkZCa
Sw/RsRFF4pc2JAX6kk4GmYL1VcRfLVLJVHNg5nQQO1UQRSszJwVyZ9bWOyQR
wloA0P69aCDHrLEPZ497hAQ1NCZN0ifNHtFAChSAWRXczl+m9Z49e6qbyuMu
B6qr7z137tHTpx9VnM40DXJg3j8zqfcbU28TqDNN73zpLg6pUYActbX96uv7
gxlIUJ2EAHLIlAKAx4A6AhVV3MEV4A2S0ocmOIrUSF81Xc33dkz8+z1Tvyfv
h7BHZZLSSc8UvPiE5HhSqQMUwVHUSL0R8iIL6TUooW6J5FHXzSUwkhxVA5Yq
RBdOJEI04ljU9VsbQHotcT9unPmPaqSL29M27wJzgpxBoVwcGg0UDIRzZPbQ
zfGjZVCn3UiQXCg2gFbFck5AzhHF8ZodSRu2ADtdZYBXqaZqPzNmzHCnQBUL
/enQPro6Ih01w5UPUzUVTqSp5y6J8AiR5ZyXBJ66AFlXrlxZXV29rynvWHtR
e2dp/c50lgCF20ZWHZxRcuhU7s79IG3aBwDP42D1srYzYPXk5OTMbXvL216v
aDm2du1aVgFLlizhhNWH0L2goADcnpOTw4NkSjXlz+dvw8KJWxLHsuJQCd9l
Dlm8+uqrtnbgh3QThxenObMM5EJ3VaSoL/F5NTRdYWsHuF37AlAu1VSthX5C
MxJ/+4Rvbx7/v3asuefoxtHEJzKvMmdHEwdtpSNXTohJh3TJSVeh69Jd+Xt7
NPB1kzsfiBzmMjtRACLTUdVFIbI6V9RCGnbK42pLv8MahpMyEJ0TrlMvollB
ftUkp9YUng+Wj4XHGQ340nmc4vGR6i6Bz1/tIP66pnAdTd0pHh81cRT7E43U
QN1Aceq1e/mspnXzK9rf2pc8e3/ckA3Th/IgAwXLfCLMbzzG0Rg7iIOe0xgz
CNx+6JVxhS89SWqgdz43YyZWb59RsknOTJJlJNn63G00wo4X72yYdN+Wcbee
m9Krc0IP582iAddWDIko5zMQMXRLsCa7mnovgnY3drnOJEL5pVZW8O4+NcOy
EnXGajVF8xOubc/rVZB4nXuvSsmYthJX3zJvzW3qt+jvW0UXJiBOJF2XClKy
F8GM6vHqfwaGxhC8QjSnXSXwaleaqVnIvh4mUJcJbrtLxcwtsha3c6LhareP
kXU4dXr+n4nbPx4+DZIHrgcXURdwe9dgm/w54Pa/+CRvSn9s+JS4/eOqMv/9
Iw4lvoiuWzacJK+ZmrJ2mrgdPJyRGQegAhUH6N4ZlWBHlE9a12fnzga3K4Qv
LH6l+cD63Py5akdLtKgFoi4v9deZmZ1AmoGUW0efjjwqtqn1HZTPlW8ro+bc
L1paeMGhcFc4rWaIuXSeKha0s1JQ64MRjBQ0KXW4U63F3UbRMr+KAlRx0UJW
zqtQSCUVbinqfIdxUt+deqMwjuJr/yqW1ysT0Syq409g01UGoijezUeBuhcD
Za5WuprN6mVJoK7qO3m56Snqdl+14tmvlgy5VCpgYbboWg52neXJnC/zvG61
JajRykntetLkQQAkj2hgC5KUo0zFSyJoRuo2ii68w9tXE0nSGP4yb/IIcf75
n/8ZRM0swwkzLOkzT83PKs7e11badvb4G9MLC3vrQFBnVSJ/5i8ddOofXKel
wXUpiS/ILllWspGCcfHmm28W3hOZ0jKJ875AESSofB44wfTNsy4MKR7zO9gb
BE51iPbTaAAqkDJZM7Pr2okESQdYQuLq21NHl0iVlXdFCOr3PHB60i2bx/Sm
VMADUIH05uATZmpmZ36ZqeVXB8bIrGhkpYtuGZimpnnbxt8uFbxSYi4Kb7RP
FKiDNwK5B3ntmnw56EvGbKk8zE7NFlXZiQaU1fxTwK/9IGUDx8qzxy8YmFvA
9RUrVug2VIGwWYsJrcW4ceNAdGo7A1YLGw40x16xd/oPwOrpdbtJgZjqZoOc
ga+kw19icixdulQ2SJVJSBwQrjp3TEyMzkaTkpLAt4sWLSK1tZvq6Qy8CEpL
vXT2BMymfSi8dqwAJ81ppQ0BHOrCXnG9YnZF7iBwXdvLSahSEGiZRFhEcFfv
qPn5+RkZGS0HisHt+1sKDyT884mll284ML308GmAPe2jKSu5UAWQ/IYDJ7hI
gcHnRUVFqs1Q07bEp47OHgBcZy2QnZ0NjKdqIHy9vvKm9k6+/0DMY/sWT94x
/wVKJW5XBz4+GqgmrUfZNs56tnpmxMpAw1IgrgsZXjT4UNish1mbl7fJU7Qq
75HGkdSFakoFCY4lqZ2TvsO6j2VCdn0j7452o01oAZqIFgZsk7I6MG4Aca5T
AJXP6UV8cVp2c0vjbmJqM85XpjaXNKT0Hx3+BqtqvpGaUb3ke6F4rg5oE70A
u4wlBS5ywpdCptSRcz5GRgbhN/BYglbOqReFIZrdnl8W73xNpKAKjX6juMjH
TnXym08UHuhQhX5b0p2nsu9vmzucY+fSGfoOIHHyImsNySkqy+H8Fx6njvzd
sWR6/eJp4PbVNXUv55Rlj3skc8xD1aO/sXZTTkz5ZrfA5LQk/drlt56O782A
wNL+nWkRM3aweuXQm96fFnGiBHSnpur7MSBIMiMLrs71Sgf+smzQDRImc5e6
yPYg3xeDPA0iYbsTIqFw9vXtuRHcrpSGp5yA5qbcOjupN9Of+uecuPOr8yZS
41yOBXAI6ejsyVksqKMHSvauuJ1fXRk6kUliwAnYo+NU8bH2fOX2gXlS+zst
WJXbK8RjZBbYKMbvFhVRdoVYiujDlf9C3P7xcB6SV94uQAXAX9CH7xpoGY7z
ljz/+cX4lFQwfzCct7pcnTyZ4xNjnqcqE3LXuXD4y7nfpr9+/mI/xgShe/vJ
os6o6vuJjsIozaNWqJHz/ML5jIeBpMX9OzB2Tt4cwFJgDmfoIALrgjXrpvPB
krKbdG7hqQ1O0HiTb1MeQjG2uJ0HAf8qYCv3Vlub67QAldq3P40iuR3AgkLh
sATp6tqRlI5QZUoPoF1jdtkdg+WpUF8jep24uYVBOhReOS3QTuUWWSWVpQeu
FSUhLhCkT2R4dFtQ1R3VTlRQkXGRB4OBp7ufwQeT/JOa/LtDSo5yvKjBog9W
K5K190jFgcPgdmE8+Qqz9c0qC4FrEPlkZN+lxWQY0EWUiyYiUFOmfq7re5rp
mDJoUUvZSN+tEPk8OQHZEl/0TsG0M6WTcAIk5i6J6wcK/AwupTElIuZ3TkZB
TuPRA8df4JiXWeStOQ1HONRKlUvN+OSiyeqV0UCac9cXAt21SguKNOZIy1AF
zo3s1jNTofa5vjUmX+LzuCoxbi6ofUqmXJcxhtnzJ9GgCj2TrDo5RGAe3zDs
1+9M7c6E+/rkCAygzHqlV68A+F07OjI1A0vUHGYS3779sTNnHqupiVibgiUo
traoNLXCQ4A0T4HbdakD8GDS53z78313vhRRbqFxpDTXKBVEB47VKTzRZO0D
QUlkoSqFNok8Dj4UnBONlG0BsIdaImA88JjWr2JsYCeQT4VzHRKBh3en3r9r
XUSoSzFkdyQCGA/E/k7MJWdnXrpr2cw9K2LUewEDczJ79mzdJBFfHQy9tYIh
iSD/TFxcHL+gVvlteGT58uUAYwAkKegfU8tH8Sf1lWMnrCN08GotVHQH8QKS
S0pKwMmkT3xd6gBlqZq89DzlksEFCGhZ36OLowH0DmI/dKT8REfJ22uuOZh4
ZWI0ANflYweKA9r5y3IDmA3UV4uGk9TUVFIAxh+KexzoznEwtj8lycrKAtIv
W7ZMm1yK2ji13wfTb+GgvhRMNnspd0iZc0ou3X1N7EhwO43Pi3MvRlNltVZU
qXJvhaqpIwQOp74kklK9bV3NDs0Z6JD0H7oNreESjCUMa6jgjZTG4XWAVFWJ
cdNHjXrXepI96o9VJKwmmP2cvq15ptzypEnxlky+cuWMq/VrQEaq6NPVWeqS
uPJ/1drVhxEq2891sqAyDHeJoxE6UJxPj3MuavFB5+dDBidrlCo5JM8yjPDl
8r1L5UpSlrygpb3oQCcRKDa4nb59ZMGIo3OHta2dRNeqnDak4MUnXFBYd/1V
hf0FysNYAVxftbF2QnZp1tiH00bcLzkAawdqTaelMHqY3bn23vqUu1+feek7
03/2+pQ+uybczXd9amKvD6ZFjsKnrgGWM6qA5KuG3+zYxaDHGKhhEbi9+Onr
gm9uBmdqx3DHXycvhz4mEVVTZHQHeKt+SSIpQ+5aMeBW5hFZXEgqGJwy6zGh
KHtXU50hXVNTlTyV6usU1RDYIA0apXLixnQwepV5hrlbv4fKsro+ZXby1WgI
Rl6BCpLIQBdl9V1BDk99Iuz58wxU4YKK+6cJQcvoPw3AfyZi9hC6JkWf39u0
7nfh9vNUZcK518MWkiSrcqXyCeiWKH19bGZ2Ah87v80H1pdXLmk9lAUePnAo
G9AOVi8oWtB8IDMrJxGsCELT35BS31EpWcsb9vAgY4vEiYFuUW+qsrWLSwNn
iz5Yi+b8Uksc0RSpKXXXnl1NbM+VzAPaj7UX7NufShwWERQvr2AexRO5UYZ1
aTPVileCrTKMDIeiNdPnrysOob60LYwtGrHq7UhcKnuJFk86adImNGw4qjmv
YannwRRUnXZFH5LnuL0oQbrcjO4IOLgpGHdTUvNba0EE9RK5osoNCYrb3arI
bDgMdNcJkVkrE5Y4MbhGdXPBB0mfXx1Fqf8TqNp5Sj0WRe7ckjnHEVuV+PyE
a911ValGgbaOt9xxYC6rGvX18uFfcTXHI+q0K58XCXPLhQZZi8DVhl106AwH
eJJ0eJanbrzxRvXk9YLEi1D2pWBKQbozskpZupQlF7k03fGRdtLNAqrGiYrB
PBuoLEmhZ8+eeoSXJF+Od5LSr4q2tMrziRmxtnu2+6lJ13CAPZTSg0lkNQeW
UMja2n5nGh4EunNLo9H6+v7gdq4D8ik/tVOtF2DAI4FfnbkePCYNxaPRsOPF
O89OuRWEM2DAAG4J6cHbcqHwSwRggHapMu2AKMBCiiiBNBSSknB9VcVmIBzY
SUWdRQWVyVVbSQrwtmvXk/v3R/zUTJo0SaI8KTiAfxIMEg3sAbYhd8omjUb9
y3+3P+ZHrfH/9G7sJUD3zoTb2hPukB29/PibJYdPgQkp9gvRwCNavMoDCVrm
rkrmgH8JJGVQBN8Ctt1lIBCHBqFtVfnQjpWW4RG1l2UI4boIkzi8i/Hjx5PI
unXr1KjRmpUGnBANxLdSlkpGSnIH6HIOZuZZSrJ0V0vmsSPtnaX7mvI4KDkQ
F2wvOz34nCUGWJ1nk5OTU6MhNzdXeTtZp6WlFRYWgtsB8OD2jRs3ZkYD6auM
xCJF3L569WrJeWhtGp8s5IenkLQS+JlbLKn0QwqGVCgNvFSriou8DjdQYqKB
FDinprxNQDsrplHRoGV0XcKY2rjIsovOQLMQE5CspJqmpi/xmZC+SlnEoeWD
/19ZJcXwOkUl6M5JBhg1W5ScSy+5bOpPkmJ+rtyer493xy3ik5TInMT5FsDk
wGm/bklQ+Xzo0nwpGptzS0UXPlVpowTwJKI8XCtUygaG5y7fL6tjdcJ1xMZF
HSuTKYXRrnZlee2ajdvpMJVVy5gBDx7OocOUTR5YPmWQfEolE59eubF2amFV
4UtP5o5/LP+Fx/mlMAwUmWMeap7Xv/K17o4qoPe85/vXrbx984rbtAsmFxqQ
dcGZxD6A9jPTv7h5TG++R77Zd6bdEsXtt3RO6NHxUvdzU3rpKRUMz6iobyx1
DtVUZ+5gpOW6U8+GhT2YTOVkUCymoqZiH2d8kLyT3eqBfZMG3aHeC8DATWFV
ZXicKea/f0QirZq6ZMuKjNwsFquL21V68a/2pCSSlDIlIzNOgjJ3kHUECXrp
iO6Sp6yd5urAXeYRIzJGjlxPMahXSkp1SkoVE3QAM0EmGZTwle1b5vPw0meC
u/50oasQ9UL4g6GrmcCfDsB/VmL2rgmGbSBV0/kiPnFRoFVj+BuKEVRoOFFc
T4J8NclrppIUMFiSRtC79ONgEoadloOZfFztnUX7WyOKMWUVi/kF3nMA9hSD
K9UcmZw5dl2uOsOBBVFhL9FUF3ePT9+garVxzjhTtuCm70ZDGGQYE5RLB5oR
wS2jEyk0taQf7yjQ9aoUJYIovUuzuAC3q+/hCkJFHYXMCuG1fw9WpcH/kXt2
ms9I1aIXUUkRKZjyc7cI1WzRt4VgOBDCBG93ahhSX3cWVLlXsVyzUGskIJce
R2G+45gCed2nCvKV7Su6J7Iq2cr8SYcqSEhOslqMMqRTMLlifFMq+dOk6tuQ
mqjbXQ9NgOXPUWgvb5j8Y+25vU7k9qR4b2f+/IOKHh9U9Xmv6tbO/N6UgUwV
7/sSbfySkttOL/3bDSO/pqSI6QZsTzlVdyGob8Pf70QDeUmowtT8am4ZMJ4F
BRe55TzL++WNcy5HDViXOZp0qCDXmeuZlFm2MC+TrC5WpaCh9YoGXMuhIyfp
HKWmkUBDEToPcpG6UAB+yU4mHKks9QvPBKpYHoSgzjzztVI7AQMn4ARmZ2AV
EIhSkX5NzQPbtz+m9Z90Fvfffz+AAWBDHUlNx0/AJLnWiQOEkPJRQL5t/O3M
7CAiwNW+KQ/sfOkuIoDA90y8lwhAJgXRPAturx19iyQb/Aqo5AzR8tQWJq8V
ZTWrK+vAYNylnEuKqtZuqteh5J49A4DuZKf1K6BRInQVWoKOuoSQwGZLu2vy
5RyNM/+xadYP90z9Huj9zdivaLgacS164jdHl97YHHuFBCxgaRAyKUixCKTk
hIykspT3BhybkZGRnZ3NdfC/knYeJEfgPfASWKsWh5SVNKxs+fqc4kRqeiXw
Ee+c69aBxkHpFJ4a6XgUPEyCqvQDkqkm15WQ5+7cn7erGTROCVesWPHq1r2L
6pvA5M2tRZ27VwG/gdw8BSoGePObv7uleN8heVfWrl1bUFAAUCdTcHtKSgow
/vjcZ47NeZo2BOpv374dJC/h5LxooFWJU1JSkp6eTnzKIE0NRaVN5JanBeTJ
pCcEg2XeLGiTt6lQ2lUbHUD1GJ2ZUjVSkNWTpqY1eBe8Kf4e2pl0sH61Bg4k
RTPSt5kCZDtXwqzgmu6kLaf0htKlgq6JyRtxs0Ovu0q5LQn9WdtS1WNUpyfQ
UTeO6EGORJBpSqIb9WrUH+NXp2O6V6D3Al/5lSHKdbQeh1WSEZwr4lbgr/E1
d+nzDB3Evyoa1KlTU4hWpX3oezzF6pVDi11JJklHKieqQzsfmTMsc8uW1Zs2
F014Kue5RwtefKI5fignFAPcfnjOwOZ5j5MLiL1h5tP88rd1wZP2TMpDBfek
PXB2zm18v4FCn+vvTAW3e/Q6Gdvr/ekR2fu5qb1KB/6SEezKK69kOXCu8taT
BX00AnJbk4ronLp47g1Vi3q6v+yUFMZkZzRnN4ZEaQ307qRMDzjNOK8AXG1z
r6s7qsBHFXQnoBCHB1Vf4UFVa7RIZbJbmzojO3e2iqNqrWsU1hjdJQdUADnc
cHeGnTChhEM71uTkKo6AZFSeEeEEYbt6NVrOdkVBf+aQ+AJo/4+ErhpHnxWG
D8vAzyS1rsnaaRW2qxvmqvPjkbuuPbsqxgQ8TyJgdaKJ2zlAwnxffOYg4Zy8
OZxn5SQCUVoPZsknw9F6KJtRi7FC3K7SC1AQVKMrN90qBfpZhajgIhGveuzq
cotvFWtLRSVi9NPmRCUWoS+jkPJSLVL5pbQUjxN+KYY68CAfkCoFYNxmccEV
JcN6d+VBknVLUW15xyLjyJFLObVqd6TiYmCJ5zo1MoVgoa8GoMifxgyO52SP
cXBz18C6SIruLVWMBPZmJP+MHqtNROtRUlbt3yWDyw0jqOWi3Fh5MncVWXtd
U1D9LjGJqHmuDg/jvJrzondXN/x1tHfkJDLTH+no2pW3DG5/u6JP4ezrz2X9
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
B3wU6Cosf+gPJEID0ly0pDs4pOkGDb8SNGkXTC8VvesOWIZ2/tLNaGrtggHP
dDZ6oIbM9Bkyej8qVebT4KL6JHpT5UE+PZfADDIqwilmJxGuaFSiYbIfLN+7
pEwL8ys4XKlRDK6ouE7Z6I3qjEkAxUVumSCRSZ8iae6dtGFLSvU2Go3lhjo5
JMVvWePjncvu4LPac7Asra0tqaYO1E3L8Cztr4o7heSb4vdX0QBub0x6pqbt
CcYZrt93332MG6rlk+aG6UOrZkQ2j2h5TjbOepbVFq+M0m4e0/vtqX3em3YL
y/mNI3qYIFUGyXfG9NSdNGMRTSFdgDb+8v06QVBNR3U50CSKZIqRAYzZljlX
QyqFY6plKkRSV1PGM83N1Cx1c5lxXmVCRWrMIGPGZI8enaWupr/6VJJCQQGd
0ngwjPJ5Gd5Uj1FWL9+dZmh6U+2qNtBVFNnVIlUtAl1JKi+dtjKV488WGH/m
mhgXQrf/gBbNn0jM3jV0pZRRVSay2dRewG9QKgsa7GBFldP8HDRnBp/zlLD/
5OkSzqN2nRFnqcdTp+xdPA64C86JsK+3ZGRmJwCTPnLAVNh6MKLonl84H7ii
1tzI5MzRa7LVYxdYAgu1uJQG3BEjgKv8hGtL5t0owPN7l5mcx3XSpM17EONL
Bal2twoqEcep0X0BqSYZuMhdlnLO1a7R6JUrSqcpsBo+amhrMuloFmTa8k0x
ZJFs5WvdKWTgk1GEbo30DR1cTrs7ICankQMNjoyO/DVNJRK8CPXSiSx0VNvc
dYpBSYgDI1Cza4K2gDRf8qgrig9lU7mIupN13NrseZlFrlmY12z/n/zkJ2Jy
tfHJTpm/Rky2vLdc1MgeVjLk0opnI+1AOjSOeFgjVrWk3Ddh7iB9IihdESSD
/PUMy60NI78G/ge0g67VnhK0M+8A1EXIEr9wXa0nTriuNRbRNAiV3UiOd/eI
SYrrEjmqzuT6hZndilNHFy9ib2kZXk27c9H6e5i+mU+L9jxSU/XgxsoHKACF
XzvsnnXD79X/UeCgllKSoDYOgAR0QXYdky85OfUvNwz7tUopTKzM4yCorVsf
aWh4es/Ee4HcHODt6k0rN9WuBg/rngZIDwAAG+zc+cTp04+e3tOPFGpr+9XV
PeQ2vWSPnBDt7JSIuF4Wd7LQyFQdYGCG8N6MQEQ7X7pr2/jbXR0QDbiiaySd
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
IYn47Ut0qcmM1FVUll85YzlR/4Tq61iKxykwY5ojJ5FpfJqCOBrhjl6bPyol
V/pH/gYeBhUfObfqOlC3JvoT0UCVuwoG3bJnUmPSbO7MUftQvazKq6B0K9Cu
MbLsNJIbKCpvDrCVg2nKFwjbHwi7fwri3CZs12w2uAJuL6q9FL0k+U8QHt8H
7Z9wuIsWzf+hN6V/V/DDuZPSX2YYPiWXvX5BbjNpZ+25Xsm0OlFPBrS8Kilm
5erokMj9TEioviZ14r6wQ1I5IRl2cvISikrmMWqpxhDmk0kRzKfVHUs+dlgv
PKp2kCCHiugkIiIVfCrLBQ9zKHIX0gsXZXeX/Fy7dRXkJH4U0xI4oRYkSzlJ
X7IaAsMm+a5OnpCydhK3lBVIYKv8AdyliojrC+1hdVcqGFYDX4LZ3Kn/ljX5
Z9KtK0+gDCBAVyUB34toXCJN7VjVEtchrHrv/HVPQY0XxfsuEJSKCJ7VHleU
Lb28eoCKNYToeq8IDIE17fei6WjXIyeAtOTUK7/fF3LfDO1dSqtiTGnzvxkO
itwlE7N4yvPtAFxkTlFP3iblLWRntyoq6khR1SOSOHTEiKzcxDU34z7FbJvz
xoOZr342+/XPayTrVgUnWaN6Z47sxTRESehOGngyv6QP75ky5Hl5b+RsZ65J
y4gv2TuoZF3vNW8/R3fiLy9X1qCMrGkyyQutmdxJUyMLTYYJ1FSPS/8jHBIz
izhU41GbS5IZ533mQU5KS7uUl3cXzzNTM/OCVZiOuSu7O7nobompHwQI9ujc
uTMXtdTTBUzFsEc3DP/mtm29zu1vt3pDZkxBBbMwiAggAagGBpMmAFKHj/qd
UbsDmEFMUJPCdtLcNqojqEbX7a+99poq8aJ3vcMws6sDY8zBgwdXDm93LjLk
0kUCQJVpqQvzvioxhJbhoDaFZqr6o6eEx+f9on5py9oFT+4Z9183bl5eVv6B
oE4/SkCvg5P+Ye/4v9HgFOAHulM/vCJu8IaJIWaSyvhhgf/3Y1P6VU/qfzSM
3qV2j4+PV0C9N+IZCkxz6bKzLPqtTZOHkhRQmbskqIg7JSVFzROeAk1pHkuL
0RqqiFRuXbVh0zJ9oRJNkhlqRMEodkxMjH6g9A3EFWBt13DgIo3Pr/6VWCaA
bCmeBqpkoQ68LI5A6xN1OadOFygtX7Zs2cHD+YePFnJdRZqQ59NjZzm4kpub
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
JwX3kYW1ThDOMsJgpjAmL3OhoZxVuaUQW8NPtWiSBz+7J+a1fRPeSB36gjSS
xFcbSlk9c4QevfUVkp07U9x+6kQyeJjpEjxpUwPage5q45AI0Q5uiC4d/FXK
I5EazWLJqSOPiOqJrxoPL8hK6TQ8YGg3cknibxontWJ6JY5Mj3JQMNW6WuE6
9ZKw3c5AaflLAYDBByb8AKhAgYsGfAn4l1ldu3zdFsk3+H399ddBOzLpMUVy
LqCSRkbhJ3B67/i/kToGiC6yAoEALZaVVQLdlWrK30ggzV27Xtm2rZfcdEr/
Sku7VFQ86yJLhVtS0KyPHKXXI6Oz4x/aMfZxUgZsqLQvvyWYnNJqiiirpGrG
JC7f4weFFeBbxc5kmlF1svDkxfykHllLuy6Z8C9zx/5I+m5d6qhEoVMnwDag
PWvGD1y8cJGS79v3BvUVq/Pg7t2v7t//pqzjAOyIiIhh4QCYBHbSIESmbJQK
pM0BmOSivo2iw4Fo2lSCHhWV679VNQ9l5joq4grxAf/5RxozdlSBrlO37F2z
eTd/8w6fprSxsbEUhhIK+0Hg0raAZkMs8bN+mJ74NHCX3FetWlWwqENuwt+v
jv837lKq6Rt2zj5+cc6Ji/N31qSnp69evfpE/KvHp7yydOnSpKQk/q5Zs4an
Lsd0FIpfndD5WlzXm2ntQsf4j9FsD44bYeX/tVv30Tg0o/zwrCZ2rX5m56ru
oGXdwvJLNWkuGXJ4myJqug14mIvV6S9xuJtDU2hySyCFceHgDggtL88kDetG
D01Km0sEKs2gujcqk0hG6qYMjezWEv1E0p7zBR0F7dtXdHXnhTRJhDUv0F2C
R3eaVAyjqF3CQY8DxNRbFjFdNVNN2SCF0DKWa1Fu/+dD4Cke5zPks1WlnJj6
MKVgrcJB2hkeV8mNGs3NKaWrUwxxLFf0gOA4YByH2cyRvYDuS3J6gIeJrMcK
xkZS4+vji+Ag/oYhrZgduFg24NdFfUPEODpxk2dePR9OuEhhlIfoGtW9A1Vr
lO0QuOWIx13tZFWJ14ucA7scXAr2g91Gyrwo64VleSFNpPJBT1cOb6cQQINr
XkrFgjasp3hfqgA1lbT9aJ1V3i4rqyW4WvIHylA6++mihKcow6iU3HdT88gu
f2+vj8XtEkgGGEaNmtvArSJEIAq3FE5y8rGIKMDtgQ78bRSRvyt8Arg9UGD4
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
Vmc5S5l5GyI+Cx5rivm0+pzr3/nGrt3PcIDPlbAxrQekmtQRLHEmL0SFASAR
0ArdqSCABLAESgQSM/0tKtqwIL8cAClTOujo3Jr2QHd5rYHiYAAQi2QOkZGR
oC8+HB0Dye6i8anufkCnJC4RItH0Vlkx7NHyoV/nW1NRhKeYcwHYhRFvyLsu
hZ3eJ8lU2btsG/4l0CCkIPbT3lYbVaLpw1014Lz3XiVl4pMyuWRW1xWeuEAd
xd5UStVZ2p+/JEgcH5cgXWf3Ol5X/s+t8+d7nT/fW74dGgF8npiYqCHqyJEj
pWHURpVchNyauEpyyFNqekjeSNmITDsYmeqTF9helAjOnDRpksSGIHbyAnwC
RAG6nMvxKKk7yVIkeWN0pXQjLnAr8Jmz4761LO5fl0/8KYUM7GFBtgDyqeFw
YNzz18e34QCHX5nQqWHRyIZt753aOJyqyfNZXHuJY+nSpcenvFI3/Q0SARtP
nDjxcFwvntK/0vXi9jeL2vGXMtRk9Lqc3qU6+sXZs2ezOrg+uUtgu3o+qi1N
So3oZm6g0DKu+2hAFV2olGQ7VJA2p6aq61dP6n90Sj/eqZ1T/0famz8TDrRh
YjiQr0lxhZbhV50iegKNT/eQzkUFPD4u7R9JTR9J4lu6Fn1Deb4r6MBgRAXs
kJ+yRe1B754EGhqNOW1c9WtaToIMFGqSK3vR/EReR1VTCAJjFwWUU4t1Hq8+
lCJ/gtrgdn43BWg9BhMSVKmGemmk79Ah3atfExGU8wd061RN13XE1DWhu4eU
nDG2uN+v1g/+7cahrUv6P8mYZpqSujOyaX+qzMFRUTTuVhfvpU846NhXwnk9
Ruk0yg1Q2QbcQXYtY5sXFnYoKurIRTmW3fOilXQ/R3D1xJWivr9kZSFBDWVO
HPP3WdP/7jbcnjftF4y9RQlPrZvbklwKZz55Jrdd1uSfaZnFL89K8sy0yF99
MAXSdcn3WjTD7c3d2ejgCQTSXPG4OZ4JnKiamqhJkHMvgO330mX/B8J90P5H
DAMGJE2depSDEw/O5849z8ltMQNsbMfTwoKeBmoSXd/mX4kTBd2BJbXi9+bw
PkhZHZvbVoW/l5fGleldamdJgjIHCjmcj+v7zZzpf5U04TGvS0czvt+3OBQL
S9VeV58T8nRTnSR5O+iXX4Y+vlwwPMMgg+GxFe9fyn3hRnkHcHtRyTz31gO+
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
UJDwvawZP9Aij3x5cdwiNf5qU0A06SLHjx9/PuYLYdz+6f1Rz+0Z2500uTVh
wgSKRMF4MCoqaurUqRs3L782sRPQ/VDsS7K1z5gxAxAOTs7Pz09LS8vcWZ2z
5xBQHySckJBAHRMTEzVKrZ32+pQpU+Li4siRNPenvngp85mj099euXIlManX
tfFtr41vR4HXxw7a/UHskYR3Lk/oCto/MO75fZHP0mKUmVcjbueXc3sXv7xx
MZtLNlqYpYeubKkIbcVFNWGou7xGZESrUk6qIIcM1RweDlSfaKTPiVzxnPMV
yNqk+J2ORN/ju+D3x+Eg/wy9QushEKDOmOifUpW6TQOY5zo9hxdKTKLxMZbO
flphPqnRQ/hOwb06s5AcQNfGXPcz93sXwDMOkKxK7HwFTC7OF+7KaQnL6EcE
kmKA1WTG7QDVyxm11MwRnKuXzsCiaNppzrx4kOIRTQIZa0eDkMX2dzuB21V6
lz/W8TDYyHN0kiJMimPlG9oxyWlMdqTgNqKut6U7ll2BwDm/YBLJ3Jh3uOIi
xe1OlXACHUt3hNWo1w20nGkaAdHmLKPqMp+sz/pVXU6bi0Wdr5R2o9jMTdqF
yZD2pXBwkcXLUoYTuFXSO6ri9EBhRgATgHZl8kAOhYfNhZNqxQixhPcCJJVk
/l2K5f/f4vbmetH3wycZgOsDByaDUekqU6ceBboD12U+F6LfS5cIupN65l78
2O4U6NUEXpCa9+Tm0e6lPzTH8K5n74yjrvudxfAk8o1vjOv7Tb0bqDCmJo/r
DkA7XyVLDOA0n2H1oVQOgDdIWE0VxhYgMfC74Uxe0463rld0v7mn2/Xrr2fn
zmQQm5vaLWF1R0aYmas6AN2F90lrYhWby75CNK4fOpoGer90eTjovaioI2MI
awQgPWNackocOXLCqKJGt0p0yp91h6qVooBZEMgYCHgTxQmMxYSCfEdFdcUV
zGoaKeLNe+3n5SXPJiZ3Zix9//3ChITaDxZcBL0vWnBx49DWUhaYl/FVpJet
XbGz+JzzmWn5afuPg9t12PT/svfeUVad6bknbv01akm0Wuput0O773W4cz3t
ub4zXnOd+tq+yd2tFjkJCQUEAgQiCpAQAkSqSM5JQBEEVeQiVM6ZDEUoKhCL
TBGFAAFrfuf8XN86AxItudtjeS32OuusffbZ+0t77+97vvd73ueVbC95xm5T
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
QKXyf0gBOF35we9zC0iBnyB5wXbqwM5pg7rI9tG/FfyfO+BZR8+wqis/nAYx
3p8mcdpQ8TSlHjiN80l83/g/YTiQxKLXkgMBJacMVSN/xKDG+G5kbfCwSwzG
e6JlTFzxN28TxS4d/kNSFj8DILW/aRymHUxWVjZZK1jBOQzHFJhnT1433+Dq
pnEvVr3Xyksu57S7PzMihqNBWOPwJ9ndU/N6UlqyKChanJO3IDd/IU8OeemN
pbaME1JuAVeRIJCm7N1fNI1/8dqRN3Ye711Y26v8ZG9t7NtP9dp98u27da/f
mdr5yuK3G5K7n92XwmdDSd+cPcNBnjVx3cCZgKWEhITqsV0AovwEVmn5NLpN
aflyCgNsYx/8ybfaJm9HN1G9vqsgOgMzUaQrE1rfiW8FMgTeBDYyVyk7L+VA
M/vuVZ12ruxAu5HFi9FNYzt4D3gG+FTnXF49uWiS5RyDtJL48oJKPuIoDgK2
U8t285HnYGwprpJXrzHfsJtCayAuqFjxQ7LTpi1e1SB8JP7Va/FtaRxA+PWE
dlTKlLmwT58+VIEcx0Q3YCo3lGZxKqQYvvqNnE/uHKTNwe1kR7NryKVI1JHT
TFZlckXvI6z1qOwPNwhYzsRBzwLQODhcZM5GmZ1GUSQDaalwTi1A8hSPf7Xh
0+zK41A1KgJgJkGqZmiAu/d637v71o2ZPY5N7nF442sH13fjXy5XpkYDuHJA
NIvkfED7zSvvHLs88W5ph/tl7e6VtrtR2JkLr+V3NAgpdbQ9jRewfWdq1Y7V
Ng6F9Kmj2FZfD2jeLO44V/GtWy7p8NjznJAyH+YUXEtJ1Pwxbi8XypLSvV2z
MPu8R3bLdCA8LQBp9YUkXEmb0cKsGVnlFsXb9YjUgYLOQZoHl4AkfRF4lsyd
11PpUXbA7Utzy7QSUwAXhZ1l60suP0fdYBfjJHNqSzHkqKR0elFhsPxwymAw
EU+mByBHOYQy8F1ukDDvPMKNGhkk2rxUU9eJRkjvqCEfxlCt1MvuXeuK0rUu
BMhTdW2UgjnZ0YMgqOMabVzeERlxUKUyhx6NMM6hNOBQZnUmOc1bwEGXjGml
EL6c7/Lyl4uLO9+7F8HJF+a1Lh4UISaRZk5Om1u3unOc7y1bfv5kdKOQDIKD
lq8bkLJGyMGACBT5wjA3Mtjlw7SIUdjW1y8YGwPQAqVrb/fD/iMkZR4+8mVW
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
LO2e9rfi9q2pP9T2S56AMTCVzOQgpFwX/61TmXfwrR+f9mfaSiK0Zl7yVPXF
GPEa3l2kkE+ixL1pqO/hmnHHtyS/Vr5BD1OD7JCSnEkjIBQPSCjiL83m3Hfj
8MrhUQCHhgouA0G4W9u7M5EgKQ/IpKgcBM3KdTGCqmF6bHx+atXXCG/4S1cf
uHe65Sp96YTC2inKTXoKQ8uriyinnZ9qy0hnso7OLCgJbS5JPikpafz48eSs
3wTfoGj+VYOFS3OK3p0y5Llfso6540r081O/VHWEdE8wHCrpxW/H1z4GbqdI
cpVJbBhQY9pKUKF4FP7x6FaYPICPJCvuoHRuCknBekQ3mepMOvZk/R0zO/KR
JPYv0U2QbNQhQbIrKSSjYJRWzaIQakozuwJKXEiFk7NlEb/UfWsjLCnei8s1
EfWtC5XdAOrXyDNdDuT2S0lJAe3PnDmT6YAyOy5dufSpu7cFc54i45pG840W
S9NBMY6EwNDSuWk3OyLqQi30FSIrJ3pkonaNek22qtYDuwLn8jrveFG7JiOA
G92bS3PHaXyuIh9G/24SCGU1DhjuwfdLM4XryPZpAmP6OlWt9DCSTs+/9M+u
b7oyqx+9XiohnmCsUciZBRslcanU4BeujEs1VLSB4xqpQgQHXw0nyz7SQcRS
tR9djRgTxfwUww5WFzDV5i9ejIjJHDo0rrBwU2FhIxcCUYjA1W8PIU0BFSJ2
TeJ6sLa5xkLnIKdwImfF4uoWFPQvNLm3oLi7CdpjE8g3uC48u0Hmt7bf5xZL
8Bauh+WSGwQz/V1sscIyPpx/em1rgclNoORp6+lhLE/e/dgIrS0IM4FR445G
9disfGtCDClmwRxhR/RrVCbN7CtWzVi1JkdnE+WeSGM0VfXGedl5l9fG91qf
2Ec/U3kvcqQLC9uVlHSkj1ox5olloz7zS2J/5dju4FtluOx5NAJrqKd34irM
YiZOzI8KyDSnppaqhSt/XsBGJzN/ZVc++hYZuE1ePeU0T44vH/347ulD1iX0
NpQqg45WAm3m6jE6NNjLSYem55e8TeHr6p44fbpPVdWj9l0iVYk9bJRWMjnl
UUw+WLx1YqW/Mk4rCYLKpe6lXNGJg+ydoD+gH5Mepmwg8/FL1unHqgXec9Ul
Tl5bMnl1kS6xZOXswxDYmlDkYboMrQaCAFsWpZFbqYWsdUVvxP8qp6kmZ4gc
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
TWcpZ26QjFWKIbq0RXy86xSG6Tt55k6Tf3IzeQHCzRpMK6w4FOo7ya8SlIry
JJ2ufPM5NdcI3p6761Bhs2C/09U0cxFhyqQmF0r3K+72nqt/Pri9sfev5Kwg
9uQQ1J3vua8cnLbllYxToxc35ior+v16PqCvrjV4PtCdTT4J8pNdnaWdseuv
mrc8YqskGRTQNQtxJSVha7JSg95DzwddPAUwtal0yD1/eVmfX8WRMHRyv0qj
YgXKQDzpwSWWG1Rm2sne6tPfXnFm4DojG5uYVe9A9DeevDaf7JC5E9EyAxC2
RmpJuHMLLmK5IoETAM/ADdhnA4zX3XbGMw9e8NjQ1hsGn7F/65kZszJa3XLL
LZs3V7juQRRPPNHhra2XBjUlcVB9PkJD0tMIfMo+J80koNcXXBeQFqASbFNx
aL2nbVBTysBMDaCKAWo2hJOff/EQcl/Be5TVkyb7JFNSwxcd20i7yEoMLNQC
FrYcDAhBPco+QA6LQmWI6wAM0XsPnfduHlnwD3axKRIjbSBWTkzBVB1KD6Z9
8sS08UTy7JIyMAy5wuWEgLyldmVwF25/CkAjhfVv7pg/mXf1/6qfeVLDrJPq
duytfmF3MGcy33Bnm4D29QNPWzegFZSSYgstlDx5H6eQ2aG4iM7nuuY1iD2Q
ntlfbrnED82/QaQeIn9hIaXw/02+Kvb2iRWB2aBxPqRNV3dvuKqryKopJD/B
ZJ7HFzxPPSafc5o3aYRwIhR/afOW47kQrwQetZZCspOzAnefeqrT0UmnHx1/
2oFxZ3IZ4NtL5h3srxre8b6ZG+kUcby1rECDPWcFUeeiRO8BYzpUBchZDaEn
Dz9nTkHgnYQ4glPyD24/2NSWb28mrZmQblvUzkx25MiReWtqtq+qen51xeTe
Iqxq0gD5R5rt8D9cd8mOFX3erGudWTPhfWqTuXfewfxTiLenLaW06Q/T06bP
yZEUVZBTQsEpW1pU9fbd+cyrW2Uywl3975o3Yrx80nmkIoebDqch5fbTlnBL
LH0K4oy+hQ2uq6RamY3mUgqc1lU348TGWScumvK1BTd+df7E37+xf6WvS/9s
vTWXzpAX7CqsISNPNlwdar1GN7QZZnZLmWiZ1gtykKZEdrAQyR0gGuUqpIP1
mf6lXZnT8/R5gnBUwZxJA7DUkiOZcdc1zCbdY76Z9OkAg94zbiL5WELlP2sl
3WQcjSc/i4+YkOsIM9kykNXWnl5d3YpvXUvDY/4Ntt8z6jsB+S0BzHsCp8+9
K/rSx6a7FNL7cXKRn20/i+22y09/eXLP4PafaVW/H55Pk/OsP9g+/xFN7ie0
MIyf0OzE0RLtFxyO8dLSmxXa196sSX3+mD6kBF4N5wqxJNiTGKkmJpRY8h7l
7RYVlMCmkMp5N4sfTXoYAUN1faJmF1tBMXcjhOQsrp00UvbVnrmn+jT9m8DK
5gKyTUrGbaLugHF6AKsA4sFBubk0Zdr8/I3mjao5p34gkDq6qEAPXFlx+Eof
xXc1PUZjYxurjeztVhZQ63VBXOwJc+WOHlkw8bU9tS/sWJjysHtbTTCJMOnQ
lakZul44+dYQf685hrXb5IiU9NggyXPOKweD24PeA7ORfMBgC6/ZKcKVpYoY
6tWMCQt3gPwV8B/0PmZJk+XRdOzBzE1XfhlBPbXa9+75AfnB7eYXwgJa7kxl
csXKGC3OC3kWSySGTgOWwLJk6oX55gShJVhrLkFLk+Hyvr+2euBXRKrCI0r9
DBmydOjQKv5iN82vmfpINfDP3TUnrpjznYB2AwFEkYeS4xlWdmy4/q2nx+eT
bAVdFUsRf4azJBFvzpK8a1E4KEIEivAovKvmsnvrK16QhAePvFMJq1Rw+7Rp
04JJJkyYEGgk4tLToyqyJBs3XhbcPmTIkBzPzqOPXhIkjCFzz8qNNS+8fuey
9bl0cF3wD12ObPvqznyj9gxGb9oyufqtiy8MJlyz5oIVKyqOdQGEyPA23A/R
eRgkA+EItguq4jUEHlQCx9LcI7gS6CLCaY5z30vlpJyI0NyuyTjjurDV59J8
8RjlcjClYjbnIJxzscpTA5wl81d+UnqB9ETATAm5iAqnK9oXMz4QyPaLVIwp
tPSmk5dM/Xrj7BMbZ5+0/PXvN716KPWQPmRf7RlpAJlbPTrodHbC5JM80wnk
QvjYwDljcnIzg8BSTg0I5aCJ0vaRIMXLjeDPUIlRIdnSADp37pzZWXnEZHyI
ruSx8l/Ic0Fngj9TGNFIg8nrx3QJti/TAcz/1B43hCQwg8COtghCSxPjhX9x
pn4HrjnznfGnbxxSwe0WLw7f8HOHb/j5Mg1E+8nlqkd0SgIAW/DfVCBGd+6O
00RZHyGJmXoz/8rPFDX327t379wLDo98uD9kPzPQp+4/LzUm+FSOZF/l5Gdw
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
rwrEdsDBMIWxJAGi50SwClZn0RI5ES/UvDIo9+YF592y8PwcJ0VSCfGz4Lz6
ze3nLbpgX+0ZR9e2PrLpnLff7iBG6q5dgw9sa/PO9lMPTPjS0Y2nH910ztFn
zj64+JTDhzseeaf9s9ecFATy1lsd8wlof2dbxSIaJMBAzQs1Cbp16zZgwIDs
B0etX3/xunUV+UR+hcAJUfHsw5Z5HEQOEQAKfBIUMhgAYKBrhGMMyooCyYqb
Ex+/p20+CLdcbsUnwlgOerm1fnXB7cF+JdITSZkUIz9Zs3PpQKzhw4cLrEP1
BZ2GLdGsKimpWaZW86AtvuffFI/zI6kZbBOmYIbfsVXLb966S6wcCiFC0lOD
SbamJPlGVqEPYyaYArDSpzZY5nkOYsWnhTDRWzhwFkddy0mEktK0RDFgysag
TgFSUUTCSeLkHpN/HhYPVrOPpqu714/pct1112WalsphqL/66qvvqWufT46Y
tWWWdM/KjQHbedB59NUjOm2Z0C3o3YNLVgQqt1zffev13XPE2sTZzVvK0KdP
nzwjcU4xlJJD3egr8iysqqRKc6d8RU1AIHD+EUUDk4Ucn59OjiWP5JOHS4g+
WTEgpx4QzoN4Rc7igkEJnOQUTwGLPrwdk3nA1b6rKiGlhHB6bGjrp0a2vW/1
42lyeXa5Vt++ffNS5KZSgcHtW+ZfQp8/FT5w4MD8m8LkxeGZS7YRqT43SPYn
Owz+KSe6e5GOAZJRtWmQplcxhScjaQ1r8ODBnTt3TlbeJnomUGtuOc3A+iZd
l1yFez6jR65OzoXrRPHJpXMOIc+bdzAfOpM4LfjnSWmtsMTREyNJdI9kmxrO
LVhiSD9mTVZPnkaYZ22WlDQ6NySitOQ8I71iyrxw0KWbJ3QNYn9lSk8y/jsn
9bi7+1k7buyRgyKAU1NPPqklo0aO8OZGP8vt0/DxGjY2tglo37SpS3HXSuEL
rZ2NKygCj72lc2ixVTJNszGWoDYwiTgy2az7k8uwGJFa9ZjyUFjzvvzlLy+8
7JstJWXk88E46gM2heFa+6GJi4H9M5/Tn3T7KPotnyJb5kMTFJN7IbR8wB3B
1RabyqywRGuSxmy3pSCSg8HnHFpTGyccY4JlA8iTIG8HzRnTYT6qIiXxE6dR
Y/Er34Gyz4y//Olxl3P5zJueGT0zUQYdS9hkw/kPBujmRHEi0qskT8t8NE/g
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
yslZW+a2zadjx45b72vXMK8Ft3+4sf27TS3sgrRV0FTwj8hT6eazB2E4O3v2
7JlLDBgwIDAg+ARRJGVS1cN7YfiQksgx+eblzom5BGXI9OGcS8EjO4N/8Paz
odPnvoD/3FrhxqcQqSFxeATh6g/skXSkFB6oMGvM38wc/Z+Jz6SoFBvAwJLK
WaBUmjd4dciPlitTjypK8sIc9IcAJIyd/HDdVDgWR6qa+mMHeTWEScqUKiBC
gCEHPvo6NhdVbYsLdSO6Lx/WVWoDl8MAzyOY07Dx/jVbYiXlKfTo0SM/8iy0
YerAEEhz5XdqsmZ833WTavOkhB6Is9DT8iAkzCqqHSQT4V6UM2tqVtDE8Hp2
+EupXp5XOkBGsMa7WmAeIxoZPv/NMePq1o5d0cz2sfglTFLoQfoPflGOTNMR
GkpjWqcQdKCjMtlyegYxvAscGMEmrGCLgJJAGZrSb8mVWGexTJNed8+qdTNW
rNGLsj+tiuPdXPO9YHWssyJqBLenuaaP/E9N9/zndXP/y/YlHdasvbdxzax8
S2eQR9Ai7jTgzJyePewFKaLIcmZgPPZwzUc3tPlgYosQJYuPezmg/eDoc/gH
Us88KeEGRNezXxrB4PaPfoHb2xwYfbZMJWtrv5/99GqsK627+gfZ+c3jyeMo
3qDZWzSJQZ0+Q2VUuDEBK/otsg3mAXl5NazOk2NMbcQZ8l0yaHDF68N6LN6L
dRbtTDwnl8vbnWudV9lqa2tj8jOEc3wezbb72z/5yAX5MzfO15TZiiQFRFFE
LaoxMyTP+/dJJITqdEjcj60qyBDayY9MuJ/q3f2kZEknmwmnVnE/vX2W7Zec
JFO24rv+1P5T2DK24vr+Mtf1u1q2vVXF0x7ons+jP5pkoapoKGXLn/KOtapE
y6bnE10ntw5s5wDcGBQaRodAb7g9P2QdkqqJjhOvcnambrA6KUiHSWxE5JCj
HsudujhQnRIyCi0Z0vn1W/s9M6lXSuDxppqYMSSHBfPgGyDG579YuIRi/qSy
YZjgUaOjwJOcALmQwwp1hHOYqDtaoFxRcLs/cy2CMNTS8s0kyb1zsLMyEH4g
VWFBudP8SCGgvthSTnIJmHDC87u+vi3cvmHDhY2N7dksqOzc8pg8/PxU6InG
cIlztmDpZPjdv7IFtxuf+eENy4WXnsZ5e//qfLhA818+bcvBlrMD2gPg2UQ5
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
YxrxBNnhM53xooMfxekN9gAS2ZkqkYX8JMiEUYxLALdUq2ojuleX8NmTJZ2M
u05T3L/k9qtCkjmB2X5qlnurf86WsYnO+ALEquoLncwNs9MbJOiDNrtQ03K6
NwJQz/GAd2CtbMLeCASYUvnsv+HBBTc/tjQ7847nVQ3eXrHi7Lq6c6hBskTo
rKK+5xVOyfIsZ0Q1aEgeKlOqpD/82/kBlmc/WgtaYLAi7ReahBRoOQ0E6RAh
X726JfFo4d5QbBPMKHhTqGkuVBIVCTJKmdQUcznKiqmP4Q59PX+WTEkp3PHy
vlVruaOs5zeeDKHInJJBFd09d8SCcBb1RUI0bBY570RsCT4ieG6BgIgEtA9s
ayuKl1zE36zkS0pTlHxJHEFmdhg+py9eeit/e3A7scRskvGNGdP0zM5tT/64
OTNIqhe0/NiS7Vv29AxuV6U0WqEbvfza4n37WwK+BB1Mffb1WXuO5juXxiAq
+szi9UARDn8OHwjZCjXqJilpDsxCgBk1qmH06MbiCJo8eVMqJvaBrz6VAWg5
XXm0iqw6si6dQN7UHEMFJWWSR8slZszYN2XK5pTjdpbt2hPoDrfPmvVODr7/
0W33PbKNeDKubK7yyu4ljKB9B1avXH13dXRnEdaGzIVu5U/BX/lxaHXbg6t/
oVGTxlm79vxYbQIVrSlIWJkqUQjhRCWvl2oMHjx4+PDhzz7b6+jRnj954pL3
ms470tDhiYda0iR179496H37Ax2eejSV7XRtZRs9enTv3r2D9oMYIRDoveTK
wXnmPyd3g1H8nUqKzPSQQHSU5tQBXAdxcQnSwuRxGIlQND8wcJjv7BFVIdpR
lCiXtRiKAAYuXIhRoCWEkNNZQ7giag68Yc0R9CN1Au14Rjk3dUvFSIKn/8QQ
y3f2S4iJFU9LJ6dz1yPucsKrGDSVKi2+9vLnb+y7fFhXNyXWWL8FMkmm19TU
pNmvuuqqWEwa3C2jheTGEcLJuQRh5neMLDG84nryW6A0ApUwbetifO8E5L0p
6wb+Tj45V8qq7SP+tHnAv8/+Q5O+8cFNv3bkht9cP+h3c7wH6tHI/SQPUX6I
Oc09akbJdzQ+3C7hLCZ/GqFuRHeq8ukAqFwE3sV0kDa1RsMo0Ji5Lyr0hiwO
czEI1n2YivmesWJNcDuZUNybxqvOCOKlTOgBeaMZhtnSgGnwoPFhw4aNGjWK
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
E0H9BAlL0lUQGoJF4eA2l4qUf7vibH/9p852saiYe6l2ymmcdfaGmT8MaF8/
4we894WvjsQOVRLAYdfk+12L19y7ot7Uxv8fgCdfFcY7Vg+fLSYPPkxmB8yZ
FFVf3za9xzEuP2y6MQZCTiSW/pu/+Zvp7RxsgpO2KdWQ4soyqCUGawr5mx4A
gfCu6clU2Ozv9tnydh/xUxnJ56+6JLg9dTPym6q4uWiq81RLLk+SjjOziKvz
RhZme8790xOZ5a9fXg+0Vz5vH65kOZz+7Rlj/yjzmijF4tJXW7Qc6XeLKPTs
2fuD23FpFi3o+MT8DnC4iTWnU8AoVeLwJ6RJOtLqMNF40go5K8cHIEGMxWdO
4wW/V16bNBaLQMVys5atmBrTEqOG59w6Ag8zV2H2sBRSOPl6QcfFUYz/n806
SHoj4CFAIjOpJERwOwGTpqYuP/pRr9Tn2LH+n3464LOPex7/pMfnWy7M5621
fUaMGDFw4MCNm+fvP1j3zntrA1qCLYPkC5cYnrz00ksDZlwLVoHcgrgYKVde
eWWfPn0IA6K1pDkURfBS4HOAkBZK+ie1Choh6wf+IfTyxkvIRX6nZOMSq5v3
QhCr9uIgGR+IWgS3U7e2KhHwkyZkZ2BGLpr+YUFwTeO6q7nmAISgKQ4J9aEU
lRvtrkl5kGqDW0wwXkoLTDjVlhhQtVkQt67bNvvtD+e9+0nj+38tK31ZXMAS
ST8XAUaQzyUCF1P/1EreeXls5WZd/0rvVxYOqr+hP4YSSK8zGXRc7mW5J9XL
vUtLOXKR2wVT5+BcIreS7SBuQlHakhpSScUNy784S5YnLJ1I+pBLN0wYkA/c
zvzEWULJQ3Cq2JhjfnfLtb9VHYgtuJvthgj3wPpt8xu2SPWLAqTm+Z4LsVzs
8UqKVadbK3yb5Ga+pz45Ja/5+uHfir3Ab5wKbL76N9LDzE8xs/nJGlxad2Ti
BX99+0ULNz357LhOH87tuHPnZSwXPDeLm3T7S5jMTTdtDG73BJZFIiwarhIO
+ZTDTSSA2qRmJQg/H0TPv7Kmbr7i7FcmDc2YnOpZ7sm9yNiVSTYzdaYJbis0
VMuastdlLqbSlsk9M4UhOmMdSRykStH3IugNlZR5uIlSgfRMbsGmTZ3nv/Pe
jFf39e3bN6B97LK6uru/lxkw0826e89adcd/hzFSmWrUUVzugRPVhF7uwWqo
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
ccV111330tJuH63v+NG6jsHtV1111dbtD29qWnDZZZelcAIj6DdUR3DFidTl
weDflqZTHGi+Y8WTdkFHCeS+v27z3NpNQlZ51xlHQGnOzSnQL5oQngl5wOwh
I08MJMZFEMWqaf9u1d3/Pn8D2lfe9QfLp/7+jLF/JNE8VnnqjyqTu+NyVCvT
HCKKb985NNA9jzoSV+4IsPcXzZkj6MlIbITVnHLIy7hrSFM886Cv+As2jvuY
vxST0nvpllw6uH3OhD/GVxF+qLZWJXQm7zcjBV9FF1ECzH7WR44J6t6w8f58
WbD60kBoHvvUJJhzy5WV8GQ2CNd9mgBI57q5rQMGDKBtmCeNCSZdKXnzHCy0
QYu8NTgVlr0W1vWILU9g0/oaucW0UR2YwNakrJ2JWk1jcdQJ5qD0e7AD2p8e
U5GvYV9rL7Wi9Y1z19bei3dN7YoEinSogk1wq/JTjslDQtIzrRCfwiiTfTjf
JWKD2Hv06JFHOld/ceLF7v76wX+Vq1tttOpkaiBIS801F0p9XAgHT+At85/g
TKZRAykKIv8MCqWVX0OE1UCdlg1vStBNCiRNYCE4ww7qVBmUxN2nD+UrIVvk
O60wZoIEHBwvQoEstso8aJ4y9Im7OXJjmw9vqkQ9HzrU/dixnocP9zhwoNvm
zRWh5jTqtiv+1dIp31425ds3D/0XMqoHEmRmL5zz4m8s4XjW8f2EoFv8h2DJ
mYFWNcwuxPjqOL4zbKeUhbxp0G8vvu338vfk47/OvvQzt684SeaX4Gyv3oKZ
H+jftrjZq6vR6gSYrw7QgJ+HLnhiyPzHsyd/pzzz5rAHFgnHaEFury6NHx67
rKRPzd9nburz1pRBwX7BM8Gi+TW4ffXqc/Pk03UnVE7aPb+SkA3OpyFZcgBl
Q3TPQIH9gi2T44W4Pr7olicW3/ryq4vem3X13plXZejLeEh6nfpiRpsMwlJS
Bq8GugvS5Gf4k+ZkfBmUiOhixVBrzPiDs5E6EEsEgI2ZGaMyJELI9FjE2mAt
moh5pHOtjFHcFMHtx5pxO2oiTzip+TQtM4ikSLm01c98od/OxU3ckgKMYnHd
BajmmNQqw3K+BDM/Pvwi/cb/Xzvtu3V3fy/3Yu3a1umHNJbfDxR3FRXILZAI
g4gNWC5SgKuc5cKIyMGo5jmSCk2afHD8eR+MPxdlJcfz+gZ7jB/fMO/hrXOW
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
QC4dNAvOEXLPwbTi8532XeoTKAX3ImynD/MrGgZuT2oC8mlvSQMqjoBHGo0f
PFtY1yO9SiozfwOA8boLBYVPGLgFTfMTgXSVTE3SqJxITZHbU2qkVCa4Ha5O
R+WsVMD+nJtKEjCRs8lOEivo9zkASs8pwe3uGiXGnBgD5+GNOx/Z/FRK5m/H
V2GUybvkQYU5Yy6JESADnkqmgSmqZGtiP9KlCXhe/0qfQN8P5nVsfK0vASJu
89STpUZQiFc8bw0OFVh+S8PWiWsa2QiQcMzGw4d7oOinMpj2NXUz3nr/geD2
fJ+/6pJ8Uuaz4zoFYebSiNk5nlnhXwHFxAwFSMKlcirlgADa4PbnnusboyMg
U/xvCszHigO9IEsz32vOmIzYI5IiBmPuFzlNnZkLUVzHubLHfeHSofmJZN40
4pzGoWcRccqe1JMGEenLnH54wvnHJ1dAu0/g+pwJf9x4x38MCE/985Y9PaZD
qnrsptb5K7on73JuVtoV6yPlf37L+fkcmtD60A2t0fjRAnnp+QEsyIq1sUhH
qZ6Zz69iucHtTotyyv79lx440C23UvA18dU8yRVhzxHnYOOz0fIK51eTo7TO
vmfsMndkyrA4W9JVpP75COD1gudJJqqzfn2Hjz7qJTGi2K4/aU69l7OCNDKD
B7EHBpdYUQ69FrhO7nVwhbewOnYvIASX4Mxo8GSKO4B0sq++YHUQrpxVLQtZ
nfvy5O1rivsZtq8ySeZvHY46+cFFS1/Ynb9fcv8pN5mYiuRLHjZO+BJPCtUj
Ygn9KJQVTnKWbzYw/hsn8r2W5xmznelUYmALyKfZmLdbPCmfPByOmZad32hO
WyytUi4akJ+fJFTKWSRW8j14Mq95jiny7Ig0hN9ffm3xvv01r7+1fE3N9AwL
/NgZEtFIUGUyGudfUT8iST84XJ+PBcSMLTzMkLMscjgkUhdBzjjJvKn+ZjwX
s8lnIkSUcCLPdlljhTy50IUXyXwqk6NFT6AdhQZ7UO5UcaCSqKY+8LBfFa4c
IbTGxnyXjJWSvNMx5PNTNZmECqKisrPmucvrXughGFNCT6QjjH24PSUHad97
77v5i4rPRW9NgVMFGQlZBathzJiakSNXLbum24+mT7///qOmD6lqUv958yp5
D3VjyYIk+ZFgVevgONuZdrnueaTzk/gCxIMbb2wM0CUmaeKbMGF9qirZCsJP
+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
DWWv2IIiKo1amlNiQo37/v8jc+wDSMxIU6Sq1vjHHv9e/1xzzTXXWnO+3zff
7/3yKetH5Ut5tn/tf09GUF6i8pbB5DjqKSNeldHaNuUTDC+Pkl/56otsOxCe
DdUt9fDY59i33jpv9+7umaBTJjgqyDzlg6n47cWo6t7UJi3RgkVTgttXrZlG
FoDH1djlb0Zm+mMZT+QwNYiJr8kwIkKz+F4kj+AMh6XhaiTtjE7Zs3LV1JyR
HGIO/3417TjnOY49sC0WlROV9BZNmBySoThXB0ligNCWz19O/owGQCbZ3lxI
zgs3phIee4AtVeXX4Pa6235w88KaV3ZdsW5dZ8sB6ZAcHtC+9JJu+Vdq1FS7
buYJwe3kNPNXyOQdy86eubAz/GCgFhyaSppGfLlx+H/EpTTpi+0Fb3J42plq
YWmKZPq5JITKzuD2D+Z9b8Ol/zmTDnZK4PrcuT8N0JXUG4K98sq6fNCBshPT
KVNDJpSSgdTsY05BTTdNY+NzXjENZKpKq8B4VpVoVnZZfmJUsuCsL1vbRQry
F0SxRK5C8Bj+kZMFX7QQjUx81CaxZwFI6845MOUhQ/4xBdKld604N8iHtQiW
s0lpvnmkWQQWcSScIlBpGuWRDmxYv/4suD2zcwAztCzRkokbbR5cYYMULj3T
I/X07t07kPv6dVtmbNu19dV19Y1zevXq1aNHDyF7lTyYd5669YEu27ZdENz+
/vv9Lr300kDBlAl079u37z2T/+eq2/44GJ4JMGDAABoUcpueX93WjO277cah
NWN6QbyBRjgJfLZwO3qGMMkhQ4ag1tCuCVpLGVEJuXGI1nzsViK4NFEy6MBQ
qmHg5zsyD+0pkpjfPZiuSyoBBhFHJeI9NsVx1VT1IiJhY4KTUOLVKxtnvvDm
TS2PBjre9uzrwe0ZN158ZVn+puY0W80IVHkvOMAZbjmROGV5oyympFhsKNk5
izcVyCQUz2vhuUox5gMREjl3UpLsv3CM3Fydec4556zb1rfhud7zanveu7p7
HpIcy12clgS051nSpbnqPA88+fXP9qp7poJyRUAIl7hz+Tn5pA1vvz3yH+Z3
CfAmVaQNue8sL67vHJuSucDA4MB1ZPUKDWPSae9OaL9vfIU3bgznPCeJaXEh
XcGsZrkQ+UxtXkyedtKm9B6N5AZPjJS0x3oKb7YHIFeHWulic2ethXkyseX3
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
4WDxGlseWi4RuOZElfC3U2/OnpY5J+1f3yn4kzRNmjpjwekzF3YmrZCS5N8F
gVomThlXx76TzhUGyOXg2YLovN8gN7I6VX8YIHc/vYHwiZMDqMviBFoTHcXS
9wDIF8ML51g72V8genEVwlRYvpQcchZPJu998dtbKMmG7kvoPvv5Kj1X3ID5
m1ejKtvecV9tRzqQwecS0OevxJ1W6sWWBkXkiwyhmXAl30FQ5wNM49N1NPGk
lQEdUwMCNvDAoEC9kLkJDyFlRG7Cujkw6P3AgQpof2zeGfIi8TcGCYgcBAzy
N3N98GewJV86FfRUnjLBzwMHDszO4HaEnHfGV4QHJ9dtmL5t15SGTQMGDKgk
lKkyc/r06XP++eejbcPbeddyOuGuCMN59TiTKTTmvP37999yT8d36jo9fG+n
LZeetm/8qQEwP76i8/Dhw9NdaDwEHnFd0rAA77RcpirZlvM97UxjAuyvu25T
QDvrNRfVNjQYBz41kPpJI9OYu++uLH6lkYTl3azUnJJXr2y8cnm9CIJ0mnfB
wlDbtFmFAIPvh50OyacYqR9LihCsRQoNmDJlCpvOqocaUKPT+JEjR+bXPRM/
v2/yb8kuQT6LB7sE17BeObc9P9gjhb5uELtk/ooHf9yc9x34xKwrMFXsZ0vL
mTLtslItrgnth1FdMsUYoc1WMwndczhbpcrzn4vykmL4WFU0QKV+r2Q2sZyW
xvJ+QeyscjmUGQIyEZNtyRl5VETRrlvXOXaQ1wR5KS+1eSSni2UUo9LClrBf
9Dk5yBALjZZWJ4n/pLY822kVnhtxSOGull9TGCkoN1QeCpkpDFxiePF/0ld5
qvPJNmTIkI8mVUC7z4HJH8cmZ2ferMYhP2gZfgLaWB6ePCTsEQx/im26In8r
Kwsv9MwUOX3669On70wn5DVsaHjkvvv+7r773ibnSLggFaaFmev5uDi0RdLx
JfJ4yxFzCN7jEvw0jnfQHXr5/9m78ygtrvNc9Er814kd2/HxyewkniJnspPr
3Ht84yS2PMSWLASSLGsW8yBmCQSISSAJMYMASUigebBmhqaBpptuaKCZhcaI
SRICCcQMsp3YUozXffr7pffpC0gmOWete49FrW99q776qnbt2lW19/O++3mf
N9/j+n5q3pTP3z7sz8XZlYDTX2tJRlmQUlHJsxSKu0NOHap9wNVjWi+/eiZM
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
re+eGf13z+hfO6p7v3793ryj75u39wn0TZWami7Nx7wPR2iXLl1KCvWSnEu+
1HwfPdolHzIycH72fPHF7s8+23lcXdOYmhUxGd55p0tAPlAdpJr3JW8QIkfw
SUAvtXnZgmA5zIq6+lkB7YeONhw8Ur//4NJg+JQQgEqXZu0DbTc+cmHaKgA+
hk8+WYm9gPGSJfsEV2dL8HmQf2B/EDsuPc5PaiuIT+xAybADD1922WWiGk15
MGRyjyZOXBNsL1gg5aR9mAkU5vHZzKfkKOnblEDGX0xrmi6FU4YxY8KVjXJD
Fr7ow3POjx07tnPnzrJumQ/C9EDUz+3gYeBfxXDWmSBa45Z78U0Y5V/isbSw
mLGpXp7k1CT1IabKk+D1R8ZmhtOol0JCzilNJ6abdyWlpXHML4DoTBiVYb8I
u8b7oruOPZJXiaxTXtKcOjdI2AshJhGvPBICo7xZXpxm7bJbz6yadqYQFWBY
R5GzpEl1CLLpeWuMBYx6wJuOKN5Urjr7y0VlXibmsIx4RWDfnWXspDTxsMYa
DoHUShNpQABemIBAZm96KpNH9Oqrrx48ePD28e2PTTgJbj98cxvDh/CrFIvG
k5avu/prwfOpbYD6qFFL6ZjdeGPDiBFLTKemxbD6Y00/81b3dW90q609T49q
Xjvtk4HeRDyBCxxa2nRoM2LZWkssFkJLccjLzVSkqk+q8ZLt3ER48ryORS7m
xJ2LzOOJUOpDp5x9tRx1Gref8SvtbD/pUp6W1slM/+fpVYXTVf49KXQvYkpl
7slLZGdxHF66rOQtyxtUAl3R17MuNNVSoH5eoieeGr+1As6DzFFosr8kqvkr
0D3r+c5n+2vzMrY+PXdSete8gAgMn6wsAe0HDrTX57f2ZwYfBrTv3V/bnBS7
ojkDuuNXC/3Dk+H2MW3KnyxYNXCIUkqGKl7NT1dSuFJKKaFAKwb+9qpBvyvY
R+6PdIzmZ8Hm9NIpJ1g9fRoPiXXhQrRTSiAbt1JOUTWk/eq7b7mhaikVuIAW
ueO5N3ljECbNR0PRWBkSBiGHmH3ONT7R/+Lg7TLTSqYg7ZntwfNnVVL15RDM
fDLFOVH10I67pvfbNa1fgPrLwe0Te2U0ycZYARmnbrpp2axZe8eMaeQpysDK
21wotUCdmQIyLEYxFSDmI4O5GX8O1cZZ382n+JxRWQxSkDxIzKlOEpl1oM1B
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
6J/eneoaOTa0SHWp4HJjKnF+hPc+vIg+euTIEjrr+fPfzV25KXfFpsmTtwDF
AZCgUGP9cC+Q219Ho73LvNXRkgoJFGfQZGXQ/1c+tsZk7pJy4Oy0/WfIA3vY
nn3u1uyzN9UzB1Soxw4aBCWa8tB1hay6uOrXwOM4fNB500BRPqxgmENSeQ05
pKAKl4BUdbBVXVBG97ZtrQGrPBpw/eOPY3dl/f3ODX9/927bux9H/kp053ln
Z5ecvTIcYA+4BZGSTz+W0vIFl6rzLlbnsqGuoxIxcs+EshLRDdJknVfmmpPZ
qSCklwDPyIkTXpwc0WyJav7waOwHt7N61C9UXRqeRd8E7bpsUE/U2zFuFOUA
dI+Pj39/ytMfTf76u5Of3D/mBwwHjJTKfRlucJRHA67zvJ06dTIkqxJDfIkq
/DhHIA4kq5TewIEDe/TooROu9gGN7Zwg6uNk8mANkZUhXuXjMpYBGypxrZ/2
g8yp39eXk2pphCbH7Lqv6nuuxVjTtHYJvgIamVNTEvh+1drSv4bTnD9VUzeE
XmW7rNsvWJ3q4nKj76lFFqQUdTPRHdXISk6xGR7OWQMH1CE4lDMperXb6Bm4
gfTVkHHCJSjZSiYkQb50MkPxKqhrlN4wfFN5yQEyeVOxSgcBPYxkxQvadarV
/sBigConLOSnOT3HA5IIDZEtmAMNjpJVSozSI8N69VpuDufnzbvFVXSvqaln
Zc7oHERR81BkjEtWrZm4cvUEHkevHGCDCgCar412wV0CDAiy7Z+K2x9/YLHH
L9XKzjycEVUOcPDpq4vtxSra6uuhfY9m7D8Fbl+7//TcuTcolu7dV92bt0e4
/be8PDh6/w8kz4SbPhxJxgsnL3pO6E4tdcLom9GFNs0gp8Fy/qnzEYGRHkIV
W2jS2u89P7h7aJl3Fix8d54f8H94Rknsu0fF7RrVDujOxp4x7bmczx+UpZsn
XQPNiJLatDNq6hrIkiaXJ2JD+XcaFtUIpb6Xzvqlgr1FM/7to4omH5U2up35
Tx9XREJn3il+YcvimJrclwpSf6ZzGc249h/aqJKZz5bNfo5Wzg6Upklhdudn
lR3Wg89mWaRhw2g3wQmaW5d1bQa6phu6NLvDsRlxSp+t6d18/7hO4HY6erpg
Ok37LwPK0wUYFIkWcv2ANgB+57XJmO57tr3c4sCE+K07tldt25o7pP2BCZ03
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
bwgMAaVYMTKCxS41wIBDUMspFIF3rnW2g1AR81khDLyg3LG5EPQ2EV3EFArX
LsusBcPykv5fMLCEJm0Ws3MrUqGElvMuuirBU7RU6KQUI2NfIKvLhSmirCYp
Tga8FFMGqhhVGT6o/MjuyEi1/JT/VoRl6qE4vkpODafdCJYPDlo8EgbSkun/
+eqSdeQNEX7XsLLkq+lSGKL5qZMlBazbdNqE+/vk39e3NQW3b3+ztVQw1GNl
zt27tigUte3mz71zx2e23vSZZaf9608CjbwvcuheupfuZbelVF8qnPOC2OsX
qPsftYXfm4j63v0UlF7Er0B3MF76DDe7UYtB8fKE0VumXPDkuDPnXXj0A2cP
hts5Y3FsMpRxNWSrlRP+XF6qyQsnNrsK+PzpC4vzHvTe9Wbr1m1NmRlNZ/tX
ldhVnZYDu29Nt7x56qFBXBmlZY3JL6MskRmHJ7lnVZO5ZFmC6PvWStiYvzg0
4B/5j9CIiDn2S5F0C2IfMWJEUESMgh89NPz7DwxRkCX/Zl4LJMj8ThtcjD5f
gxxwJ4SnEYEwIVFiOKw4pXN0sd28T3tk0PRHB/+/7N15tF1llS78DOuPuqWW
CtIjjShgVd07xnertCggEBIIJBBIQycqCCJN6ELfQ0CraCSkISEJnVAgAiF9
d3LOSR8Ioreq7pVOQZoAgTSAfoX3M7kFjO85++eed1eAGLl6y+assccZ++y9
9lrvete73veZcz7zmaAIvERwgP+8IsLgOlJQTupixZ1xCaBushIWUP3JZqnV
h5cea7RS29wFcQE+c3efg4vUP2dvoGygDgPngWFHZRjkppMH5DDPnmm8HGdh
Dg5nnaPyI3SK1usqyn/odGAAPjzWaD7pEheddyj1P5wQRHE+8wMPPDB3LW/y
bwZMl4Bk8xWgHgCfgRRsEwMQmA+8D2LMjRPWkUMhs5Uu39KzD0QCMX4AVyYG
pmtpVwZaBLpfPq39m3MX8wyrvcutTRXHDyHnoO58q1povg0CDMpVw4shRkYp
VxdbcsmSIzlLGXc7NWu25uwaz5eeDZbLv7qO1SN2gLyNCiLSkSGE3D5//qC1
a7/6xhsnBMYLADGgjDQMqx2a4uHq7ZI6RKuQEQz4qTeUr8RN6LSIOJRMYrEp
cslXTO/I5xI/UXe6Sj5dtsP8sz4x+dxjnrzh9JkXf1UqqGRMQjoSHvU80Cuj
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
O8UFTC2Mh5uKJQtzgrvcXPc/NOP+hzp5O4MT0sMqMZlPaKEgr2KG8Ctmh6Om
zJl192MX39DJ98jnDO1w06n6irJi8QWu3tQqXFvcJJ5Vbup2zi32eDbIIRYv
//m8+58IfFp26bFPXHZc/paPrlRlNm8KazIEOOgqKKOMo6GuMwjMWOVlPjDQ
bCBkgEUPZghMoASkk0FfhAdxq0p8xsgBhxDmyz+fjaUG5EawI2A58omAKBDO
AVupuGIlZZjAbKNO/ovRp/xK3AaXhlBMNot1ufaW4Vygp502J7g9R8zFD2jM
Xc7YgzOlMGzVqowpZdiJdHXtv2jR8PPnLL78nmXfmHdTLJRbTn7T7ae9+apZ
v5g0/9+/O/+mHCX7eerRzzz/44PX/vBgoMtIK8vFZZHLnFNTTEdSIXMMewRi
F+5x98WAaic2yDNrjLGGXGRD0e1ji7mPAGeuxqXT54+cPBvjOrg9lytnTR9m
cKN+SUPyz5tKRv5K6ObeL0QdVJlLwbKQ5ZpPgttpe+68884xcBbefURetEzz
YTZQuBO6FhzJyGEjv6Ulty4GsXVTUCngv8+9f9nueW3TSOuLyAxuCqLJ1hFP
MTt5gvCITDusZnB981ZZH45uG/9Zq3bYNq0CrKV72S5fgy0pL4OerQeE54Rt
C1qLTfBL5+cPPNT55Kqep/51cV4renuyASojGlgpw6O+o2wxKvn8zTOiRaQX
eewd3SPMJCebkK9Wzts/0D1f1fxvufGJctilIQm3W1bK607Tfv1G5bgc79g7
XEl2ZVlpFxwunqeH6KVWQEx7i2wQe9D7uri91lwuLCtasUwrcxYnzaGLurOu
t+1FNd5fFAkMtIE20F4L7RVxO7YeGEPodV1j3LTw28H12oO5dP1GJqsQeEfj
Q1ivrXCqabmmzY6GTlMprq9ricmXMG+mplNPnX3SSZ1FWeRjySRcmlogomSu
rE1ZgOScWmUgq6xlJfHdt8RPmzfnvmWBpjNnj542YwSBBQSMt7Yqj+fQPT0H
rF79+cWLDxLH33777Xt7P7dq1WfVWuKnlYoFReeIC6/YU7F4fqoiM/B+83lC
LAV4kKXzyT1XnvHY2BMnH3dY3st9Q2JhHRBJQ1vF9AB7xBqCMbbbbruRJ71r
wbj3zhrzXs5nf6dM+w42TmAJij7IyrdPzE0SHI0IjsFctGDppav+ffY9j/NC
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
ZYBu1TQs8Wx5xrT5eQXipg/nzV50wdwl907c9f7v7vbU7Ydce82/5yLcOOnp
/7jj0Od/fHBGe/a28Cu7dR+1M2tucKNKyvQwGllk8sFdFg5zpyYkwSSUOJBL
wQ6qUk1MvPRHqm/R2Cgs8ffaIbbMxq2Svq4bSxZTLlvusssuRYbnKhdiU5iJ
gYAlnluj2HGOK8KVf4FPl1E0CkfO5WLIi9QgvbPI5JwaD/O+uOPaC4euvmA/
2crZZyalfffdV+YsqXlBBxYK8OyRkdfAZ+6Rz8ZMY/avSYbVL6RYGTqz7308
hvbIybP1xA1CXyHvI4FFfisbsASjkIWwXFBHsiXF/gLDIGu+FXXKNtgyMVEr
/UHsoPJDS4i1BGPFwtRiw8mpmRalR10GWNqyUlUeVpy993PfHrrinL3bVxO+
HSYzgg3/DF56sTE7fr26qOUmx8odxHtv141MK/qfKUU51xclyfxGjQ3yoiuv
dU2HS93RYorFZ/Yrx/v6vy50068NQPeBNtBeg639qWxH0WY5OLa8DfWkv67R
s331D3W51l+GS1N+9XayemF40L34MzzP7XQac1GRZ2SqmvbLCkBiT4PhxUPh
t81aVTMgutWrP//004dzx2VxcWho0Lozd+SQmybsHUCycuVn5s3bt6fngFMn
zznphplZU+g6wsNWvRIw5I6++eZPLl58UMEAnmfcBgtlDjR56kX3PThj0f33
Xt7ZjaBbmY+C1BDUJq0aNPnJ2LHLAt05Y0F3cE4UPjYIL2VxcoqcACuyXITj
04dgObg9b644832jT3k3B3v59itmDefYVZrjynOEUUXMC5MjZAK95ClE/PnQ
nFpR1mEq/8rfpBHHwiKDU9TiPs385StvWbXqjieOyutHy48aO3k4rFJoATNK
ZoTxYI3mPIRbmBUlau1YgEpJ2aD1Cg0IAeTvRcf+OdB+9dXPwkKEZdAeBEcg
GZ7SoK8gcNhS4MN7wKNSelGp0apdHLEVEPEdLWFPnknWgQ3sBzxbeMWeGavg
VkB78Dl50oem7/Vw58fTvctO/8s5l/5V/g5qVefhucXMya9kSjKOUH2MIiyX
gEk5krvtttu9K869f+V5a39y2KKZP8pFmDxl9X/c9Xe9tx4UEzWHC2jv+tIQ
gNb9MvKNE+iaC50t5nxLuRFKlGq6TaOK6aaI+/Dk/3lTXLhkMF0f/PZtGhF1
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
+cJ6nGe4XY77ILE7117zN/9t+9Trv27/whc/vl/TdS8JPnjSvRzQUp3C2LAi
oJKrzOo0czwFw5Vxp295hoNJAk4g4WKSlDa4QMX+reXSGRWF2yvcVYAzSFbb
JWhCgY4xDXIhm18akEvwAwu9PLClHHUvuTTFeH5+TzCXBtpzFsMEDaOwtEqY
AEB4BQurBEPJhohPUuwF5BF4NKkccmPVen9AS0MgoLhoNpULtXqPZEogceoB
RO3+MD9TlW0Iwcsul66W4zWm3AN/fO6OT76uxGGMXi2UCCztZ4aTFT3ttNNO
OeWUNCM9s337RTt2vAEpTljBeeedJ6GwBvuRMgNpAQXnu0d9wuAqJn9ujQYU
QpTuwiIThJuz0hiUKpNYcLtEY4G7NdfZIWJPCYK2ayDOWsE2Z50VoXGsKZzX
lFJz8lCHYOF8fhKcFkIuEh6Zrhkd5rQ5LW1c8e6Uvh+bL93mFFo75X/WylBz
evMCcfJMW4BGnp5Tex/JLUN7o83sFaXvO2dmAN0HZVB+9ktw+5Qm1cbz8uan
3ZYXpTwLbhc1n6k7yDO4vajg9mFFJxWyHWo8maE2tSoQEV6NxaI2W2e2ZEPm
0jkt3+Vkl5vJYcXYRJUpzzN652jTYMmF+LGL5MCIgK94Tee1zNrFn6/gU97p
oabZm5JF35LkLniNSk0FaMQlBikdDA3Oa9l2Um06MNA97fnM71z46Mp3fnP5
72UZTTvlfp1oWVSU6rpZTX+Mj5THG0iY0ySL8RNqTbT/7kGk5ltv+1gwqkvA
8PCn07krOTa9CVbPU/bttXdsDgae29JCaVLtYkMIYnUnWtCoKAaoj9IdvAdN
cb0iQsAwugt69IAQLcAVvscDW8ZMkXEVzAjyTXQxuZQq0540eMUXN6JhAF3l
5A9u/+rOD+f17f96z223fwJk4ka+/PJNa9ZMySpCtlpIb8TDFdxn6dd4+iqT
TSWbmTbcdPm0kB/YVkLx6t0Ri8wxzJM0FeqzywMUqQfdF7hN8WOxfxTb5KCW
4qfCe1Nb4GWGbumcY57YegCZ6LGIdEj9iENEMrWqhHFwnBBvPB1wvYSJePgZ
g3Oa1igcTj1mv6YCWsI4eDUuBPpKyarlkiKJKTZE2Qt5I9AVv70iIMSZqpMe
C84Mp33KE1vOf+rBi558YFluXAImBHjKkzlMmGr+VXMOWLhw4bJly44//vhg
+4D2Bx/8P3OMPYgTTjjhyCOPLD15VgOwTT8n/x599NEVKcMi9gvF2dPgTW87
ccvbT2YrMf/dLyKKQIbcFAMwtaXxW1aeVlw4O03mhGIlCY6248lgN1UykUae
rr5bE+msp6uvq9wQLaacmvGXFMZscWxMv/2qShzMPFaonnoSQaSJljRhRlP3
NZD2Cp6n8dX3kdlSpWyWmb1ETnteaB85MwPoPiiDMig/3TKrqS/uFbcHc+Zz
PvZZLbdpsVA4P0ebci+YN6uJuls7MFQneimWbIOCQ4XDa1vWwUMtB8fMln5o
dsuUN9RmzmLp5KIk04u3oKl2VyEQHhv4VpvHW8rUmU2IoDqEBzsL6EhTuUyp
5ZhbVbRjFuuCYTyuqPU81VzQsNBUztNr3/XVj/72FILadF5aC/SONv3MIoog
GlUs6kjTbbZ4jbdUR1mRb33XP/7s7y7TJNvxKslZn7/lD2/5wkcLV5OCAf6t
oTAtcyYgMKA30BdurJDAgs2jTSF5dpOVxtf1bdH7gTTscWxeTmCwRECfpzzZ
RCNzLSChsFwp8ED4HJU4AMNNKMPVSbiwDlJzTI/tj02lPSJdQlIPkt/x0Lvv
f+jdFecYoL569aOf+tR3b7zx7z/96f/+gQ9spUWJ3MITmGbz385r8vUMB7ZJ
mZP6nAOWiQrBzmsy+CjiRgv7RTGcYGabNRKwso/2a4luYX5VFfrKV/y0pTkJ
Ied0fZKvcq1YJZdeuqEEYRgaPLoEeeorHBWKOuRcPGI+cFYDSkYOK341ICrM
mVeZASKEAQWln2mI8e65F9Utj6msmHri4De/tGhcd6Ry+u26LiDQYWlejpG9
SAhq+vPbWy6A2+++7kxf5XjoXZJWNehJ9eeOTu3KyvdNBaguf+8rjzjiiEWL
FolyPe6444455pi854Fny6cfci3mDIIW4l967/tfXvaDBy/acPVJfsK5qUMO
OWTzb52060PnPPHhcwPg3amtKBNpKglQ37lpyZP3L9u1aal4XruNNaWYJ9Of
BoApiJyR3Tr2prb5hdam3qyeMKOxNN4yptlVNNQrSgURK1cpTMuBP6uJwxdP
prwNs5piPFtjrAmwpzF/9R9uyEsovd+Is5gMs3p5K/qzPXJ7ffLjweai4jyL
wOM+cmaeU0zroAzKoAzKC1jueuib2x/9Tv4Gos98uqxWEPvah76VV94Iu8MS
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
0WpuG6J87MXtqbVprEki6/Pyq+/X1MhFXBY0tWTD6rWgqxnec1ZuTaomeWqC
GQpyB8zvvv/CnRuXwJD8xqXfAlxleASxr7x906o7twRC531wO9oqA8GzQxSx
gqsfw4GmR8lTbNx4bmBYIFNeiOt1a/y0kHNtGaAhibskY8gwRC3mDHcwRz2P
MVuAp9e+A64CRzc2BT2ZrV99y1N/+vqn/uwN2x99/JovrHf7pa8iprJo9i6E
+s6t7UJze2qZ4112Xc7bup2gxwD42EeYG5g8NfzgGV5KXne3uV9LGsuZaZsg
94IapP8nOsm+XBF6NFR4rZmcMTEq3AAM9kPjV+evLnl2+wV+mAd1GZfw7bHc
JUUVqskDT4mxROAZGnOaFs0BLW+XalVowHhYwLC9mP1bwqZStqkobFwgFoSg
VJo2aUZsovs+eWRw++LFi3F7kO2D25mH6OiHH3746aefDkXnrLzJ8Jsahzcc
8aV/cdi9Nx1FmCgQnfM8ADs1CzhFMdJURh8rAyE8TZpsavPiQWxUaSdmDjWb
VBsbOZeQkZZEf3U+Nn5NSkx48Q683/XTzl/Gi91D5k85UhDtTInmFhOsqaPc
5qZTW3V2Le2tODHX7SNbP7eaafu7mUU8M4Ah/NpJGWuJgydbouS9LkNmhr1+
tY88ln0se9JmpinY/Mhr7csxgzIogzIoL16hhULCfa/TESBq3q4ZL5Nw/5gC
tOWyLvUwqwm/0OyWxpFzeGZL9AP/m7oLA9cBvOulXfZD/+GGc3bvfuuuXb+G
e1nA2KKmKhN+n9YISJQPyt+6zSz3HOYOzpvlnz3vS99425avvNnWM3coHJX3
q1c/mtdwp7dQa99wE9JxL+CTtV7zymNWbPZyvEPjheWqA8slO9wSUY23WFfA
DK4baZlHans6yz2/urse66j7Us9AC1yyU5Ijm5cGVFiCocEiBsBX+SrjZMUX
N6aXAtrzEhSJN1LBy2BhPnQJYY9sOs8FAnRYMFWeIO+6gERY1PFiElNyrZgM
lRcVGJjTBGccX4mfjBB0fXBCOG2xmkUcFNRPWXXzBbv/7PVP/vmbtz/2nVgl
AglhVwYIG8R7jxVqoqGEwaINnjin96GHHmorAU6m+5cXuvuWlafJnFUBI3ZP
5jQVR3fnXmxm4d6ztvKw8gKPYfX3v3/z5ZdvYqpgRKdLjzzySO/R4MdaAjKK
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
kW7hXc9ry8rTygZh47PgsP76uN0Tn2iapTIybFt1RtqfBognGm8qTD948KKp
GNL7l/n3vt8/a9PbTpzZZLVMfR70RBeTTsKdnI4JyhTkl9LfrHQVuZZKGWxa
Kbtj2izt6vtCWd/z22nAfnhvZVaTFHvxXPSjTUBswJkZlEEZlH0s/Jkvnr1v
SQ16CYbJBJg3l1220aRn6XSYxQVPA0W2dr37Te0j9qG2AAW32+wuZiwYPK/l
WKwYxv65M3uSaOV+7zd7pCe3OPp02YEZLXFq/xSbC7gl5cAEgSoODhguGF+8
aECae7no9wAtN3jqB3eHOz038t3WrIlOrMZdVEv4zys6rBamWT3Z9hQoEbeh
6KATnRoGNE6kEawabqIQBVlHe5kE8/7Km+/a8qUH//Tf/Ot/9e/+7Z/9m38d
CD3SBDC1hz5JGoPUXWFuemO4R/g0LOkxlr1TfV5bDKUbU+xxiNTOfmme2N8v
PAOoeM8bPLdlGcBLgaCKnE84USpShhgpS9CxQhpnd3I34CjBUtsuMVQz5oFS
h430pDsnm2AjCwICF++pAWkPbMORC3VD1KDmAV02Iu3hdua5rQ8dJsAT472S
+MDtzCK4HTxO/X5WOi33HhCL6YTzQAioYmbp5JRQPBpM2oASU57tEkKRZRV9
yFfaWcZ4+ge8F5FaiUHRjSpMY7ypm2bw4KLbDgiahYH5yRnUxrNfXP0isLDm
dZrwtfFkJJCLCW73Nxg+UPzVr341KUjaknnD3JP/98gjj1y8eHHGj+1C9prQ
UT2Zv4H6Rx11lKxPxhLDxM5CbM9r79hsA8VOnAdN5vG4444jIwNpo+Xk9Dya
3R11Rwg/bh5eWW3fGKvDTRdLX9HGrAS4E0090g9Tj+WrJ7ac/9SDF+3avDTA
PlfJbdYYntMl7bJtIaIkLRTPO97kvPKbXXflCeuvOhFb0m+8pqbSlslrT9n2
oaZIWRNvbXvtu6d6xoznljt1GqrvA/tZPX3gKs/HRW83wWN6TicOyqAMyv+c
ZWRvwukvYIEhBesJr0OYmdXSIQ31lN6xiIs8Y1UdejpiN3kC+YjTUyk7Ny0p
aF0IfEaTSbTEz2q6lEUDLjjNO12iCprdd7NXlFbdF2NnGpgf6WTbbT3bo6/k
9UUOmdnyog43fRXLEBf6rKYtU34YeMNhB3W5BTlphb9p1YyeTPFwC8iaaNkJ
+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
gvFxWVKaAr0bYbabpQJSRHwhuLtimIoLE+N2Z3n4g9XA7o5zPJ1cANcoxu2Z
yLnLv/qwdji/FkqUFszekFg1lPEqL/lSHJNvefu1W2ba0rb1z5gsWbJkyd60
Bk8mg8qK16Br/VR9LDZqqQxt/b68FYzImJB/Bxlsz5zLYKwMOgIKElVueUCt
PYk9c/mgZKCgUmtDIKmUw+2V5pxkcHU74AolhjncaaedwMPEw3U8xS4F3QXg
p0yZx1ugboNqgLTLM/WJiAqmCyN8jQolaaEy53J2hsKm9ZCb6VWJWmDsZ/pQ
a6PoEk8CH7coZTxv8Uw69dX43MRyZsYRcvbL3aC4bWco51oLcotmAWWQecEc
DtWSWYF5radk9no1yjltd3zGfdvKfJiMJdCeLFmyZMm2prHsnoG1BUvM1YFK
lBcYRVWGts2MFeCTahDoqwxFsD1/umqhhklsjrXme1vPkdgrUS5ANSKok6RZ
kK4Yd6zYO8tExdFFjA/If1wd2GGHHQgpC7fXQ/Ui+gn/AU9NmwC8K3gacGbc
qD7NCpBxx8CKhNaJP8eAnLHgHbiQK/PmgdcigndmgH32jbPH2QG+RrVmXVed
EcH2zqgkPR/x686QD9sVyr/Wm9rmyOM4ct4RadGXnDEPZAi977yZAVWSsuIA
ezESruZyYbYmHyZjCbQnS5YsWbKtabVmScc8bi9AuQNTfdy21me4uzNIeQwA
/7S0/AO93lt4pKWB8DNA1Pxe76kFKe84uFoNUo39oiL0CZAuu23u6g2/0aYX
BHXjIbSMRQsqEyjefvvtoYXEoiiC7rNn/wbcTlJD/rzlw7OVIGRqoO4oesx1
6ewtpQKKjv0FdVjd1mtEe/TX1Jr4XH3iNCZN0Br1y5iaAid//ZKxlG2dfuvY
q24bR4fNgfFNEptXWGAEMZnx8QO4Y5mT/n6qpOUpLsVes2/mkmtS24oP07In
27ADyZIlS5bszWa1IOhRErcPFazdytYnGcD+y1AtJbQkJ9QKE07Pm33Pt9Zu
0vblW+dWoqCxcWYtSjnMYAZH4/vVyT6nRQcYt9+/7kW9BjpmoHtmjIKshIVB
73TYByAVIug+Y8ZT7c5bC1ox7W62Wkiq1bkI72coH0yXIHEBuDUMJo5NV3/y
s7nP/+p+bUB3JvmSc96hLZ7zOH6eCX1Tago07sg5V0cvwO1Lpx/G5HRERYgK
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
    "], {{0, 983}, {
    1000, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Magnification[0.5],
  ImageSizeRaw->{1000, 983},
  PlotRange->{{0, 1000}, {0, 983}}]]]], "Text"],

Cell["The image was generated using the following code:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lg", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<NetworkGraph\>\"", ",", 
      "\"\<CondensedMatterCollaborations2005\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lg", "=", 
   RowBox[{"IndexGraph", "@", 
    RowBox[{"Subgraph", "[", 
     RowBox[{"lg", ",", 
      RowBox[{"First", "@", 
       RowBox[{"ConnectedComponents", "[", "lg", "]"}]}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"c", "=", 
  RowBox[{"IGCommunitiesMultilevel", "[", "lg", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pts", "=", 
    RowBox[{"GraphEmbedding", "@", 
     RowBox[{"IGLayoutDrL", "[", "lg", "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"this", " ", "takes", " ", "a", " ", "while"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{"figure", "=", 
  RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GraphicsComplex", "[", 
     RowBox[{"pts", ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"White", ",", 
          RowBox[{"AbsoluteThickness", "[", "0.3", "]"}], ",", 
          RowBox[{"Opacity", "[", "0.05", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Line", "[", 
           RowBox[{"List", "@@@", 
            RowBox[{"EdgeList", "[", "lg", "]"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsolutePointSize", "[", "2", "]"}], ",", 
          RowBox[{"Opacity", "[", "0.7", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "45", "]"}], "@", 
                RowBox[{"First", "[", "#2", "]"}]}], ",", 
               RowBox[{"Point", "[", "#1", "]"}]}], "}"}], "&"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"c", "[", "\"\<Communities\>\"", "]"}]}], 
           "\[IndentingNewLine]", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
       "}"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Background", "\[Rule]", "Black"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 Evaluatable->False],

Cell["\<\
\[ShiftKey]-\[EnterKey] evaluation is disabled in the cell above to avoid \
running it accidentally. Running the code takes about 2-3 minutes on a modern \
computer. Copy the code to a new cell to try it.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Gallery", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"RandomGraph", "[", 
    RowBox[{"BarabasiAlbertGraphDistribution", "[", 
     RowBox[{"30", ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"layouts", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"#", "[", "g", "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "IGLayoutCircle", ",", "IGLayoutDavidsonHarel", ",", "IGLayoutDrL", ",", 
      "IGLayoutDrL3D", ",", "IGLayoutFruchtermanReingold", ",", 
      "IGLayoutFruchtermanReingold3D", ",", "IGLayoutGEM", ",", 
      "IGLayoutGraphOpt", ",", "IGLayoutKamadaKawai", ",", 
      "IGLayoutKamadaKawai3D", ",", "IGLayoutRandom", ",", 
      "IGLayoutReingoldTilford", ",", "IGLayoutReingoldTilfordCircular", ",", 
      "IGLayoutSphere"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", 
  RowBox[{"Partition", "[", 
   RowBox[{"layouts", ",", "4", ",", "4", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", "\"\<\>\""}], "]"}]}]}], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutCircle, VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7GGsBoYqoz8+7+2/RjituTnnlP3U+v/rDlu/
tb8gxab4k/2W/Yov02eXP35pHxdVyqJ8/pH9Te5H01oyn9of3Ge84vrx5/aM
YFMe2K/yiXhRte21fcBLffP3xy7b/w9xEebLf2dfFW4zO+HQLvtj6T+myF9+
b58E4e8/DuX7QdTvZwiFqP/zHwTu718DNe8qxL79R6D2LYe4Z3881D1TIO7d
fxXq3nqIf/azREL8A/XvfvYYEWO1ZQttoP7d/wbi3/3TofpPQfTvh/p3fyzE
/P23oPYfgNi/nwXi3/0rIO7bHwR1P9S/+xdD/Qf1734vqP+h/t3vAw0fqH/3
f4b4134d1Lwr0PA9BrUP6l97qH/3T4LGzz2oe6H+teeE+Hc/AHWB/z8=
            "]}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7GGsBoYqoz8+7+2/RjituTnnlP3U+v/rDlu/
tb8gxab4k/2W/Yov02eXP35pHxdVyqJ8/pH9Te5H01oyn9of3Ge84vrx5/aM
YFMe2K/yiXhRte21fcBLffP3xy7b/w9xEebLf2dfFW4zO+HQLvtj6T+myF9+
b58E4e8/DuX7QdTvZwiFqP/zHwTu718DNe8qxL79R6D2LYe4Z3881D1TIO7d
fxXq3nqIf/azREL8A/XvfvYYEWO1ZQttoP7d/wbi3/3TofpPQfTvh/p3fyzE
/P23oPYfgNi/nwXi3/0rIO7bHwR1P9S/+xdD/Qf1734vqP+h/t3vAw0fqH/3
f4b4134d1Lwr0PA9BrUP6l97qH/3T4LGzz2oe6H+teeE+Hc/AHWB/z8=
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{1, 14}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{1, 16}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{1, 17}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{1, 25}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{1, 29}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{2, 12}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{2, 20}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{2, 24}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{2, 26}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{2, 27}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{3, 11}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{8, 10}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{8, 21}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{9, 22}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{10, 18}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{10, 28}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{10, 30}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{11, 13}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{11, 15}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{11, 23}, 0.02261146496815286]}, 
             {Arrowheads[0.], ArrowBox[{12, 19}, 0.02261146496815286]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286],
              DiskBox[3, 0.02261146496815286], 
             DiskBox[4, 0.02261146496815286], DiskBox[5, 0.02261146496815286],
              DiskBox[6, 0.02261146496815286], 
             DiskBox[7, 0.02261146496815286], DiskBox[8, 0.02261146496815286],
              DiskBox[9, 0.02261146496815286], 
             DiskBox[10, 0.02261146496815286], 
             DiskBox[11, 0.02261146496815286], 
             DiskBox[12, 0.02261146496815286], 
             DiskBox[13, 0.02261146496815286], 
             DiskBox[14, 0.02261146496815286], 
             DiskBox[15, 0.02261146496815286], 
             DiskBox[16, 0.02261146496815286], 
             DiskBox[17, 0.02261146496815286], 
             DiskBox[18, 0.02261146496815286], 
             DiskBox[19, 0.02261146496815286], 
             DiskBox[20, 0.02261146496815286], 
             DiskBox[21, 0.02261146496815286], 
             DiskBox[22, 0.02261146496815286], 
             DiskBox[23, 0.02261146496815286], 
             DiskBox[24, 0.02261146496815286], 
             DiskBox[25, 0.02261146496815286], 
             DiskBox[26, 0.02261146496815286], 
             DiskBox[27, 0.02261146496815286], 
             DiskBox[28, 0.02261146496815286], 
             DiskBox[29, 0.02261146496815286], 
             DiskBox[30, 0.02261146496815286]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      PlotLabel->FormBox["IGLayoutCircle", TraditionalForm]], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutDavidsonHarel, VertexCoordinates -> CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAL68Jcs7j8D8UavZZkZpzP9ISG6n+
X/O/m1LdahHCoT90gK2He7LcP8Z/CvUYmNE/jb0qb0qF9r9MNfnxraDjv8Tc
hBdlUvw/M9dED2Iy1r9wBukKi6f7P0GKobg1gtk/yAHUz39Q9b+wuHK9Sv/m
PzjUM6b438I/JBW4lAWh8j8QnI2fGv7wPygMqIcbJ+m/HRA3G4b62b8d4dSk
aJnmP7vRj9Q7isg/0ewCeX2H5b8fo/wPDcP+v713CsBgKtm/O2ZCFdJ84T/H
Yp1Plc/wv7iwEjs+3Oc/+8IiHNt14z9PufYd7wPSv9Ib/wau1+y/+Ml7c9WQ
9z8Gk0EuMo3mP5860s6EfPE/DTQF5qT+6D+q0swuTBt0v/DNCK5pleU/B2cN
A6uxAsC4r2ukrQLkv+8a1lUweO2/0Ln5+Imi3z94hhhHO1vEPxV9CYb+ovo/
3OSxHPwr9D/IocHI5t7zv5Yq+Yn5G7k/xDsKFDQD9L8FPUpb7yPvv5v1ZpFf
4OC/IMWWZZqD9z8yfOfmJGPjvzj2IxtEdvu/0FCJk8JM4D9Q68MUvZ/+vw9A
L5Wg770/VJx4NwmRxb9ZV1J3OPfVP6K1udTrXP0/dHGY7YnwpD9yy8+Azkzf
v71HMLMywMy/dzgFfA==
            "]}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAL68Jcs7j8D8UavZZkZpzP9ISG6n+
X/O/m1LdahHCoT90gK2He7LcP8Z/CvUYmNE/jb0qb0qF9r9MNfnxraDjv8Tc
hBdlUvw/M9dED2Iy1r9wBukKi6f7P0GKobg1gtk/yAHUz39Q9b+wuHK9Sv/m
PzjUM6b438I/JBW4lAWh8j8QnI2fGv7wPygMqIcbJ+m/HRA3G4b62b8d4dSk
aJnmP7vRj9Q7isg/0ewCeX2H5b8fo/wPDcP+v713CsBgKtm/O2ZCFdJ84T/H
Yp1Plc/wv7iwEjs+3Oc/+8IiHNt14z9PufYd7wPSv9Ib/wau1+y/+Ml7c9WQ
9z8Gk0EuMo3mP5860s6EfPE/DTQF5qT+6D+q0swuTBt0v/DNCK5pleU/B2cN
A6uxAsC4r2ukrQLkv+8a1lUweO2/0Ln5+Imi3z94hhhHO1vEPxV9CYb+ovo/
3OSxHPwr9D/IocHI5t7zv5Yq+Yn5G7k/xDsKFDQD9L8FPUpb7yPvv5v1ZpFf
4OC/IMWWZZqD9z8yfOfmJGPjvzj2IxtEdvu/0FCJk8JM4D9Q68MUvZ/+vw9A
L5Wg770/VJx4NwmRxb9ZV1J3OPfVP6K1udTrXP0/dHGY7YnwpD9yy8+Azkzf
v71HMLMywMy/dzgFfA==
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{1, 14}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{1, 16}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{1, 17}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{1, 25}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{1, 29}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{2, 12}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{2, 20}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{2, 24}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{2, 26}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{2, 27}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{3, 11}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{8, 10}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{8, 21}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{9, 22}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{10, 18}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{10, 28}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{10, 30}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{11, 13}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{11, 15}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{11, 23}, 0.0380927170892289]}, 
             {Arrowheads[0.], ArrowBox[{12, 19}, 0.0380927170892289]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.0380927170892289], DiskBox[2, 0.0380927170892289], 
             DiskBox[3, 0.0380927170892289], DiskBox[4, 0.0380927170892289], 
             DiskBox[5, 0.0380927170892289], DiskBox[6, 0.0380927170892289], 
             DiskBox[7, 0.0380927170892289], DiskBox[8, 0.0380927170892289], 
             DiskBox[9, 0.0380927170892289], DiskBox[10, 0.0380927170892289], 
             DiskBox[11, 0.0380927170892289], DiskBox[12, 0.0380927170892289],
              DiskBox[13, 0.0380927170892289], 
             DiskBox[14, 0.0380927170892289], DiskBox[15, 0.0380927170892289],
              DiskBox[16, 0.0380927170892289], 
             DiskBox[17, 0.0380927170892289], DiskBox[18, 0.0380927170892289],
              DiskBox[19, 0.0380927170892289], 
             DiskBox[20, 0.0380927170892289], DiskBox[21, 0.0380927170892289],
              DiskBox[22, 0.0380927170892289], 
             DiskBox[23, 0.0380927170892289], DiskBox[24, 0.0380927170892289],
              DiskBox[25, 0.0380927170892289], 
             DiskBox[26, 0.0380927170892289], DiskBox[27, 0.0380927170892289],
              DiskBox[28, 0.0380927170892289], 
             DiskBox[29, 0.0380927170892289], 
             DiskBox[30, 0.0380927170892289]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      PlotLabel->FormBox["IGLayoutDavidsonHarel", TraditionalForm]], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> IGraphM`IGLayoutDrL,
            VertexCoordinates -> CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAqzZd5TgX5j9qjWQqg927P6EVApMG
agBA5r+eVyevtb8z9fm9KBXzv2RgRbuyzIo/obyvFaAjAUD6r19KAADTv+SA
yCkTROM/DtQT1ufayD+Ff78MPN/sP/14Aez3+7+/Np0BKRwXAkAztIkTkZJo
v3ATCkYGyAPAibIc9diOjr/bnfGb7QDqP8x6segQUc8/UrbCGfrlC8BeFgeN
AoWLv/pyCWHYJ/q/xezwjkJDhz9Z4nCuEv8BQNJuo3M4oqU/50MUDqgV+L93
gKpzk0OuPwGuUJlxUuI/wdfAXK2hwb8F/WpsZlj6v36NEOd79sG/t0IL2lSp
6D8qM9RI0fWdv41RsvlWpeY/eXnqB9nesz/X3PtgIvIMwJtCAnizbcC/DNkL
HOKvA0AeHCus4KiwP7+vR6uUNQFAvBU63TA4uL+mkIl+9GIFwC/KbBI5T4k/
9GTCX28v7j+Nx6Zg5/PRP+uvcdMNbvy/tOPFLRjshr9nPVKkA4YBQG5nj3sp
arg/8mfyd7G/6z9Ma2EJg4WaP+AZg/2GYgBAd/9ddkIEy78v2c4qt8L+P9kA
EzlTbau/37dMe1ERDcBkhGVZHue2P3cdNRf6lO8/yidwhePSsj9EQ4+SZooN
wKZ1CD3GQam/9yfxpg==
            "]}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAqzZd5TgX5j9qjWQqg927P6EVApMG
agBA5r+eVyevtb8z9fm9KBXzv2RgRbuyzIo/obyvFaAjAUD6r19KAADTv+SA
yCkTROM/DtQT1ufayD+Ff78MPN/sP/14Aez3+7+/Np0BKRwXAkAztIkTkZJo
v3ATCkYGyAPAibIc9diOjr/bnfGb7QDqP8x6segQUc8/UrbCGfrlC8BeFgeN
AoWLv/pyCWHYJ/q/xezwjkJDhz9Z4nCuEv8BQNJuo3M4oqU/50MUDqgV+L93
gKpzk0OuPwGuUJlxUuI/wdfAXK2hwb8F/WpsZlj6v36NEOd79sG/t0IL2lSp
6D8qM9RI0fWdv41RsvlWpeY/eXnqB9nesz/X3PtgIvIMwJtCAnizbcC/DNkL
HOKvA0AeHCus4KiwP7+vR6uUNQFAvBU63TA4uL+mkIl+9GIFwC/KbBI5T4k/
9GTCX28v7j+Nx6Zg5/PRP+uvcdMNbvy/tOPFLRjshr9nPVKkA4YBQG5nj3sp
arg/8mfyd7G/6z9Ma2EJg4WaP+AZg/2GYgBAd/9ddkIEy78v2c4qt8L+P9kA
EzlTbau/37dMe1ERDcBkhGVZHue2P3cdNRf6lO8/yidwhePSsj9EQ4+SZooN
wKZ1CD3GQam/9yfxpg==
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{1, 14}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{1, 16}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{1, 17}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{1, 25}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{1, 29}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{2, 12}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{2, 20}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{2, 24}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{2, 26}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{2, 27}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{3, 11}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{8, 10}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{8, 21}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{9, 22}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{10, 18}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{10, 28}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{10, 30}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{11, 13}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{11, 15}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{11, 23}, 0.04926188651606053]}, 
             {Arrowheads[0.], ArrowBox[{12, 19}, 0.04926188651606053]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.04926188651606053], DiskBox[2, 0.04926188651606053],
              DiskBox[3, 0.04926188651606053], 
             DiskBox[4, 0.04926188651606053], DiskBox[5, 0.04926188651606053],
              DiskBox[6, 0.04926188651606053], 
             DiskBox[7, 0.04926188651606053], DiskBox[8, 0.04926188651606053],
              DiskBox[9, 0.04926188651606053], 
             DiskBox[10, 0.04926188651606053], 
             DiskBox[11, 0.04926188651606053], 
             DiskBox[12, 0.04926188651606053], 
             DiskBox[13, 0.04926188651606053], 
             DiskBox[14, 0.04926188651606053], 
             DiskBox[15, 0.04926188651606053], 
             DiskBox[16, 0.04926188651606053], 
             DiskBox[17, 0.04926188651606053], 
             DiskBox[18, 0.04926188651606053], 
             DiskBox[19, 0.04926188651606053], 
             DiskBox[20, 0.04926188651606053], 
             DiskBox[21, 0.04926188651606053], 
             DiskBox[22, 0.04926188651606053], 
             DiskBox[23, 0.04926188651606053], 
             DiskBox[24, 0.04926188651606053], 
             DiskBox[25, 0.04926188651606053], 
             DiskBox[26, 0.04926188651606053], 
             DiskBox[27, 0.04926188651606053], 
             DiskBox[28, 0.04926188651606053], 
             DiskBox[29, 0.04926188651606053], 
             DiskBox[30, 0.04926188651606053]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      PlotLabel->FormBox["IGLayoutDrL", TraditionalForm]], 
     Graphics3DBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutDrL3D, VertexCoordinates -> CompressedData["
1:eJwB4QIe/SFib1JlAgAAAB4AAAADAAAAM0Jl1EeoZD+CpDEiFqynP4donF9b
fsI/uu65qzCnx79sg1gYrPLEPxionG9+c6K/SWjzxZ9/vD9L6KnJ8IPCvyt1
4oYK/aQ/HYu1Bg1i2L8frPrWUSnTP9Vq9NOHtMC/KvCFIdGlxj9A3D9nR47F
P4c21rBTP88/z8JOL0U4ab8eYXPWpGnEvykYLRw5SNA/fCRAFJjKz7/QXLyL
q+nHP5lVEfe84M+/Nj0HOPNC0T9cMNeWMdG5P8uCWzlUnaa/8JwFKplPzT9f
5LBzklK2v6Ry/oKzvJ+/0EZu63GL4D/4Zo4OUMiWPwg71FGAXqe/PzIhnMyZ
tb9iPyWZrgvUv1Kx7RidQpY/JVasWKi03r/rmVLUSt2EPxY0t99NBaC/4FVx
LK9wwL9Yd9Gj5Mzfv/vipcSJSKs/CxpKHHzOt7/ynjZbhOGTP3IE6PKOf9I/
Mp4NMGVKqL8UnGjG7rvYv4nz5g7diMG/PNkjq+hNuj8IYJiPz/p8v+EpetSh
J80/mYGluX3ksD86ZxU7y+zSP6v678QC0Mg/pfktWSLF4z8atbhCyDKYvwiR
O1FZCZ2/Bvzhajay5L/0Aj5EofRZP9DI+Cc9k7m/VkFYs2zqyb9mawEQ2YWx
Pys5mUvagr+/ZKctoF2E0D/jMzfYSAzNP2J5z/qeMsq/rthsBl1Z0D+L4j3u
k/vMv3YAgSgJTsG/aUnt6gMRz79T1daoZ/HYv2mskPZaeKu/95grHKim0L9l
2N4O7qHNP2cE+89ZoaM/8991HcoPt78gcnqAhTfDP4q+YvQxoMQ/e6Ddkshs
1r8n6vIj49ukP/w/r8tFLK2/gASjHGCSzr9VtcOSBkWZP/eztWcBipW/YKrs
0MRO4j822+6wEAeuP/c5pFwTRMG/Pl6T6paHrD/r7vVdUnasP9YZtyyDDag/
uOqN9p6f3D+YCsKs1EawP8fNPG9KrMO/NdeAqQ==
            "]}]]}, 
        TagBox[GraphicsGroup3DBox[GraphicsComplex3DBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAB4AAAADAAAAM0Jl1EeoZD+CpDEiFqynP4donF9b
fsI/uu65qzCnx79sg1gYrPLEPxionG9+c6K/SWjzxZ9/vD9L6KnJ8IPCvyt1
4oYK/aQ/HYu1Bg1i2L8frPrWUSnTP9Vq9NOHtMC/KvCFIdGlxj9A3D9nR47F
P4c21rBTP88/z8JOL0U4ab8eYXPWpGnEvykYLRw5SNA/fCRAFJjKz7/QXLyL
q+nHP5lVEfe84M+/Nj0HOPNC0T9cMNeWMdG5P8uCWzlUnaa/8JwFKplPzT9f
5LBzklK2v6Ry/oKzvJ+/0EZu63GL4D/4Zo4OUMiWPwg71FGAXqe/PzIhnMyZ
tb9iPyWZrgvUv1Kx7RidQpY/JVasWKi03r/rmVLUSt2EPxY0t99NBaC/4FVx
LK9wwL9Yd9Gj5Mzfv/vipcSJSKs/CxpKHHzOt7/ynjZbhOGTP3IE6PKOf9I/
Mp4NMGVKqL8UnGjG7rvYv4nz5g7diMG/PNkjq+hNuj8IYJiPz/p8v+EpetSh
J80/mYGluX3ksD86ZxU7y+zSP6v678QC0Mg/pfktWSLF4z8atbhCyDKYvwiR
O1FZCZ2/Bvzhajay5L/0Aj5EofRZP9DI+Cc9k7m/VkFYs2zqyb9mawEQ2YWx
Pys5mUvagr+/ZKctoF2E0D/jMzfYSAzNP2J5z/qeMsq/rthsBl1Z0D+L4j3u
k/vMv3YAgSgJTsG/aUnt6gMRz79T1daoZ/HYv2mskPZaeKu/95grHKim0L9l
2N4O7qHNP2cE+89ZoaM/8991HcoPt78gcnqAhTfDP4q+YvQxoMQ/e6Ddkshs
1r8n6vIj49ukP/w/r8tFLK2/gASjHGCSzr9VtcOSBkWZP/eztWcBipW/YKrs
0MRO4j822+6wEAeuP/c5pFwTRMG/Pl6T6paHrD/r7vVdUnasP9YZtyyDDag/
uOqN9p6f3D+YCsKs1EawP8fNPG9KrMO/NdeAqQ==
           "], {
            {Hue[0.6, 0.2, 0.8], 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 2}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 3}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 5}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 6}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 9}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 14}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 16}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 17}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 25}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 29}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 4}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 7}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 12}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 20}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 24}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 26}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 27}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{3, 8}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{3, 11}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{8, 10}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{8, 21}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{9, 22}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 18}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 28}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 30}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 13}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 15}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 23}], 0.032701952072304585`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{12, 19}], 0.032701952072304585`]}}, 
            {Hue[0.6, 0.6, 1], SphereBox[1, 0.032701952072304585`], 
             SphereBox[2, 0.032701952072304585`], 
             SphereBox[3, 0.032701952072304585`], 
             SphereBox[4, 0.032701952072304585`], 
             SphereBox[5, 0.032701952072304585`], 
             SphereBox[6, 0.032701952072304585`], 
             SphereBox[7, 0.032701952072304585`], 
             SphereBox[8, 0.032701952072304585`], 
             SphereBox[9, 0.032701952072304585`], 
             SphereBox[10, 0.032701952072304585`], 
             SphereBox[11, 0.032701952072304585`], 
             SphereBox[12, 0.032701952072304585`], 
             SphereBox[13, 0.032701952072304585`], 
             SphereBox[14, 0.032701952072304585`], 
             SphereBox[15, 0.032701952072304585`], 
             SphereBox[16, 0.032701952072304585`], 
             SphereBox[17, 0.032701952072304585`], 
             SphereBox[18, 0.032701952072304585`], 
             SphereBox[19, 0.032701952072304585`], 
             SphereBox[20, 0.032701952072304585`], 
             SphereBox[21, 0.032701952072304585`], 
             SphereBox[22, 0.032701952072304585`], 
             SphereBox[23, 0.032701952072304585`], 
             SphereBox[24, 0.032701952072304585`], 
             SphereBox[25, 0.032701952072304585`], 
             SphereBox[26, 0.032701952072304585`], 
             SphereBox[27, 0.032701952072304585`], 
             SphereBox[28, 0.032701952072304585`], 
             SphereBox[29, 0.032701952072304585`], 
             SphereBox[30, 0.032701952072304585`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      Boxed->False,
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      Lighting->Dynamic[
        FEPrivate`If[
         FEPrivate`SameQ[
         FEPrivate`$OperatingSystem, "Windows"], {{"Directional", 
           GrayLevel[0.7], 
           ImageScaled[{1, 1, 0}]}, {"Point", 
           GrayLevel[0.9], 
           ImageScaled[{0, 0, 3.5}], {0, 0, 0.07}}}, {{"Directional", 
           GrayLevel[0.7], 
           ImageScaled[{1, 1, 0}]}, {"Point", 
           GrayLevel[0.9], 
           ImageScaled[{0, 0, 0}], {0, 0, 0.07}}}]],
      PlotLabel->FormBox["IGLayoutDrL3D", TraditionalForm]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutFruchtermanReingold, 
           VertexCoordinates -> CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAActS39YDs1T+ivPtWeHPJP7Hc6+to
5PU/UBwgQP/+zL8JugcBcfjmv7MXfO8CB8U/deHqHLn79z+ZMQ6Gg6/mv7Iq
myQE7+I/mZYKt7CJ4T+SDfQ8u0XgP79+xwmy2MG/EIReQARN+z9D+pNj1X7i
v0b6GTA84fa/TQlIXYvO07/6eMAzgcnbPzlsENpWCOw/IaAssH+vAMDtOK17
NSHmv4r0Dfe+k/S/DWfW12w25T/G3WUaU3QAQIB1WLv4B9m/UaTRi1IX9r/Q
Ys2anWjxPxMEKIOsEMs/D31dkiFTzL8/V6FNCXH7v1YqTkxfeuY/NW95y3x5
Pj+XGQ/nxQmIP7v+6YjqiXi/E1dxOan82D9Mpk3R7+UBwBTTQN3gg/G/wYuv
rSE5BECgEVIB1Uzgv4MPA72k8/w/Mo7UWGJTl78LYl6pkaf5v062lKa1FuO/
/gJHEFpK4D+PWauHv6X1Py4tJcWoMfq/q7mlcr8m7z+J9v3BKfP7PxHc2Tue
MdO/H2UIov/Lyz+VE+2HJ+niP/NA8QHlrfk/TdXfGpb0wT+wUFROJCH0P5PJ
0kGsEeS/kcttZiwrBMC6U78BckHkv7PkwNnzt+Y/p06+3Lii0T9T2KMl8NsD
wPTLbnC3o+2/k4cBeg==
            "]}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAActS39YDs1T+ivPtWeHPJP7Hc6+to
5PU/UBwgQP/+zL8JugcBcfjmv7MXfO8CB8U/deHqHLn79z+ZMQ6Gg6/mv7Iq
myQE7+I/mZYKt7CJ4T+SDfQ8u0XgP79+xwmy2MG/EIReQARN+z9D+pNj1X7i
v0b6GTA84fa/TQlIXYvO07/6eMAzgcnbPzlsENpWCOw/IaAssH+vAMDtOK17
NSHmv4r0Dfe+k/S/DWfW12w25T/G3WUaU3QAQIB1WLv4B9m/UaTRi1IX9r/Q
Ys2anWjxPxMEKIOsEMs/D31dkiFTzL8/V6FNCXH7v1YqTkxfeuY/NW95y3x5
Pj+XGQ/nxQmIP7v+6YjqiXi/E1dxOan82D9Mpk3R7+UBwBTTQN3gg/G/wYuv
rSE5BECgEVIB1Uzgv4MPA72k8/w/Mo7UWGJTl78LYl6pkaf5v062lKa1FuO/
/gJHEFpK4D+PWauHv6X1Py4tJcWoMfq/q7mlcr8m7z+J9v3BKfP7PxHc2Tue
MdO/H2UIov/Lyz+VE+2HJ+niP/NA8QHlrfk/TdXfGpb0wT+wUFROJCH0P5PJ
0kGsEeS/kcttZiwrBMC6U78BckHkv7PkwNnzt+Y/p06+3Lii0T9T2KMl8NsD
wPTLbnC3o+2/k4cBeg==
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{1, 14}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{1, 16}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{1, 17}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{1, 25}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{1, 29}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{2, 12}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{2, 20}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{2, 24}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{2, 26}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{2, 27}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{3, 11}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{8, 10}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{8, 21}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{9, 22}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{10, 18}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{10, 28}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{10, 30}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{11, 13}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{11, 15}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{11, 23}, 0.04332751355588964]}, 
             {Arrowheads[0.], ArrowBox[{12, 19}, 0.04332751355588964]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.04332751355588964], DiskBox[2, 0.04332751355588964],
              DiskBox[3, 0.04332751355588964], 
             DiskBox[4, 0.04332751355588964], DiskBox[5, 0.04332751355588964],
              DiskBox[6, 0.04332751355588964], 
             DiskBox[7, 0.04332751355588964], DiskBox[8, 0.04332751355588964],
              DiskBox[9, 0.04332751355588964], 
             DiskBox[10, 0.04332751355588964], 
             DiskBox[11, 0.04332751355588964], 
             DiskBox[12, 0.04332751355588964], 
             DiskBox[13, 0.04332751355588964], 
             DiskBox[14, 0.04332751355588964], 
             DiskBox[15, 0.04332751355588964], 
             DiskBox[16, 0.04332751355588964], 
             DiskBox[17, 0.04332751355588964], 
             DiskBox[18, 0.04332751355588964], 
             DiskBox[19, 0.04332751355588964], 
             DiskBox[20, 0.04332751355588964], 
             DiskBox[21, 0.04332751355588964], 
             DiskBox[22, 0.04332751355588964], 
             DiskBox[23, 0.04332751355588964], 
             DiskBox[24, 0.04332751355588964], 
             DiskBox[25, 0.04332751355588964], 
             DiskBox[26, 0.04332751355588964], 
             DiskBox[27, 0.04332751355588964], 
             DiskBox[28, 0.04332751355588964], 
             DiskBox[29, 0.04332751355588964], 
             DiskBox[30, 0.04332751355588964]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      PlotLabel->FormBox["IGLayoutFruchtermanReingold", TraditionalForm]], 
     Graphics3DBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutFruchtermanReingold3D, 
           VertexCoordinates -> CompressedData["
1:eJwB4QIe/SFib1JlAgAAAB4AAAADAAAAW/7fE3QH1j8cfHJh5M3NP4VsMr72
ca8/fjqqOL+K9T91tvQrdDnLv0XR8o81fDm/c632VzX55r+TlFiy4WTIPw+A
uBDrlIg/3o1iV1UY9z/UTtlfknTkv8zbcIy7lMI/Z69WvPZG0D+YSbcOSN3E
v9wpisc0g18/XGb2Gzah3T831iJiyu/iP1JFBrAG49U/I9rXy9b19j/NdIud
qLfgv4Tw9Zf3L9S/8AS8MzOH9r8+4tPVqozTv8I8dediynM/Vy/qAAH84T+V
T0wdAOLpP5dJYnhATcW//ZZZTu3h/78zEpuF6gPpv86zCebCE6S/4KO7OPMC
9b/IvvMqvL3lPzvOmDn1h6S/PxAGps5n/j8mrGL+Zufiv1JbeZaOFcK/8IMp
e8fb+b/f2fhKvsTtP+db3s9r8cY/XfuRaevlzD98tlVqhre6P/oJIAyz8t4/
N1tzlGCV+7+FkmnnDZDpP17Im7JQ8Me/XqJKzbS/M7+EmdS1ZofXP8GrQyX7
Q8w/v8EJwYSC4j8ClUzFbD3OPxnSURmmlts/jQNmJYMgA8DcaX4N/X/sv4mP
zre+5Lo/n3kyep5pAkBnhgRAwTXrv0FC1S6U0s2/TIXipqGr+z9f+1mx43yx
P6NsUqOX+40/1prKyHjV+78tU+ZRkJ/Wv9+7RsyXeL4/nN+bvgCf5j++Dk8A
jtHzPwPtv8qcmdS/jrYqpDDK978yLVaXawHxPz7JlZajCci/613hc6W8/D9Q
Og+MvEHRv2LU9Ma7rsM/nxIuqDglzD8bH4c1BfjjP147zLDDfKy/eRRIfZ/5
+D91fgJgn7zRv1A5PFyPR9o/kGnry7hU+j8RbrtTHBHAv/r5X4cSbta/zn6i
QMxzAsB5z70pr/7uv5NzTprCZtK/cTgZsVjb1T/D9SreZsDJP5ZWuLkfzNe/
A/Kt7BBFAcCpXtJTu/byv7VxxIb8T4o/TzqPbw==
            "]}]]}, 
        TagBox[GraphicsGroup3DBox[GraphicsComplex3DBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAB4AAAADAAAAW/7fE3QH1j8cfHJh5M3NP4VsMr72
ca8/fjqqOL+K9T91tvQrdDnLv0XR8o81fDm/c632VzX55r+TlFiy4WTIPw+A
uBDrlIg/3o1iV1UY9z/UTtlfknTkv8zbcIy7lMI/Z69WvPZG0D+YSbcOSN3E
v9wpisc0g18/XGb2Gzah3T831iJiyu/iP1JFBrAG49U/I9rXy9b19j/NdIud
qLfgv4Tw9Zf3L9S/8AS8MzOH9r8+4tPVqozTv8I8dediynM/Vy/qAAH84T+V
T0wdAOLpP5dJYnhATcW//ZZZTu3h/78zEpuF6gPpv86zCebCE6S/4KO7OPMC
9b/IvvMqvL3lPzvOmDn1h6S/PxAGps5n/j8mrGL+Zufiv1JbeZaOFcK/8IMp
e8fb+b/f2fhKvsTtP+db3s9r8cY/XfuRaevlzD98tlVqhre6P/oJIAyz8t4/
N1tzlGCV+7+FkmnnDZDpP17Im7JQ8Me/XqJKzbS/M7+EmdS1ZofXP8GrQyX7
Q8w/v8EJwYSC4j8ClUzFbD3OPxnSURmmlts/jQNmJYMgA8DcaX4N/X/sv4mP
zre+5Lo/n3kyep5pAkBnhgRAwTXrv0FC1S6U0s2/TIXipqGr+z9f+1mx43yx
P6NsUqOX+40/1prKyHjV+78tU+ZRkJ/Wv9+7RsyXeL4/nN+bvgCf5j++Dk8A
jtHzPwPtv8qcmdS/jrYqpDDK978yLVaXawHxPz7JlZajCci/613hc6W8/D9Q
Og+MvEHRv2LU9Ma7rsM/nxIuqDglzD8bH4c1BfjjP147zLDDfKy/eRRIfZ/5
+D91fgJgn7zRv1A5PFyPR9o/kGnry7hU+j8RbrtTHBHAv/r5X4cSbta/zn6i
QMxzAsB5z70pr/7uv5NzTprCZtK/cTgZsVjb1T/D9SreZsDJP5ZWuLkfzNe/
A/Kt7BBFAcCpXtJTu/byv7VxxIb8T4o/TzqPbw==
           "], {
            {Hue[0.6, 0.2, 0.8], 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 2}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 3}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 5}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 6}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 9}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 14}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 16}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 17}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 25}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 29}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 4}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 7}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 12}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 20}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 24}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 26}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 27}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{3, 8}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{3, 11}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{8, 10}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{8, 21}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{9, 22}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 18}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 28}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 30}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 13}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 15}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 23}], 0.08251942157776063]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{12, 19}], 0.08251942157776063]}}, 
            {Hue[0.6, 0.6, 1], SphereBox[1, 0.08251942157776063], 
             SphereBox[2, 0.08251942157776063], 
             SphereBox[3, 0.08251942157776063], 
             SphereBox[4, 0.08251942157776063], 
             SphereBox[5, 0.08251942157776063], 
             SphereBox[6, 0.08251942157776063], 
             SphereBox[7, 0.08251942157776063], 
             SphereBox[8, 0.08251942157776063], 
             SphereBox[9, 0.08251942157776063], 
             SphereBox[10, 0.08251942157776063], 
             SphereBox[11, 0.08251942157776063], 
             SphereBox[12, 0.08251942157776063], 
             SphereBox[13, 0.08251942157776063], 
             SphereBox[14, 0.08251942157776063], 
             SphereBox[15, 0.08251942157776063], 
             SphereBox[16, 0.08251942157776063], 
             SphereBox[17, 0.08251942157776063], 
             SphereBox[18, 0.08251942157776063], 
             SphereBox[19, 0.08251942157776063], 
             SphereBox[20, 0.08251942157776063], 
             SphereBox[21, 0.08251942157776063], 
             SphereBox[22, 0.08251942157776063], 
             SphereBox[23, 0.08251942157776063], 
             SphereBox[24, 0.08251942157776063], 
             SphereBox[25, 0.08251942157776063], 
             SphereBox[26, 0.08251942157776063], 
             SphereBox[27, 0.08251942157776063], 
             SphereBox[28, 0.08251942157776063], 
             SphereBox[29, 0.08251942157776063], 
             SphereBox[30, 0.08251942157776063]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      Boxed->False,
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      Lighting->Dynamic[
        FEPrivate`If[
         FEPrivate`SameQ[
         FEPrivate`$OperatingSystem, "Windows"], {{"Directional", 
           GrayLevel[0.7], 
           ImageScaled[{1, 1, 0}]}, {"Point", 
           GrayLevel[0.9], 
           ImageScaled[{0, 0, 3.5}], {0, 0, 0.07}}}, {{"Directional", 
           GrayLevel[0.7], 
           ImageScaled[{1, 1, 0}]}, {"Point", 
           GrayLevel[0.9], 
           ImageScaled[{0, 0, 0}], {0, 0, 0.07}}}]],
      PlotLabel->FormBox["IGLayoutFruchtermanReingold3D", TraditionalForm]], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> IGraphM`IGLayoutGEM,
            VertexCoordinates -> CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAw9uO4B8dcT/9/066yMKoP8KnYSVv
8eC/9hbEx7tz1L/qJ09DcYzrP87HN8qq++M/ite0b+IP67+OCO3h887wv3o5
K1pPu9M/QTp72Jbi4b/PXcP4ZP3ivybcGDZ+Sco/FhTdl4MI9b9oqsi0j0vm
v/YTE2ScFPk/FoygTzHUoj/8H/C1lzTsv01v+u0pr+U/ohtuwDv39j8isrhY
zLDpvyIm0yvEwd8/Iz8brKjj9j9dVxA2y+z6v13ecP3tutO/GVXX4yy8sL81
CkBg6639P2XedVsfMuE/zUpXLcZ8zb9uzcoOloTpP2JWyIuoGgBArJ7djpRk
4D/knkwA6yPRPzkC+YZAmrE/fgVL8GCy5D8j+cUD+Xb3Pw8etvKc/ve/pzg+
shp3A8B9t/cHoa3Zv+XWnQiNr/C//xnLB79v6r8GVE1aj78BQKZyUq6oKco/
qY9k78FL+L+3zhfPyp3wP2ZUgu6sr9c/XctnQFvjAEAVLY5u/K/fv0yrDGd1
y/C/RdVTyLyO07+08AjcpRXjPz2Jofvt7fm/GKfgwwLL67//ue3ZwhXzv6Km
ncqU4se/c8+T5IuOAED03fpeQRjwv1MTJpj+Gqu/7v5BJ1tK47+INueoncf9
P7XbnAmekvW/PKsQvA==
            "]}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAw9uO4B8dcT/9/066yMKoP8KnYSVv
8eC/9hbEx7tz1L/qJ09DcYzrP87HN8qq++M/ite0b+IP67+OCO3h887wv3o5
K1pPu9M/QTp72Jbi4b/PXcP4ZP3ivybcGDZ+Sco/FhTdl4MI9b9oqsi0j0vm
v/YTE2ScFPk/FoygTzHUoj/8H/C1lzTsv01v+u0pr+U/ohtuwDv39j8isrhY
zLDpvyIm0yvEwd8/Iz8brKjj9j9dVxA2y+z6v13ecP3tutO/GVXX4yy8sL81
CkBg6639P2XedVsfMuE/zUpXLcZ8zb9uzcoOloTpP2JWyIuoGgBArJ7djpRk
4D/knkwA6yPRPzkC+YZAmrE/fgVL8GCy5D8j+cUD+Xb3Pw8etvKc/ve/pzg+
shp3A8B9t/cHoa3Zv+XWnQiNr/C//xnLB79v6r8GVE1aj78BQKZyUq6oKco/
qY9k78FL+L+3zhfPyp3wP2ZUgu6sr9c/XctnQFvjAEAVLY5u/K/fv0yrDGd1
y/C/RdVTyLyO07+08AjcpRXjPz2Jofvt7fm/GKfgwwLL67//ue3ZwhXzv6Km
ncqU4se/c8+T5IuOAED03fpeQRjwv1MTJpj+Gqu/7v5BJ1tK47+INueoncf9
P7XbnAmekvW/PKsQvA==
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{1, 14}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{1, 16}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{1, 17}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{1, 25}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{1, 29}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{2, 12}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{2, 20}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{2, 24}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{2, 26}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{2, 27}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{3, 11}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{8, 10}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{8, 21}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{9, 22}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{10, 18}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{10, 28}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{10, 30}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{11, 13}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{11, 15}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{11, 23}, 0.041018220489112384`]}, 
             {Arrowheads[0.], ArrowBox[{12, 19}, 0.041018220489112384`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.041018220489112384`], 
             DiskBox[2, 0.041018220489112384`], 
             DiskBox[3, 0.041018220489112384`], 
             DiskBox[4, 0.041018220489112384`], 
             DiskBox[5, 0.041018220489112384`], 
             DiskBox[6, 0.041018220489112384`], 
             DiskBox[7, 0.041018220489112384`], 
             DiskBox[8, 0.041018220489112384`], 
             DiskBox[9, 0.041018220489112384`], 
             DiskBox[10, 0.041018220489112384`], 
             DiskBox[11, 0.041018220489112384`], 
             DiskBox[12, 0.041018220489112384`], 
             DiskBox[13, 0.041018220489112384`], 
             DiskBox[14, 0.041018220489112384`], 
             DiskBox[15, 0.041018220489112384`], 
             DiskBox[16, 0.041018220489112384`], 
             DiskBox[17, 0.041018220489112384`], 
             DiskBox[18, 0.041018220489112384`], 
             DiskBox[19, 0.041018220489112384`], 
             DiskBox[20, 0.041018220489112384`], 
             DiskBox[21, 0.041018220489112384`], 
             DiskBox[22, 0.041018220489112384`], 
             DiskBox[23, 0.041018220489112384`], 
             DiskBox[24, 0.041018220489112384`], 
             DiskBox[25, 0.041018220489112384`], 
             DiskBox[26, 0.041018220489112384`], 
             DiskBox[27, 0.041018220489112384`], 
             DiskBox[28, 0.041018220489112384`], 
             DiskBox[29, 0.041018220489112384`], 
             DiskBox[30, 0.041018220489112384`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      PlotLabel->FormBox["IGLayoutGEM", TraditionalForm]], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutGraphOpt, VertexCoordinates -> CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAFimdTFXj3j9olGA9rlnPPwwcADHN
SeW/DADfubiwyb/RdxvVEC3QP3XENu6SLsa/Zlao8ZWX8r+IOszP7fLUv5JJ
RBxxXco/OoUD6AGK1j9MkHDGeWjoPwGzKK2FqOc/6iBx2ZBm6L8K/vKNcjHl
v2R0/oVj+NS/kmuW6F6uzj+cfaSWkQPyP4Xwxfy/Ddw/HkWzI+Pu5r8c7/Lc
xuzDP8zOyJcmseY/U6gsqzJj6L/hNmTRnrHevwqLncZAGuA/F+ppDs1C4j9G
Kew6HCPxv3dS9eiBrek/y++WMbqH0T/snvUCZ2HuP19zogbsW/G/Vs4wYb7T
7D/gz6VJ5D+bvwF9Nv36YeI/UdyIucI1tr/e6dnu4vzfvx5oTxkNcdS/Sa6d
Wh4027/glQD3xnLuP4W956Miz/O/pf5wh2a2m79fELKef43lv9H4qFx4jeU/
gVeQlZpw9z9Kh+udQknhP4+UlSB9MvE/ifxvNsDC579Y//Vk6fvcv3HedVEM
cOW/8PihWRM14j9NyCcttaPgPyXZgkTCYNO/jAmDRD73xL8m5/dY3XDwv/fR
wSSGVeK/rNIRS08i779/3lk9/zm1P2ynCt7qB9U/GChXyT875z/Bj35rcxbx
v0VpxG1Fw9w/5ckMXA==
            "]}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAFimdTFXj3j9olGA9rlnPPwwcADHN
SeW/DADfubiwyb/RdxvVEC3QP3XENu6SLsa/Zlao8ZWX8r+IOszP7fLUv5JJ
RBxxXco/OoUD6AGK1j9MkHDGeWjoPwGzKK2FqOc/6iBx2ZBm6L8K/vKNcjHl
v2R0/oVj+NS/kmuW6F6uzj+cfaSWkQPyP4Xwxfy/Ddw/HkWzI+Pu5r8c7/Lc
xuzDP8zOyJcmseY/U6gsqzJj6L/hNmTRnrHevwqLncZAGuA/F+ppDs1C4j9G
Kew6HCPxv3dS9eiBrek/y++WMbqH0T/snvUCZ2HuP19zogbsW/G/Vs4wYb7T
7D/gz6VJ5D+bvwF9Nv36YeI/UdyIucI1tr/e6dnu4vzfvx5oTxkNcdS/Sa6d
Wh4027/glQD3xnLuP4W956Miz/O/pf5wh2a2m79fELKef43lv9H4qFx4jeU/
gVeQlZpw9z9Kh+udQknhP4+UlSB9MvE/ifxvNsDC579Y//Vk6fvcv3HedVEM
cOW/8PihWRM14j9NyCcttaPgPyXZgkTCYNO/jAmDRD73xL8m5/dY3XDwv/fR
wSSGVeK/rNIRS08i779/3lk9/zm1P2ynCt7qB9U/GChXyT875z/Bj35rcxbx
v0VpxG1Fw9w/5ckMXA==
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{1, 14}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{1, 16}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{1, 17}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{1, 25}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{1, 29}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{2, 12}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{2, 20}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{2, 24}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{2, 26}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{2, 27}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{3, 11}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{8, 10}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{8, 21}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{9, 22}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{10, 18}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{10, 28}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{10, 30}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{11, 13}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{11, 15}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{11, 23}, 0.028071540352270136`]}, 
             {Arrowheads[0.], ArrowBox[{12, 19}, 0.028071540352270136`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.028071540352270136`], 
             DiskBox[2, 0.028071540352270136`], 
             DiskBox[3, 0.028071540352270136`], 
             DiskBox[4, 0.028071540352270136`], 
             DiskBox[5, 0.028071540352270136`], 
             DiskBox[6, 0.028071540352270136`], 
             DiskBox[7, 0.028071540352270136`], 
             DiskBox[8, 0.028071540352270136`], 
             DiskBox[9, 0.028071540352270136`], 
             DiskBox[10, 0.028071540352270136`], 
             DiskBox[11, 0.028071540352270136`], 
             DiskBox[12, 0.028071540352270136`], 
             DiskBox[13, 0.028071540352270136`], 
             DiskBox[14, 0.028071540352270136`], 
             DiskBox[15, 0.028071540352270136`], 
             DiskBox[16, 0.028071540352270136`], 
             DiskBox[17, 0.028071540352270136`], 
             DiskBox[18, 0.028071540352270136`], 
             DiskBox[19, 0.028071540352270136`], 
             DiskBox[20, 0.028071540352270136`], 
             DiskBox[21, 0.028071540352270136`], 
             DiskBox[22, 0.028071540352270136`], 
             DiskBox[23, 0.028071540352270136`], 
             DiskBox[24, 0.028071540352270136`], 
             DiskBox[25, 0.028071540352270136`], 
             DiskBox[26, 0.028071540352270136`], 
             DiskBox[27, 0.028071540352270136`], 
             DiskBox[28, 0.028071540352270136`], 
             DiskBox[29, 0.028071540352270136`], 
             DiskBox[30, 0.028071540352270136`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      PlotLabel->FormBox["IGLayoutGraphOpt", TraditionalForm]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutKamadaKawai, VertexCoordinates -> CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA3Y23gjrUyT/1ivVYeRLHP4gjTGOl
VeY/o0zbVPEGr78t7huk+XbXvxywK3rtvsY/mikYBqmR8T8KepdLxmjLPxhS
oERwPt0/LCWsUEfl3z/DfgQSqKVrv2fBfUDqDbK/2pPFSna98T+kDcQmZfHL
v7mNHymviOa/xmZ39Bstyb/SEgONqBe5P0/k9KMwgNG/FvS/3bVf779totep
kVbjv4O/IA/LSOW/61Lk19lW4z+hN8Ckfp7pP8pyOYqC8uK/qogRZOdw7r+4
dgaJ9c7tPywfE4vbYrG/HcPMGv7D1T+oLyPl4NTxv5rn9pAuKuQ/DgFmbxxB
mT93cKDY/CPiP4avl54ATsg/83vTVUrS5T9tIBMSYxH3v81Sv0wi7+G/ehcZ
+PMp8D/bkGdrHeHvv0G982GLf/I/PXKPx5JGgr+UHzIWsrnxv9FybZci7bO/
gML48NJtmD95j9E4cn/nv6rD2OukXOS/iPFc5upw8T+vh96E2RvvPzWqg9oG
Atc/vHuxmjk52z9mn4CQTf7lPw9u5kfBGuI/xBr46Po73b/iiPGxqx3uP1Tn
BZdgSde/icrAEh+j7b+lSkyWEybxvyBjwi5ZYN0/BPLARJIk0D/AU82crzz0
v6JIyWSktO2/NIUHsA==
            "]}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA3Y23gjrUyT/1ivVYeRLHP4gjTGOl
VeY/o0zbVPEGr78t7huk+XbXvxywK3rtvsY/mikYBqmR8T8KepdLxmjLPxhS
oERwPt0/LCWsUEfl3z/DfgQSqKVrv2fBfUDqDbK/2pPFSna98T+kDcQmZfHL
v7mNHymviOa/xmZ39Bstyb/SEgONqBe5P0/k9KMwgNG/FvS/3bVf779totep
kVbjv4O/IA/LSOW/61Lk19lW4z+hN8Ckfp7pP8pyOYqC8uK/qogRZOdw7r+4
dgaJ9c7tPywfE4vbYrG/HcPMGv7D1T+oLyPl4NTxv5rn9pAuKuQ/DgFmbxxB
mT93cKDY/CPiP4avl54ATsg/83vTVUrS5T9tIBMSYxH3v81Sv0wi7+G/ehcZ
+PMp8D/bkGdrHeHvv0G982GLf/I/PXKPx5JGgr+UHzIWsrnxv9FybZci7bO/
gML48NJtmD95j9E4cn/nv6rD2OukXOS/iPFc5upw8T+vh96E2RvvPzWqg9oG
Atc/vHuxmjk52z9mn4CQTf7lPw9u5kfBGuI/xBr46Po73b/iiPGxqx3uP1Tn
BZdgSde/icrAEh+j7b+lSkyWEybxvyBjwi5ZYN0/BPLARJIk0D/AU82crzz0
v6JIyWSktO2/NIUHsA==
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{1, 14}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{1, 16}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{1, 17}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{1, 25}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{1, 29}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{2, 12}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{2, 20}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{2, 24}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{2, 26}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{2, 27}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{3, 11}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{8, 10}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{8, 21}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{9, 22}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{10, 18}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{10, 28}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{10, 30}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{11, 13}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{11, 15}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{11, 23}, 0.02728468050664702]}, 
             {Arrowheads[0.], ArrowBox[{12, 19}, 0.02728468050664702]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.02728468050664702], DiskBox[2, 0.02728468050664702],
              DiskBox[3, 0.02728468050664702], 
             DiskBox[4, 0.02728468050664702], DiskBox[5, 0.02728468050664702],
              DiskBox[6, 0.02728468050664702], 
             DiskBox[7, 0.02728468050664702], DiskBox[8, 0.02728468050664702],
              DiskBox[9, 0.02728468050664702], 
             DiskBox[10, 0.02728468050664702], 
             DiskBox[11, 0.02728468050664702], 
             DiskBox[12, 0.02728468050664702], 
             DiskBox[13, 0.02728468050664702], 
             DiskBox[14, 0.02728468050664702], 
             DiskBox[15, 0.02728468050664702], 
             DiskBox[16, 0.02728468050664702], 
             DiskBox[17, 0.02728468050664702], 
             DiskBox[18, 0.02728468050664702], 
             DiskBox[19, 0.02728468050664702], 
             DiskBox[20, 0.02728468050664702], 
             DiskBox[21, 0.02728468050664702], 
             DiskBox[22, 0.02728468050664702], 
             DiskBox[23, 0.02728468050664702], 
             DiskBox[24, 0.02728468050664702], 
             DiskBox[25, 0.02728468050664702], 
             DiskBox[26, 0.02728468050664702], 
             DiskBox[27, 0.02728468050664702], 
             DiskBox[28, 0.02728468050664702], 
             DiskBox[29, 0.02728468050664702], 
             DiskBox[30, 0.02728468050664702]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      PlotLabel->FormBox["IGLayoutKamadaKawai", TraditionalForm]], 
     Graphics3DBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutKamadaKawai3D, VertexCoordinates -> CompressedData["
1:eJwB4QIe/SFib1JlAgAAAB4AAAADAAAAuuVw1l53yT/dZcmT5lXEP9t5TKPk
1Ko/gX26lpGH5D+uBD4YdznGv1xqWGyiVEC/jpifJPT/1b9twt+AeDHBPzET
hmTmCa6/Saoul1N+5z/+ToA0OP3cv2uNJNnvgtk/jRuVjDABsT/v5XtgKMzF
v3DH4btsGNQ/hJbj116IoD9gyKD1GhHAP0b0Y/Aja94/5qu7HW5Y4T8s2p6+
RFzivyK11fdlB8+/0zkplLEo5r+UTFPKvDTPvxuAIDz5ubS/d3YejG+/0j/U
4znkUBfYPwwZW5Zfr+A/q+1Fzg188L8JDC4MOBjhv2Ub/aj6gsE/vsa4jiPv
47/dOnGwDaHhPwTqxKfEksq/XPRW1L3r6z+vrAI+xNfWvw9b+NE9zNm/r/pj
8clY5r//KmKUP0boPwGC+TbchuS/69D388a0uD+1KKx6qnDiP8w8SJ88Z8U/
HjMfWdNA6L+pplwTtyfvP1qxGY8CKHO/7+FuJAobvj8WoSQxc+aLvxuBB+uJ
kNW/sxdE/zNF3j/ydcMWgiDhP7MRgh7gecA/+DtXyDqh97/3bwjgEabcv0gM
1B4DjcY/nTzX+GlG8j/W4l+R5K/hvzT1xgAuVea/1JpOm6BR8T+42Bu8SnNm
v1v+MIUa67A/lbZt9xJA67+U03d4MWfYv/Ww/q6JweC/81oS1uQU1z+eYfuP
t2bjP2WM0FLiZe0/+CCdvkDP8L+uIP987wrlPza+egZggsu/CtwAnLR17j+Y
5Jd8BHipPzRlOBwkDdO/IwTi9bJcyj9LuJ3NdlzVP7h0uMEuLdm/QLsXeYqM
5j8jz0plRkLkv5kce8YU8Lo/EfO9JCvd7j99gJU+uUHDvx4DNZ7HTNc/q5zW
95uz8r8/haTUh2nuv8I0vs66VKe/Ogu2Ni4Z1z//zJtu8FvhP0syAe6fOsu/
s7QQKWZc8r+lqfYU6b7nv/dQonGZMuE/fMGFqg==
            "]}]]}, 
        TagBox[GraphicsGroup3DBox[GraphicsComplex3DBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAB4AAAADAAAAuuVw1l53yT/dZcmT5lXEP9t5TKPk
1Ko/gX26lpGH5D+uBD4YdznGv1xqWGyiVEC/jpifJPT/1b9twt+AeDHBPzET
hmTmCa6/Saoul1N+5z/+ToA0OP3cv2uNJNnvgtk/jRuVjDABsT/v5XtgKMzF
v3DH4btsGNQ/hJbj116IoD9gyKD1GhHAP0b0Y/Aja94/5qu7HW5Y4T8s2p6+
RFzivyK11fdlB8+/0zkplLEo5r+UTFPKvDTPvxuAIDz5ubS/d3YejG+/0j/U
4znkUBfYPwwZW5Zfr+A/q+1Fzg188L8JDC4MOBjhv2Ub/aj6gsE/vsa4jiPv
47/dOnGwDaHhPwTqxKfEksq/XPRW1L3r6z+vrAI+xNfWvw9b+NE9zNm/r/pj
8clY5r//KmKUP0boPwGC+TbchuS/69D388a0uD+1KKx6qnDiP8w8SJ88Z8U/
HjMfWdNA6L+pplwTtyfvP1qxGY8CKHO/7+FuJAobvj8WoSQxc+aLvxuBB+uJ
kNW/sxdE/zNF3j/ydcMWgiDhP7MRgh7gecA/+DtXyDqh97/3bwjgEabcv0gM
1B4DjcY/nTzX+GlG8j/W4l+R5K/hvzT1xgAuVea/1JpOm6BR8T+42Bu8SnNm
v1v+MIUa67A/lbZt9xJA67+U03d4MWfYv/Ww/q6JweC/81oS1uQU1z+eYfuP
t2bjP2WM0FLiZe0/+CCdvkDP8L+uIP987wrlPza+egZggsu/CtwAnLR17j+Y
5Jd8BHipPzRlOBwkDdO/IwTi9bJcyj9LuJ3NdlzVP7h0uMEuLdm/QLsXeYqM
5j8jz0plRkLkv5kce8YU8Lo/EfO9JCvd7j99gJU+uUHDvx4DNZ7HTNc/q5zW
95uz8r8/haTUh2nuv8I0vs66VKe/Ogu2Ni4Z1z//zJtu8FvhP0syAe6fOsu/
s7QQKWZc8r+lqfYU6b7nv/dQonGZMuE/fMGFqg==
           "], {
            {Hue[0.6, 0.2, 0.8], 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 2}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 3}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 5}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 6}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 9}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 14}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 16}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 17}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 25}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 29}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 4}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 7}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 12}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 20}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 24}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 26}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 27}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{3, 8}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{3, 11}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{8, 10}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{8, 21}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{9, 22}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 18}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 28}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 30}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 13}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 15}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 23}], 0.054887746776117075`]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{12, 19}], 0.054887746776117075`]}}, 
            {Hue[0.6, 0.6, 1], SphereBox[1, 0.054887746776117075`], 
             SphereBox[2, 0.054887746776117075`], 
             SphereBox[3, 0.054887746776117075`], 
             SphereBox[4, 0.054887746776117075`], 
             SphereBox[5, 0.054887746776117075`], 
             SphereBox[6, 0.054887746776117075`], 
             SphereBox[7, 0.054887746776117075`], 
             SphereBox[8, 0.054887746776117075`], 
             SphereBox[9, 0.054887746776117075`], 
             SphereBox[10, 0.054887746776117075`], 
             SphereBox[11, 0.054887746776117075`], 
             SphereBox[12, 0.054887746776117075`], 
             SphereBox[13, 0.054887746776117075`], 
             SphereBox[14, 0.054887746776117075`], 
             SphereBox[15, 0.054887746776117075`], 
             SphereBox[16, 0.054887746776117075`], 
             SphereBox[17, 0.054887746776117075`], 
             SphereBox[18, 0.054887746776117075`], 
             SphereBox[19, 0.054887746776117075`], 
             SphereBox[20, 0.054887746776117075`], 
             SphereBox[21, 0.054887746776117075`], 
             SphereBox[22, 0.054887746776117075`], 
             SphereBox[23, 0.054887746776117075`], 
             SphereBox[24, 0.054887746776117075`], 
             SphereBox[25, 0.054887746776117075`], 
             SphereBox[26, 0.054887746776117075`], 
             SphereBox[27, 0.054887746776117075`], 
             SphereBox[28, 0.054887746776117075`], 
             SphereBox[29, 0.054887746776117075`], 
             SphereBox[30, 0.054887746776117075`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      Boxed->False,
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      Lighting->Dynamic[
        FEPrivate`If[
         FEPrivate`SameQ[
         FEPrivate`$OperatingSystem, "Windows"], {{"Directional", 
           GrayLevel[0.7], 
           ImageScaled[{1, 1, 0}]}, {"Point", 
           GrayLevel[0.9], 
           ImageScaled[{0, 0, 3.5}], {0, 0, 0.07}}}, {{"Directional", 
           GrayLevel[0.7], 
           ImageScaled[{1, 1, 0}]}, {"Point", 
           GrayLevel[0.9], 
           ImageScaled[{0, 0, 0}], {0, 0, 0.07}}}]],
      PlotLabel->FormBox["IGLayoutKamadaKawai3D", TraditionalForm]], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutRandom, VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQR7bhYvtQfSs27ceQSiGU60VQPphrDYpMdA2mFn
5J8XQPqAzhx9EL+B51zEXZC6yS86T4LkCypYXoL4XhsU3oPkzR+8vrEfZEzo
8Vsg/iMV1tsg+Z6tr56AzJnNzPEKxF81a9dmEF3goQvS35CdsOo+iD8zafdl
oH4HOREJkHkOukIR74D8AxfT7oHUOfyPOQxyT8Nj7qUXwPaUFj8G0RaPL4HE
Gb76Vh0H8c0j394Euyvc8jCIzpAWug0Sd3M1uAwy51+e1BuQONeGb3fB6tdp
nADSDTNkXj8EifftiDsEEt/7oglsf+Z9hadgfwcGg81pa5QAhQfDEUXGIyD+
39KaCyD+LZsskLqGf9dYnoDEM6W3guxxWJccAqZXhLuAzHdQrvz0AiTfJyN6
CmTvcqtXoHBpUO87dQdk346nm8Hu65bIeQniOyVagdXzhmw6BBKPcJedBtJn
5tsMUt+w+xjrRZD8DekX+0Hh562w5sF+AOTKsX4=
            "]}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQR7bhYvtQfSs27ceQSiGU60VQPphrDYpMdA2mFn
5J8XQPqAzhx9EL+B51zEXZC6yS86T4LkCypYXoL4XhsU3oPkzR+8vrEfZEzo
8Vsg/iMV1tsg+Z6tr56AzJnNzPEKxF81a9dmEF3goQvS35CdsOo+iD8zafdl
oH4HOREJkHkOukIR74D8AxfT7oHUOfyPOQxyT8Nj7qUXwPaUFj8G0RaPL4HE
Gb76Vh0H8c0j394Euyvc8jCIzpAWug0Sd3M1uAwy51+e1BuQONeGb3fB6tdp
nADSDTNkXj8EifftiDsEEt/7oglsf+Z9hadgfwcGg81pa5QAhQfDEUXGIyD+
39KaCyD+LZsskLqGf9dYnoDEM6W3guxxWJccAqZXhLuAzHdQrvz0AiTfJyN6
CmTvcqtXoHBpUO87dQdk346nm8Hu65bIeQniOyVagdXzhmw6BBKPcJedBtJn
5tsMUt+w+xjrRZD8DekX+0Hh562w5sF+AOTKsX4=
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{1, 14}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{1, 16}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{1, 17}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{1, 25}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{1, 29}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{2, 12}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{2, 20}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{2, 24}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{2, 26}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{2, 27}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{3, 11}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{8, 10}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{8, 21}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{9, 22}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{10, 18}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{10, 28}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{10, 30}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{11, 13}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{11, 15}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{11, 23}, 0.021387499247543157`]}, 
             {Arrowheads[0.], ArrowBox[{12, 19}, 0.021387499247543157`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.021387499247543157`], 
             DiskBox[2, 0.021387499247543157`], 
             DiskBox[3, 0.021387499247543157`], 
             DiskBox[4, 0.021387499247543157`], 
             DiskBox[5, 0.021387499247543157`], 
             DiskBox[6, 0.021387499247543157`], 
             DiskBox[7, 0.021387499247543157`], 
             DiskBox[8, 0.021387499247543157`], 
             DiskBox[9, 0.021387499247543157`], 
             DiskBox[10, 0.021387499247543157`], 
             DiskBox[11, 0.021387499247543157`], 
             DiskBox[12, 0.021387499247543157`], 
             DiskBox[13, 0.021387499247543157`], 
             DiskBox[14, 0.021387499247543157`], 
             DiskBox[15, 0.021387499247543157`], 
             DiskBox[16, 0.021387499247543157`], 
             DiskBox[17, 0.021387499247543157`], 
             DiskBox[18, 0.021387499247543157`], 
             DiskBox[19, 0.021387499247543157`], 
             DiskBox[20, 0.021387499247543157`], 
             DiskBox[21, 0.021387499247543157`], 
             DiskBox[22, 0.021387499247543157`], 
             DiskBox[23, 0.021387499247543157`], 
             DiskBox[24, 0.021387499247543157`], 
             DiskBox[25, 0.021387499247543157`], 
             DiskBox[26, 0.021387499247543157`], 
             DiskBox[27, 0.021387499247543157`], 
             DiskBox[28, 0.021387499247543157`], 
             DiskBox[29, 0.021387499247543157`], 
             DiskBox[30, 0.021387499247543157`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      PlotLabel->FormBox["IGLayoutRandom", TraditionalForm]], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutReingoldTilford, 
           VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQA2IQjQ7SQGCZggOE92H/jJkgwAHnQ+TVoHyGAxB5Bri8
gTEIfLRHVa8CV38GBHwE4XwGsPrNcPUQeWGoPMcBiHl/7WHqIeYpodnPBle/
AMx/ux/VPTD9HAcugC34B5fPABvIfgDVfnGoeQJo9nEcQA0fmP18cHlU/zAc
SABreAW3H2K+LFw/xH5+NPsl0cJLFI0PCx+BAyZg64Th+lHdI3AAAG09imQ=

            "]}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQjQ7SQGCZggOE92H/jJkgwAHnQ+TVoHyGAxB5Bri8
gTEIfLRHVa8CV38GBHwE4XwGsPrNcPUQeWGoPMcBiHl/7WHqIeYpodnPBle/
AMx/ux/VPTD9HAcugC34B5fPABvIfgDVfnGoeQJo9nEcQA0fmP18cHlU/zAc
SABreAW3H2K+LFw/xH5+NPsl0cJLFI0PCx+BAyZg64Th+lHdI3AAAG09imQ=

           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{1, 14}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{1, 16}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{1, 17}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{1, 25}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{1, 29}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{2, 12}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{2, 20}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{2, 24}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{2, 26}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{2, 27}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{3, 11}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{8, 10}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{8, 21}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{9, 22}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{10, 18}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{10, 28}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{10, 30}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{11, 13}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{11, 15}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{11, 23}, 0.0832220367278798]}, 
             {Arrowheads[0.], ArrowBox[{12, 19}, 0.0832220367278798]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.0832220367278798], DiskBox[2, 0.0832220367278798], 
             DiskBox[3, 0.0832220367278798], DiskBox[4, 0.0832220367278798], 
             DiskBox[5, 0.0832220367278798], DiskBox[6, 0.0832220367278798], 
             DiskBox[7, 0.0832220367278798], DiskBox[8, 0.0832220367278798], 
             DiskBox[9, 0.0832220367278798], DiskBox[10, 0.0832220367278798], 
             DiskBox[11, 0.0832220367278798], DiskBox[12, 0.0832220367278798],
              DiskBox[13, 0.0832220367278798], 
             DiskBox[14, 0.0832220367278798], DiskBox[15, 0.0832220367278798],
              DiskBox[16, 0.0832220367278798], 
             DiskBox[17, 0.0832220367278798], DiskBox[18, 0.0832220367278798],
              DiskBox[19, 0.0832220367278798], 
             DiskBox[20, 0.0832220367278798], DiskBox[21, 0.0832220367278798],
              DiskBox[22, 0.0832220367278798], 
             DiskBox[23, 0.0832220367278798], DiskBox[24, 0.0832220367278798],
              DiskBox[25, 0.0832220367278798], 
             DiskBox[26, 0.0832220367278798], DiskBox[27, 0.0832220367278798],
              DiskBox[28, 0.0832220367278798], 
             DiskBox[29, 0.0832220367278798], 
             DiskBox[30, 0.0832220367278798]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      PlotLabel->FormBox["IGLayoutReingoldTilford", TraditionalForm]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutReingoldTilfordCircular, 
           VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQA2IQjQ7k+w8LfTx3217ko/Bn90tv7JWsj+yz/PR+v6fK
tKA9a9faQ5U5wNQflJTO+Z71br/nHD8ljgeX9//5vvld0YYX+7NnF3+ZGf1k
v/WZpewZp/7ai4hJr7WJe27fI/Xb/P763/v//7y9NIf7g/2LBRN1oqTu73+g
vedc9/fX++UM81x/aTEduKCZUGsd+9/+heeVjPnRf/dfO69v/bvs5X6tJrmF
O8u/27/QPHDZ9OBX+/3ufGoqf9gPmJ2SPclpvnu/Z8DX/ysEDu5vCdvXe2/b
+/155vP7trOwHXhwOznHRvLz/pftKvsX5J2z95u4s15K9P3+iuDYnZ15j+yv
iIcxTNN4tb+o5AZ38tW/+7sWpwQ1+/M4LHh4zeL0TEaHPPkLcS8CGBwg4fMa
Gj5/7PM+yBhuXcx2YE5c7vLvd95D/fMe6p/f+x/Yczl/ZmI8cG7Bp+uf3zIc
+MP4oW1N7GH7bVqnj7a9+G9/77zTpTtbX9nz9X67FT//4X5H5Z5D9qcf7Ve/
PjP/8rR/9v+UtpUcf/V5v93bmy3nuX/a1zm+2OhryXHAtHBq8KUXLA4NDFVG
f3ze27+McFpzc86p/Xavqx3n6PMdELafl//L9qs9AJtY9uM=
            "]}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQjQ7k+w8LfTx3217ko/Bn90tv7JWsj+yz/PR+v6fK
tKA9a9faQ5U5wNQflJTO+Z71br/nHD8ljgeX9//5vvld0YYX+7NnF3+ZGf1k
v/WZpewZp/7ai4hJr7WJe27fI/Xb/P763/v//7y9NIf7g/2LBRN1oqTu73+g
vedc9/fX++UM81x/aTEduKCZUGsd+9/+heeVjPnRf/dfO69v/bvs5X6tJrmF
O8u/27/QPHDZ9OBX+/3ufGoqf9gPmJ2SPclpvnu/Z8DX/ysEDu5vCdvXe2/b
+/155vP7trOwHXhwOznHRvLz/pftKvsX5J2z95u4s15K9P3+iuDYnZ15j+yv
iIcxTNN4tb+o5AZ38tW/+7sWpwQ1+/M4LHh4zeL0TEaHPPkLcS8CGBwg4fMa
Gj5/7PM+yBhuXcx2YE5c7vLvd95D/fMe6p/f+x/Yczl/ZmI8cG7Bp+uf3zIc
+MP4oW1N7GH7bVqnj7a9+G9/77zTpTtbX9nz9X67FT//4X5H5Z5D9qcf7Ve/
PjP/8rR/9v+UtpUcf/V5v93bmy3nuX/a1zm+2OhryXHAtHBq8KUXLA4NDFVG
f3ze27+McFpzc86p/Xavqx3n6PMdELafl//L9qs9AJtY9uM=
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{1, 9}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{1, 14}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{1, 16}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{1, 17}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{1, 25}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{1, 29}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{2, 7}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{2, 12}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{2, 20}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{2, 24}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{2, 26}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{2, 27}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{3, 8}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{3, 11}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{8, 10}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{8, 21}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{9, 22}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{10, 18}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{10, 28}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{10, 30}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{11, 13}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{11, 15}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{11, 23}, 0.048339590181839795`]}, 
             {Arrowheads[0.], ArrowBox[{12, 19}, 0.048339590181839795`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.048339590181839795`], 
             DiskBox[2, 0.048339590181839795`], 
             DiskBox[3, 0.048339590181839795`], 
             DiskBox[4, 0.048339590181839795`], 
             DiskBox[5, 0.048339590181839795`], 
             DiskBox[6, 0.048339590181839795`], 
             DiskBox[7, 0.048339590181839795`], 
             DiskBox[8, 0.048339590181839795`], 
             DiskBox[9, 0.048339590181839795`], 
             DiskBox[10, 0.048339590181839795`], 
             DiskBox[11, 0.048339590181839795`], 
             DiskBox[12, 0.048339590181839795`], 
             DiskBox[13, 0.048339590181839795`], 
             DiskBox[14, 0.048339590181839795`], 
             DiskBox[15, 0.048339590181839795`], 
             DiskBox[16, 0.048339590181839795`], 
             DiskBox[17, 0.048339590181839795`], 
             DiskBox[18, 0.048339590181839795`], 
             DiskBox[19, 0.048339590181839795`], 
             DiskBox[20, 0.048339590181839795`], 
             DiskBox[21, 0.048339590181839795`], 
             DiskBox[22, 0.048339590181839795`], 
             DiskBox[23, 0.048339590181839795`], 
             DiskBox[24, 0.048339590181839795`], 
             DiskBox[25, 0.048339590181839795`], 
             DiskBox[26, 0.048339590181839795`], 
             DiskBox[27, 0.048339590181839795`], 
             DiskBox[28, 0.048339590181839795`], 
             DiskBox[29, 0.048339590181839795`], 
             DiskBox[30, 0.048339590181839795`]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      PlotLabel->FormBox["IGLayoutReingoldTilfordCircular", TraditionalForm]], 
     Graphics3DBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}, {
          Null, SparseArray[
           Automatic, {30, 30}, 0, {
            1, {{0, 10, 17, 19, 19, 19, 19, 19, 21, 22, 25, 28, 29, 29, 29, 
              29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 
              29}, {{2}, {3}, {5}, {6}, {9}, {14}, {16}, {17}, {25}, {29}, {
              4}, {7}, {12}, {20}, {24}, {26}, {27}, {8}, {11}, {10}, {21}, {
              22}, {18}, {28}, {30}, {13}, {15}, {23}, {19}}}, {1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1}}]}, {
          GraphLayout -> {"Dimension" -> 2}, PlotLabel -> 
           IGraphM`IGLayoutSphere, VertexCoordinates -> CompressedData["
1:eJxtkmtIk3EUxufENCVzZC4vJLNQUiv0NW9lBxLUqKjsi5ehOY0UbZXMqS28
pPipiaGYWRiui4bXSgNtdtKhJbrpnJpthnM6d3Gbs0BFTNt6/RJ04Hx5+F/O
+T0Pg3U7/gaVQqEctrStpe2ZroTv68YzlH/KjP5CO6IvvhvZ/oK7p/qmgd85
K3MYMaIo7mJdB6HE7N6TueKGWvBM62mi1S4jfX16PF0lQ4VckdImUmIzrZbn
kabDqrHTerpWCp4H5V6TAYsYNpB7+UigBp1e7kQ+C9XAOQa1attmBEVWeX0R
uR/Lu6IzliCilXPAzJDDFYsaMqBC94TJ/PguMejn9j1KZerBOk0UX4mOVY7i
VfZ3LNW1BCc/18GEVe6cxcSbh0qDYpYxtKyme8vpGxizytUNMTO45fwz+pWP
Ea/tkTBSi6Ro//e4DI8HJ85oaubxTf4LW32dDqMTTJYbEpSm2LUX8zpBx7WR
uHBWsMjDuvAQ2ixWG7p91OCw3X+JGNVgkhUDrxfH/BnsipwV8J3acREMfkEr
hZ6mRgyfG3dpLDFAZgvPrYz6A5pJHbaZXsQ6TQHy9LWzjyUGYJHvgLTy/dOg
klGUGR5G5HWZ4B75L5ifP0hi39LiZ2OeoDRwAWLJOYFoymapM00opSZXbkQ+
wb3kXsAPL+jgmNXI9ROwXFUL+IvkAMxiU7Br6wesr9YqB7gGnCS5QSyXnzC1
qYSJdm3B/H017nKGOO8serlUB/pC1oq3+B1eJX2BtdX97keJeVCmRbW7/1bC
ro+QXs+RuLGEONh2PSXgqxpCSN/h2GZAmOMdFQ5XKJZEscOwmxPgi4QbhTkT
mHH+xIWWt3L0IHMFtJChKPqnKfAV+oVqnfuxkswhUP5bZvgDS2JxXw==
            "]}]]}, 
        TagBox[GraphicsGroup3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxtkmtIk3EUxufENCVzZC4vJLNQUiv0NW9lBxLUqKjsi5ehOY0UbZXMqS28
pPipiaGYWRiui4bXSgNtdtKhJbrpnJpthnM6d3Gbs0BFTNt6/RJ04Hx5+F/O
+T0Pg3U7/gaVQqEctrStpe2ZroTv68YzlH/KjP5CO6IvvhvZ/oK7p/qmgd85
K3MYMaIo7mJdB6HE7N6TueKGWvBM62mi1S4jfX16PF0lQ4VckdImUmIzrZbn
kabDqrHTerpWCp4H5V6TAYsYNpB7+UigBp1e7kQ+C9XAOQa1attmBEVWeX0R
uR/Lu6IzliCilXPAzJDDFYsaMqBC94TJ/PguMejn9j1KZerBOk0UX4mOVY7i
VfZ3LNW1BCc/18GEVe6cxcSbh0qDYpYxtKyme8vpGxizytUNMTO45fwz+pWP
Ea/tkTBSi6Ro//e4DI8HJ85oaubxTf4LW32dDqMTTJYbEpSm2LUX8zpBx7WR
uHBWsMjDuvAQ2ixWG7p91OCw3X+JGNVgkhUDrxfH/BnsipwV8J3acREMfkEr
hZ6mRgyfG3dpLDFAZgvPrYz6A5pJHbaZXsQ6TQHy9LWzjyUGYJHvgLTy/dOg
klGUGR5G5HWZ4B75L5ifP0hi39LiZ2OeoDRwAWLJOYFoymapM00opSZXbkQ+
wb3kXsAPL+jgmNXI9ROwXFUL+IvkAMxiU7Br6wesr9YqB7gGnCS5QSyXnzC1
qYSJdm3B/H017nKGOO8serlUB/pC1oq3+B1eJX2BtdX97keJeVCmRbW7/1bC
ro+QXs+RuLGEONh2PSXgqxpCSN/h2GZAmOMdFQ5XKJZEscOwmxPgi4QbhTkT
mHH+xIWWt3L0IHMFtJChKPqnKfAV+oVqnfuxkswhUP5bZvgDS2JxXw==
           "], {
            {Hue[0.6, 0.2, 0.8], 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 2}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 3}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 5}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 6}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 9}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 14}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 16}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 17}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 25}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{1, 29}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 4}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 7}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 12}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 20}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 24}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 26}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{2, 27}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{3, 8}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{3, 11}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{8, 10}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{8, 21}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{9, 22}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 18}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 28}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{10, 30}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 13}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 15}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{11, 23}], 0.04522292993630572]}, 
             {Arrowheads[0.], 
              Arrow3DBox[TubeBox[{12, 19}], 0.04522292993630572]}}, 
            {Hue[0.6, 0.6, 1], SphereBox[1, 0.04522292993630572], 
             SphereBox[2, 0.04522292993630572], 
             SphereBox[3, 0.04522292993630572], 
             SphereBox[4, 0.04522292993630572], 
             SphereBox[5, 0.04522292993630572], 
             SphereBox[6, 0.04522292993630572], 
             SphereBox[7, 0.04522292993630572], 
             SphereBox[8, 0.04522292993630572], 
             SphereBox[9, 0.04522292993630572], 
             SphereBox[10, 0.04522292993630572], 
             SphereBox[11, 0.04522292993630572], 
             SphereBox[12, 0.04522292993630572], 
             SphereBox[13, 0.04522292993630572], 
             SphereBox[14, 0.04522292993630572], 
             SphereBox[15, 0.04522292993630572], 
             SphereBox[16, 0.04522292993630572], 
             SphereBox[17, 0.04522292993630572], 
             SphereBox[18, 0.04522292993630572], 
             SphereBox[19, 0.04522292993630572], 
             SphereBox[20, 0.04522292993630572], 
             SphereBox[21, 0.04522292993630572], 
             SphereBox[22, 0.04522292993630572], 
             SphereBox[23, 0.04522292993630572], 
             SphereBox[24, 0.04522292993630572], 
             SphereBox[25, 0.04522292993630572], 
             SphereBox[26, 0.04522292993630572], 
             SphereBox[27, 0.04522292993630572], 
             SphereBox[28, 0.04522292993630572], 
             SphereBox[29, 0.04522292993630572], 
             SphereBox[30, 0.04522292993630572]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      Boxed->False,
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      Lighting->Dynamic[
        FEPrivate`If[
         FEPrivate`SameQ[
         FEPrivate`$OperatingSystem, "Windows"], {{"Directional", 
           GrayLevel[0.7], 
           ImageScaled[{1, 1, 0}]}, {"Point", 
           GrayLevel[0.9], 
           ImageScaled[{0, 0, 3.5}], {0, 0, 0.07}}}, {{"Directional", 
           GrayLevel[0.7], 
           ImageScaled[{1, 1, 0}]}, {"Point", 
           GrayLevel[0.9], 
           ImageScaled[{0, 0, 0}], {0, 0, 0.07}}}]],
      PlotLabel->FormBox[
       "IGLayoutSphere", TraditionalForm]], "\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Community detection", "Section"],

Cell["The following functions are available:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IGCommunities*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["IGraphM`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["IGraphM`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["IGCommunitiesEdgeBetweenness",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1263666170836-7100256", {
            "IGCommunitiesEdgeBetweenness", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGCommunitiesLabelPropagation",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1263666170836-7100256", {
            "IGCommunitiesLabelPropagation", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGCommunitiesOptimalModularity",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1263666170836-7100256", {
            "IGCommunitiesOptimalModularity", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCommunitiesGreedy",
          BaseStyle->"InformationLink",
          ButtonData:>{
           "Info1263666170836-7100256", {"IGCommunitiesGreedy", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGCommunitiesLeadingEigenvector",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1263666170836-7100256", {
            "IGCommunitiesLeadingEigenvector", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGCommunitiesSpinGlass",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1263666170836-7100256", {
            "IGCommunitiesSpinGlass", "IGraphM`"}},
          ButtonNote->"IGraphM`"]},
        {
         ButtonBox["IGCommunitiesInfoMAP",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1263666170836-7100256", {"IGCommunitiesInfoMAP", "IGraphM`"}},
          
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGCommunitiesMultilevel",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1263666170836-7100256", {
            "IGCommunitiesMultilevel", "IGraphM`"}},
          ButtonNote->"IGraphM`"], 
         ButtonBox["IGCommunitiesWalktrap",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info1263666170836-7100256", {"IGCommunitiesWalktrap", "IGraphM`"}},
          ButtonNote->"IGraphM`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Concepts", "Subsection"],

Cell[TextData[{
 StyleBox["Modularity",
  FontWeight->"Bold"],
 " is defined for a given partitioning of a graph\[CloseCurlyQuote]s vertices \
into ",
 StyleBox["communities",
  FontSlant->"Italic"],
 ". It is defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "m"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"i", ",", "j"}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", 
          RowBox[{"i", "\[InvisibleComma]", "j"}]], "-", 
         FractionBox[
          RowBox[{
           SubscriptBox["k", "i"], 
           SubscriptBox["k", "j"]}], 
          RowBox[{"2", "m"}]]}], ")"}], 
       SubscriptBox["\[Delta]", 
        RowBox[{
         SubscriptBox["c", "i"], 
         SubscriptBox["c", "j"]}]]}]}]}]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " is the number of edges, ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 " is the adjacency matrix, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "i"], TraditionalForm]]],
 " is the degree of node ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "i"], TraditionalForm]]],
 " is the community that node ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " belongs to. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", 
    RowBox[{"i", "\[InvisibleComma]", "j"}]], TraditionalForm]]],
 " is the Kronecker ",
 Cell[BoxData[
  FormBox["\[Delta]", TraditionalForm]]],
 " symbol. For weighted graphs, ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]]],
 " is the weighted adjacency matrix, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "i"], TraditionalForm]]],
 " are the sum of weights of edges incident on node ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " is the sum of all weights."
}], "Text"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGModularity", "[", 
    RowBox[{"graph", ",", "communities"}], "]"}], TraditionalForm]]],
 " is equivalent to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"GraphAssortativity", "[", 
    RowBox[{"graph", ",", "communities", ",", 
     RowBox[{"\"\<Normalized\>\"", "\[Rule]", "False"}]}], "]"}], 
   TraditionalForm]]]
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Subsection"],

Cell[CellGroupData[{

Cell["IGCommunitiesEdgeBetweenness", "Subsubsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGCommunitiesEdgeBetweenness", "[", "]"}], TraditionalForm]]],
 " implements the Girvan\[Dash]Newman algorithm."
}], "Text"],

Cell["It works on weighted graphs.", "Text"],

Cell["\<\
Reference:  M. Girvan and M. E. J. Newman: Community structure in social and \
biological networks, Proc. Nat. Acad. Sci. USA 99, 7821-7826 (2002).\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesGreedy", "Subsubsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGCommunitiesGreedy", "[", "]"}], TraditionalForm]]],
 " implements greedy optimization of modularity."
}], "Text"],

Cell["It works on weighted graphs.", "Text"],

Cell["\<\
Reference: A Clauset, MEJ Newman, C Moore: Finding community structure in \
very large networks, http://www.arxiv.org/abs/cond-mat/0408187\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesLabelPropagation", "Subsubsection"],

Cell["It supports weighted graphs.", "Text"],

Cell["\<\
Reference:  Raghavan, U.N. and Albert, R. and Kumara, S.: Near linear time \
algorithm to detect community structures in large-scale networks. Phys Rev E \
76, 036106. (2007).\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesOptimalModularity", "Subsubsection"],

Cell["It supports weighted graphs.", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesLeadingEigenvector", "Subsubsection"],

Cell["It supports weighted graphs.", "Text"],

Cell["\<\
Reference: MEJ Newman: Finding community structure using the eigenvectors of \
matrices, Phys Rev E 74:036104 (2006).\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesSpinGlass", "Subsubsection"],

Cell["It supports weighted graphs.", "Text"],

Cell[TextData[{
 "Option values for ",
 Cell[BoxData[
  FormBox["\"\<Method\>\"", TraditionalForm]]],
 " are: ",
 Cell[BoxData[
  FormBox["\"\<Original\>\"", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\"\<Negative\>\"", TraditionalForm]]]
}], "Text"],

Cell[TextData[{
 "Option values for ",
 Cell[BoxData[
  FormBox["\"\<UpdateRule\>\"", TraditionalForm]]],
 " are: ",
 Cell[BoxData[
  FormBox["\"\<Simple\>\"", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["\"\<Configuration\>\"", TraditionalForm]]]
}], "Text"],

Cell["References:", "Text"],

Cell[TextData[{
 "For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Method", "\[Rule]", "\"\<Original\>"}], TraditionalForm]]],
 ", see Joerg Reichardt and Stefan Bornholdt: Statistical Mechanics of \
Community Detection, http://arxiv.org/abs/cond-mat/0603718 "
}], "Text"],

Cell[TextData[{
 "For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Method", "\[Rule]", "\"\<Negative\>\""}], TraditionalForm]]],
 ", see ",
 "V.A. Traag and Jeroen Bruggeman: Community detection in networks with \
positive and negative links, http://arxiv.org/abs/0811.2329 "
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesInfoMAP", "Subsubsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGCommunitiesInfoMAP", "[", "]"}], TraditionalForm]]],
 " implements the InfoMAP algorithm."
}], "Text"],

Cell["It supports both edge weights and vertex weights.", "Text"],

Cell["The default number of trials is 10.", "Text"],

Cell["\<\
References:
M. Rosvall and C. T. Bergstrom, Maps of information flow reveal community \
structure in complex networks, PNAS 105, 1118 (2008) 
M. Rosvall, D. Axelsson, and C. T. Bergstrom, The map equation, Eur. Phys. J. \
Special Topics 178, 13 (2009)\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesMultilevel", "Subsubsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGCommunitiesMultilevel", "[", "]"}], TraditionalForm]]],
 " implements the Louvain community detection method."
}], "Text"],

Cell["It supports weighted graphs.", "Text"],

Cell["\<\
Reference: VD Blondel, J-L Guillaume, R Lambiotte and E Lefebvre: Fast \
unfolding of community hierarchies in large networks, J Stat Mech P10008 \
(2008)\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesWalktrap", "Subsubsection"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"IGCommunitiesWalktrap", "[", "]"}], TraditionalForm]]],
 " finds communities using short random walks, exploiting the fact that \
random walks tend to stay within the same cluster."
}], "Text"],

Cell["Is supports weighted graphs.", "Text"],

Cell["The default number of steps is 4.", "Text"],

Cell["\<\
Reference: Pascal Pons, Matthieu Latapy: Computing communities in large \
networks using random walks, http://arxiv.org/abs/physics/0512106\
\>", "Text"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<LesMiserables\>\""}], "}"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Myriel", "Napoleon", "Mlle Baptistine", "Mme. Magloire", 
       "Countess De Lo", "Geborand", "Champtercier", "Cravatte", "Count", 
       "Old Man", "Labarre", "Valjean", "Marguerite", "Mme. De R", "Isabeau", 
       "Gervais", "Tholomyes", "Listolier", "Fameuil", "Blacheville", 
       "Favourite", "Dahlia", "Zephine", "Fantine", "Mme. Thenardier", 
       "Thenardier", "Cosette", "Javert", "Fauchelevent", "Bamatabois", 
       "Perpetue", "Simplice", "Scaufflaire", "Woman1", "Judge", 
       "Champmathieu", "Brevet", "Chenildieu", "Cochepaille", "Pontmercy", 
       "Boulatruelle", "Eponine", "Anzelma", "Woman2", "Mother Innocent", 
       "Gribier", "Jondrette", "Mme. Burgon", "Gavroche", "Gillenormand", 
       "Magnon", "Mlle Gillenormand", "Mme. Pontmercy", "Mlle Vaubois", 
       "Lt. Gillenormand", "Marius", "Baroness T", "Mabeuf", "Enjolras", 
       "Combeferre", "Prouvaire", "Feuilly", "Courfeyrac", "Bahorel", 
       "Bossuet", "Joly", "Grantaire", "Mother Plutarch", "Gueulemer", 
       "Babet", "Claquesous", "Montparnasse", "Toussaint", "Child1", "Child2",
        "Brujon", "Mme. Hucheloup"}, {Null, CompressedData["
1:eJwVxcl2mzAUAFATu/NLU2YhZOKEycVOGxFSKwiQBGVwApt+Qn6g/7/pabu4
5968/v71erFarf788/8Lba1ttM36jfZWe6e91z5oHzX4BBtYg3YJn+EKvoCh
m7ppWLplWKat24Zt2pajO4ZjOpZju7pruKZrubbrIB0ZyEQWspGDXHSJwEMe
YA8jDL7ng6/7mABBBBOP+FvYkgAFJIBrtLvewQ7tyA3cwi0JIQwiiMIoiMM4
iiEOkjCJkjiBJEjDNErjNEkhDfb4K868DB+yAz54Rzj6R3K3vYNv2/vv9J5i
Sijkfg4P+YNX5IVfwGPxuP9RnIpTfvJZwXK2ZyfmM2A6wyxj9Cl/YiUrs5Jy
xiknvORQ8YpVtCprWvO6amjDm7qpmrJhggkuKkFFKTLRiFpWkkohS8llI2vJ
FFNCUSUVV42qVaVKBa1sVUtb0fK2aeu2asuWdarjXdWJru1oJ7umq3+WPe6h
93rS0z4b8NAPMHgDGeiQjXgcxn6E0RvJmI18ItMw9dM4wUSnbMJn/0zO8Exf
6MvzPMz9jGc6Z/M4T4ta2qVb5CIWuvC/RV5Wsw==
       "]}, {
      EdgeWeight -> {1, 8, 10, 6, 1, 1, 1, 1, 2, 1, 1, 3, 3, 5, 1, 1, 1, 1, 4,
         4, 4, 4, 4, 4, 3, 3, 3, 4, 3, 3, 3, 3, 5, 3, 3, 3, 3, 4, 4, 3, 3, 3, 
        3, 4, 4, 4, 2, 9, 2, 7, 13, 1, 12, 4, 31, 1, 1, 17, 5, 5, 1, 1, 8, 1, 
        1, 1, 2, 1, 2, 3, 2, 1, 1, 2, 1, 3, 2, 3, 3, 2, 2, 2, 2, 1, 2, 2, 2, 
        2, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 3, 2, 2, 1, 3, 1, 1, 3, 1, 2, 1, 2, 
        1, 1, 1, 3, 2, 1, 1, 9, 2, 2, 1, 1, 1, 2, 1, 1, 6, 12, 1, 1, 21, 19, 
        1, 2, 5, 4, 1, 1, 1, 1, 1, 7, 7, 6, 1, 4, 15, 5, 6, 2, 1, 4, 2, 2, 6, 
        2, 5, 1, 1, 9, 17, 13, 7, 2, 1, 6, 3, 5, 5, 6, 2, 4, 3, 2, 1, 5, 12, 
        5, 4, 10, 6, 2, 9, 1, 1, 5, 7, 3, 5, 5, 5, 2, 5, 1, 2, 3, 3, 1, 2, 2, 
        1, 1, 1, 1, 3, 5, 1, 1, 1, 1, 1, 6, 6, 1, 1, 2, 1, 1, 4, 4, 4, 1, 1, 
        1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 3, 3, 3, 3, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9VHsw1AkcX2tfdldrN/ugdpttdaRCyvPK7yOvo92r1ZFHrihRhB5edUmF
UyhKV1OSHh6JUA7psdJ5ux0N0XGHVHKdHro4eXVuprnPzGc+/3xmPvOd73w+
0oBw90AyiURSzPI/3SaqOR6p+oeIkOVQFgxREV+256hnymViqD2gt3+CAWH6
PUVzHhWOJpnvGz7QkNn/8qu8fCrkFszSqycpIFWzgrv4PcTEijUnf6hjg/QF
T0TxFZs2U0FalbOlaughUXssJvpWqgYifqyX0h17iVK+B29r8wzRrxv3Winv
JnIYFiW7wrXQliX205T8RiyLffn70D4K8vKiV96IYSKTSIwUPqVgv46bXk0W
D1PWmo88q6kwf3/AtdSMBxXvcU2nySixU3T/WasLG4mOS4PJZA7UDVIouUxs
qboQtuojC60De/aO1TFxfb9foUE0A+6Fq3xqk4SwUt3z35E3QlRFX7H5ji6C
dTSbduBhO9GTZbOBNi74/64X3OcMmwk+aqbFwSOTj4lbMbF54mEh4tPWe2e3
3SZS1vmf/oUiBCPdNcHeqYPg4A83GUWA+OzjI322hUS9XO5wuZSPO2+lccIl
o0RFxjHlqUoBfr2hyO5MYuAaUiy5BSJ8mp63MjmfgfFY66ySGT7UTdvcBlrp
yHHIljAP88G/63rCu4+Cmo1PLSmRXDhuNOXS1ByEHtohXxvCRcfz1SpZ2zRR
oHvKTdXJQ0HYM/7mxh6COtGY5n9+Ltgth719Lo0TV36+e0R7tTYcios0LTpY
iKtPGH7N5OKg4Yq39gNUWFqsqPY1ZcOiInDsfPUMYW5qvmmqbg5kAoSo340T
NumeUlkjG98sNXDpPjpBSEM63/E+zQF5fj9l6a5pYvlag6fNrdpofrGh/Wol
Ca2ZqVfM7eYh3imsJ2FQBx1N2zLoCjH2OE4xy525GGx/cC65VR+h2SLjBxwG
6nO0NlYk6eNbSsly3hNtFBgn23qP8eDX0X8pr4+BgFw7n/txHHRrlVxnGeig
r+GUrzxQGzc/GHC1Hfnwsvp6mR19ERQCLcOtR1nIFzm7dCkWouxiJa1opxaY
RlF1Vq7zceySsutVJRVmfxkdtI8SoLpWR7aXOwe673a35UbxUbi4Vz78lotF
ZosizQYF6DLI7VZVzeadvf158QJ9PLgbma4Y04U150Za34QAoWUZ0sphAYTK
Mmc1RDDs80Wx7ex/VK2dYSx9qMWqyUY9OlIKTq+3a9ZDaIDqjhXBRd0R+3Sn
NxI0HdzeLe2loDM8yevEgD5efZ/10amFjKIK44SpIDGiBpck02LJcEh4P6pP
k2BkRO+xlXKaCD9jrDI0EqPW9Hn9k2skOOe3y0wuzvpfH3pVPtunw6lm9V4e
EgzK923d5aaJmYzl/JYz82Ddoo6YNCFjjcLWQosnAT/xp9uGZzRQVuEbIO2S
wHJ4+NFZ1Wci2JW1ezxhIUT+DbmBFzXgwyneTdQLUZTIDCp/Q0eReGr0jUQE
dnRt7vztNJh2T94f2imEZ4fRJi6HCg+ls4PXWhH+jJGcq0ujgNxESnUJmovi
EOubbpYspPb/PdeTJ0W5+7oSGoOJVI91QRpuUmTEUtnWybP7U5vp0cLTR4Ro
n/uFCi0k3JIsLk5cgAG/In6uWgP/AhVqAHE=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{1, 4}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{1, 6}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{1, 7}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{1, 8}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{1, 9}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{1, 12}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{3, 12}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{4, 12}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{11, 12}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 13}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 14}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 15}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 16}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 24}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 25}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 26}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 27}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 28}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 29}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 30}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 32}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 33}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 34}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 35}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 36}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 37}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 38}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 39}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 44}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 45}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 49}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 50}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 52}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 56}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 59}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 65}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 69}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 70}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 71}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 72}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{12, 73}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{13, 24}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{17, 18}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{17, 19}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{17, 20}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{17, 21}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{17, 22}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{17, 23}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{17, 24}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{17, 27}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{17, 56}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{18, 19}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{18, 20}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{18, 21}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{18, 22}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{18, 23}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{18, 24}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{19, 20}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{19, 21}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{19, 22}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{19, 23}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{19, 24}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{20, 21}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{20, 22}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{20, 23}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{20, 24}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{21, 22}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{21, 23}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{21, 24}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{22, 23}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{22, 24}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{23, 24}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{24, 25}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{24, 26}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{24, 28}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{24, 30}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{24, 31}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{24, 32}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{25, 26}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{25, 27}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{25, 28}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{25, 42}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{25, 43}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{25, 51}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{25, 69}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{25, 70}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{25, 71}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 27}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 28}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 40}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 41}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 42}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 43}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 49}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 56}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 69}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 70}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 71}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 72}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{26, 76}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{27, 28}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{27, 44}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{27, 50}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{27, 52}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{27, 55}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{27, 56}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{27, 73}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 29}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 30}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 32}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 34}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 44}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 49}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 59}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 69}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 70}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 71}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 72}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{28, 73}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{29, 45}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{29, 46}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{30, 35}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{30, 36}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{30, 37}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{30, 38}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{30, 39}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{31, 32}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{35, 36}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{35, 37}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{35, 38}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{35, 39}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{36, 37}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{36, 38}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{36, 39}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{37, 38}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{37, 39}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{38, 39}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{40, 53}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{40, 56}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{42, 43}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{42, 56}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{42, 58}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{42, 63}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{42, 69}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{42, 70}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{42, 71}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{42, 72}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{42, 76}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{47, 48}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{48, 49}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 56}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 58}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 59}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 60}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 61}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 62}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 63}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 64}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 65}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 66}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 67}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 69}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 70}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 72}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 74}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 75}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 76}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{49, 77}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{50, 51}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{50, 52}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{50, 55}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{50, 56}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{50, 57}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{52, 53}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{52, 54}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{52, 55}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{52, 56}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{55, 56}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{56, 57}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{56, 58}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{56, 59}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{56, 60}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{56, 62}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{56, 63}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{56, 64}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{56, 65}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{56, 66}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{58, 59}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{58, 60}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{58, 62}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{58, 63}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{58, 64}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{58, 65}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{58, 66}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{58, 68}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{59, 60}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{59, 61}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{59, 62}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{59, 63}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{59, 64}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{59, 65}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{59, 66}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{59, 67}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{59, 71}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{59, 77}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{60, 61}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{60, 62}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{60, 63}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{60, 64}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{60, 65}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{60, 66}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{60, 67}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{61, 62}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{61, 63}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{61, 64}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{61, 65}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{61, 66}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{61, 67}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{62, 63}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{62, 64}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{62, 65}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{62, 66}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{62, 67}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{63, 64}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{63, 65}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{63, 66}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{63, 67}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{63, 77}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{64, 65}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{64, 66}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{64, 67}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{64, 77}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{65, 66}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{65, 67}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{65, 77}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{66, 67}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{66, 77}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{67, 77}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{69, 70}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{69, 71}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{69, 72}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{69, 76}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{70, 71}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{70, 72}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{70, 76}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{71, 72}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{71, 76}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{72, 76}, 0.06740365405717905]}, 
         {Arrowheads[0.], ArrowBox[{74, 75}, 0.06740365405717905]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.06740365405717905], DiskBox[2, 0.06740365405717905], 
         DiskBox[3, 0.06740365405717905], DiskBox[4, 0.06740365405717905], 
         DiskBox[5, 0.06740365405717905], DiskBox[6, 0.06740365405717905], 
         DiskBox[7, 0.06740365405717905], DiskBox[8, 0.06740365405717905], 
         DiskBox[9, 0.06740365405717905], DiskBox[10, 0.06740365405717905], 
         DiskBox[11, 0.06740365405717905], DiskBox[12, 0.06740365405717905], 
         DiskBox[13, 0.06740365405717905], DiskBox[14, 0.06740365405717905], 
         DiskBox[15, 0.06740365405717905], DiskBox[16, 0.06740365405717905], 
         DiskBox[17, 0.06740365405717905], DiskBox[18, 0.06740365405717905], 
         DiskBox[19, 0.06740365405717905], DiskBox[20, 0.06740365405717905], 
         DiskBox[21, 0.06740365405717905], DiskBox[22, 0.06740365405717905], 
         DiskBox[23, 0.06740365405717905], DiskBox[24, 0.06740365405717905], 
         DiskBox[25, 0.06740365405717905], DiskBox[26, 0.06740365405717905], 
         DiskBox[27, 0.06740365405717905], DiskBox[28, 0.06740365405717905], 
         DiskBox[29, 0.06740365405717905], DiskBox[30, 0.06740365405717905], 
         DiskBox[31, 0.06740365405717905], DiskBox[32, 0.06740365405717905], 
         DiskBox[33, 0.06740365405717905], DiskBox[34, 0.06740365405717905], 
         DiskBox[35, 0.06740365405717905], DiskBox[36, 0.06740365405717905], 
         DiskBox[37, 0.06740365405717905], DiskBox[38, 0.06740365405717905], 
         DiskBox[39, 0.06740365405717905], DiskBox[40, 0.06740365405717905], 
         DiskBox[41, 0.06740365405717905], DiskBox[42, 0.06740365405717905], 
         DiskBox[43, 0.06740365405717905], DiskBox[44, 0.06740365405717905], 
         DiskBox[45, 0.06740365405717905], DiskBox[46, 0.06740365405717905], 
         DiskBox[47, 0.06740365405717905], DiskBox[48, 0.06740365405717905], 
         DiskBox[49, 0.06740365405717905], DiskBox[50, 0.06740365405717905], 
         DiskBox[51, 0.06740365405717905], DiskBox[52, 0.06740365405717905], 
         DiskBox[53, 0.06740365405717905], DiskBox[54, 0.06740365405717905], 
         DiskBox[55, 0.06740365405717905], DiskBox[56, 0.06740365405717905], 
         DiskBox[57, 0.06740365405717905], DiskBox[58, 0.06740365405717905], 
         DiskBox[59, 0.06740365405717905], DiskBox[60, 0.06740365405717905], 
         DiskBox[61, 0.06740365405717905], DiskBox[62, 0.06740365405717905], 
         DiskBox[63, 0.06740365405717905], DiskBox[64, 0.06740365405717905], 
         DiskBox[65, 0.06740365405717905], DiskBox[66, 0.06740365405717905], 
         DiskBox[67, 0.06740365405717905], DiskBox[68, 0.06740365405717905], 
         DiskBox[69, 0.06740365405717905], DiskBox[70, 0.06740365405717905], 
         DiskBox[71, 0.06740365405717905], DiskBox[72, 0.06740365405717905], 
         DiskBox[73, 0.06740365405717905], DiskBox[74, 0.06740365405717905], 
         DiskBox[75, 0.06740365405717905], DiskBox[76, 0.06740365405717905], 
         DiskBox[77, 0.06740365405717905]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WeightedGraphQ", "[", "g", "]"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]],

Cell[TextData[{
 "Community detection functions return ",
 Cell[BoxData[
  FormBox["IGClusters", TraditionalForm]]],
 " objects."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cl1", "=", 
  RowBox[{
  "IGCommunitiesEdgeBetweenness", "[", "g", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cl2", "=", 
  RowBox[{"IGCommunitiesWalktrap", "[", "g", "]"}]}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"IGClusterData", "[", 
   PanelBox[
    TagBox[
     DynamicModuleBox[{Typeset`var$$ = False}, 
      InterpretationBox[
       StyleBox[
        PaneSelectorBox[{False->GridBox[{
           {
            OpenerBox[Dynamic[Typeset`var$$],
             Appearance->Automatic,
             AutoAction->False,
             ContinuousAction->False,
             Enabled->Automatic], 
            TagBox[GridBox[{
               {
                TemplateBox[{StyleBox["\"Elements: \"", 
                   GrayLevel[0.5], StripOnInput -> False],"77"},
                 "RowDefault"]},
               {
                TemplateBox[{StyleBox["\"Communities: \"", 
                   GrayLevel[0.5], StripOnInput -> False],"5"},
                 "RowDefault"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Column"]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
         GridBox[{
           {
            OpenerBox[Dynamic[Typeset`var$$],
             Appearance->Automatic,
             AutoAction->False,
             ContinuousAction->False,
             Enabled->Automatic], 
            TagBox[GridBox[{
               {
                TemplateBox[{StyleBox["\"Elements: \"", 
                   GrayLevel[0.5], StripOnInput -> False],"77"},
                 "RowDefault"]},
               {
                TemplateBox[{StyleBox["\"Communities: \"", 
                   GrayLevel[0.5], StripOnInput -> False],"5"},
                 "RowDefault"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Column"]},
           {"", 
            PaneBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{StyleBox["\"Modularity: \"", 
                    GrayLevel[0.5], StripOnInput -> False],
                   "0.5015935455086257`"},
                  "RowDefault"]},
                {
                 TemplateBox[{StyleBox["\"Hierarchical: \"", 
                    GrayLevel[0.5], StripOnInput -> False],"True"},
                  "RowDefault"]},
                {
                 TemplateBox[{StyleBox["\"Algorithm: \"", 
                    GrayLevel[0.5], StripOnInput -> False],
                   "\"EdgeBetweenness\""},
                  "RowDefault"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[Typeset`var$$],
         Alignment->Automatic,
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{
         Column[{
           Row[{
             Style["Elements: ", 
              GrayLevel[0.5]], 77}], 
           Row[{
             Style["Communities: ", 
              GrayLevel[0.5]], 5}]}], 
         Column[{
           Row[{
             Style["Modularity: ", 
              GrayLevel[0.5]], 0.5015935455086257}], 
           Row[{
             Style["Hierarchical: ", 
              GrayLevel[0.5]], True}], 
           Row[{
             Style["Algorithm: ", 
              GrayLevel[0.5]], "EdgeBetweenness"}]}]}, False]],
      DynamicModuleValues:>{}],
     Setting[#, {0}]& ],
    BaselinePosition->Baseline], "]"}],
  IGraphM`IGClusterData[
   Association[
   "Elements" -> {
     "Myriel", "Napoleon", "Mlle Baptistine", "Mme. Magloire", 
      "Countess De Lo", "Geborand", "Champtercier", "Cravatte", "Count", 
      "Old Man", "Labarre", "Valjean", "Marguerite", "Mme. De R", "Isabeau", 
      "Gervais", "Tholomyes", "Listolier", "Fameuil", "Blacheville", 
      "Favourite", "Dahlia", "Zephine", "Fantine", "Mme. Thenardier", 
      "Thenardier", "Cosette", "Javert", "Fauchelevent", "Bamatabois", 
      "Perpetue", "Simplice", "Scaufflaire", "Woman1", "Judge", 
      "Champmathieu", "Brevet", "Chenildieu", "Cochepaille", "Pontmercy", 
      "Boulatruelle", "Eponine", "Anzelma", "Woman2", "Mother Innocent", 
      "Gribier", "Jondrette", "Mme. Burgon", "Gavroche", "Gillenormand", 
      "Magnon", "Mlle Gillenormand", "Mme. Pontmercy", "Mlle Vaubois", 
      "Lt. Gillenormand", "Marius", "Baroness T", "Mabeuf", "Enjolras", 
      "Combeferre", "Prouvaire", "Feuilly", "Courfeyrac", "Bahorel", 
      "Bossuet", "Joly", "Grantaire", "Mother Plutarch", "Gueulemer", "Babet",
       "Claquesous", "Montparnasse", "Toussaint", "Child1", "Child2", 
      "Brujon", "Mme. Hucheloup"}, 
    "Communities" -> {{
      "Myriel", "Napoleon", "Mlle Baptistine", "Mme. Magloire", 
       "Countess De Lo", "Geborand", "Champtercier", "Cravatte", "Count", 
       "Old Man"}, {
      "Labarre", "Valjean", "Marguerite", "Mme. De R", "Isabeau", "Gervais", 
       "Fauchelevent", "Bamatabois", "Perpetue", "Simplice", "Scaufflaire", 
       "Woman1", "Judge", "Champmathieu", "Brevet", "Chenildieu", 
       "Cochepaille", "Mother Innocent", "Gribier"}, {
      "Tholomyes", "Listolier", "Fameuil", "Blacheville", "Favourite", 
       "Dahlia", "Zephine", "Fantine"}, {
      "Mme. Thenardier", "Thenardier", "Cosette", "Javert", "Pontmercy", 
       "Boulatruelle", "Eponine", "Anzelma", "Woman2", "Gillenormand", 
       "Magnon", "Mlle Gillenormand", "Mme. Pontmercy", "Mlle Vaubois", 
       "Lt. Gillenormand", "Marius", "Baroness T", "Gueulemer", "Babet", 
       "Claquesous", "Montparnasse", "Toussaint", "Brujon"}, {
      "Jondrette", "Mme. Burgon", "Gavroche", "Mabeuf", "Enjolras", 
       "Combeferre", "Prouvaire", "Feuilly", "Courfeyrac", "Bahorel", 
       "Bossuet", "Joly", "Grantaire", "Mother Plutarch", "Child1", "Child2", 
       "Mme. Hucheloup"}}, "Modularity" -> CompressedData["
1:eJwBdQKK/SFib1JlAQAAAE0AAADKtYw9SOWhv+Y8iecvCKC/C82ZYF4Dn79e
aogWxW6Yv1c5eKg4s4u/K82+Nl2qib+gQxYRE1ZOv45AoPVOLo4/EfGMh/Ti
jz+RIeqVriyRP9gXxlEQYZI/uPA2Pafylj9U2xWcwTGYP1Zmkgednpo/UDpV
sSHdmz95Vt6l60SeP2ZHeMc/iqE/JHz2iUgcpT+jpNf4vnqqP1VLYjgYuKs/
STjaqQ31rD+bEtv9XyKtP1W83FSNR64/WoQ57vVssT/HNeSBrXWyP015X2+N
nrQ//Nh8ieYzuD/zeAklQK67P2u/WTuJAMA/tiOKc8G7wj+CeQ38R//FP6Mj
thT488Y/mF6YU93bxz/OBPMa+I/KP4bdu0j8kcs/HyzGDDd7zT+f0KqfVVjP
P/HooGmkQtA/qYU60c190D/3iycEZo3QP8Ii39o2m9Q/8S9yb2H91T8Xqzp5
ixDWPyiISTHdAdg/o//C7WEU2D9W1t6j8yTYPwehjnpBS9g/Hs3Rn+Td2D/Z
hkhOBfHYPwyv2UFWMNk/+dLf0XND2T87XnR57vTaPxhdt3PsYNs/2PfCanqA
2z/3hVjclJPbP+7l9+FxUdw/dT2/LpZi3D/HNeSBrXXcP4D3OrDOhtw/BVrv
5OKZ3D9mI4WgqarcP1FPa7DHu9w/CvDbH0Lx3T9IDxRrZhveP2aliVyBLN4/
LUYZ09I33j8ShcxK4UjeP9HE0xQdyt8/6dLZAkxy3z9IlrnO8I3fP0iII1/O
mt8/EyC+DbCj3z/5AzvoDQ3gP5LngH/1W9Y/nF/l2tK6xz8ooYHg4eiyPwAA
AAAAAAAAZn48/Q==
     "], 
    "Merges" -> {{75, 74}, {76, 71}, {66, 65}, {80, 62}, {67, 61}, {63, 60}, {
     81, 59}, {56, 55}, {54, 52}, {57, 50}, {78, 49}, {48, 47}, {43, 42}, {53,
      40}, {39, 38}, {92, 37}, {93, 36}, {94, 35}, {32, 31}, {46, 29}, {69, 
     28}, {73, 27}, {98, 26}, {24, 23}, {101, 22}, {102, 21}, {103, 20}, {104,
      19}, {105, 18}, {106, 17}, {95, 12}, {4, 3}, {109, 1}, {79, 70}, {100, 
     25}, {85, 87}, {108, 30}, {45, 97}, {44, 99}, {83, 84}, {64, 117}, {10, 
     110}, {111, 112}, {91, 86}, {51, 113}, {9, 119}, {72, 120}, {8, 123}, {
     77, 118}, {7, 125}, {82, 126}, {128, 58}, {34, 114}, {6, 127}, {90, 
     124}, {33, 130}, {5, 131}, {16, 133}, {2, 134}, {41, 132}, {15, 135}, {
     121, 122}, {68, 129}, {14, 138}, {13, 141}, {142, 11}, {140, 88}, {116, 
     137}, {96, 143}, {144, 89}, {139, 145}, {115, 146}, {147, 148}, {150, 
     107}, {151, 149}, {152, 136}}, "RemovedEdges" -> {
      UndirectedEdge["Old Man", "Myriel"], 
      UndirectedEdge["Valjean", "Mme. Magloire"], 
      UndirectedEdge["Valjean", "Mlle Baptistine"], 
      UndirectedEdge["Zephine", "Fameuil"], 
      UndirectedEdge["Mlle Gillenormand", "Gillenormand"], 
      UndirectedEdge["Champmathieu", "Judge"], 
      UndirectedEdge["Gillenormand", "Cosette"], 
      UndirectedEdge["Fantine", "Listolier"], 
      UndirectedEdge["Fantine", "Dahlia"], 
      UndirectedEdge["Courfeyrac", "Prouvaire"], 
      UndirectedEdge["Bahorel", "Combeferre"], 
      UndirectedEdge["Fantine", "Favourite"], 
      UndirectedEdge["Fantine", "Fameuil"], 
      UndirectedEdge["Fantine", "Blacheville"], 
      UndirectedEdge["Fantine", "Zephine"], 
      UndirectedEdge["Mlle Vaubois", "Mlle Gillenormand"], 
      UndirectedEdge["Brevet", "Judge"], 
      UndirectedEdge["Zephine", "Blacheville"], 
      UndirectedEdge["Magnon", "Gillenormand"], 
      UndirectedEdge["Zephine", "Favourite"], 
      UndirectedEdge["Zephine", "Tholomyes"], 
      UndirectedEdge["Fantine", "Tholomyes"], 
      UndirectedEdge["Gillenormand", "Valjean"], 
      UndirectedEdge["Fantine", "Marguerite"], 
      UndirectedEdge["Gavroche", "Valjean"], 
      UndirectedEdge["Brevet", "Valjean"], 
      UndirectedEdge["Fameuil", "Tholomyes"], 
      UndirectedEdge["Brevet", "Champmathieu"], 
      UndirectedEdge["Listolier", "Tholomyes"], 
      UndirectedEdge["Fameuil", "Listolier"], 
      UndirectedEdge["Blacheville", "Listolier"], 
      UndirectedEdge["Zephine", "Dahlia"], 
      UndirectedEdge["Blacheville", "Tholomyes"], 
      UndirectedEdge["Cosette", "Tholomyes"], 
      UndirectedEdge["Cosette", "Valjean"], 
      UndirectedEdge["Champmathieu", "Valjean"], 
      UndirectedEdge["Champmathieu", "Bamatabois"], 
      UndirectedEdge["Eponine", "Thenardier"], 
      UndirectedEdge["Bossuet", "Valjean"], 
      UndirectedEdge["Woman2", "Cosette"], 
      UndirectedEdge["Joly", "Gavroche"], 
      UndirectedEdge["Joly", "Enjolras"], 
      UndirectedEdge["Mme. Pontmercy", "Pontmercy"], 
      UndirectedEdge["Joly", "Prouvaire"], 
      UndirectedEdge["Combeferre", "Enjolras"], 
      UndirectedEdge["Cochepaille", "Brevet"], 
      UndirectedEdge["Combeferre", "Gavroche"], 
      UndirectedEdge["Bahorel", "Gavroche"], 
      UndirectedEdge["Bahorel", "Enjolras"], 
      UndirectedEdge["Combeferre", "Marius"], 
      UndirectedEdge["Gueulemer", "Javert"], 
      UndirectedEdge["Feuilly", "Prouvaire"], 
      UndirectedEdge["Mlle Gillenormand", "Cosette"], 
      UndirectedEdge["Joly", "Feuilly"], 
      UndirectedEdge["Joly", "Bossuet"], 
      UndirectedEdge["Joly", "Bahorel"], 
      UndirectedEdge["Joly", "Courfeyrac"], 
      UndirectedEdge["Zephine", "Listolier"], 
      UndirectedEdge["Blacheville", "Fameuil"], 
      UndirectedEdge["Mother Innocent", "Fauchelevent"], 
      UndirectedEdge["Chenildieu", "Bamatabois"], 
      UndirectedEdge["Gavroche", "Mme. Burgon"], 
      UndirectedEdge["Cochepaille", "Bamatabois"], 
      UndirectedEdge["Anzelma", "Eponine"], 
      UndirectedEdge["Mme. Burgon", "Jondrette"], 
      UndirectedEdge["Gribier", "Fauchelevent"], 
      UndirectedEdge["Enjolras", "Valjean"], 
      UndirectedEdge["Gavroche", "Thenardier"], 
      UndirectedEdge["Feuilly", "Enjolras"], 
      UndirectedEdge["Favourite", "Listolier"], 
      UndirectedEdge["Magnon", "Mme. Thenardier"], 
      UndirectedEdge["Cochepaille", "Chenildieu"], 
      UndirectedEdge["Lt. Gillenormand", "Mlle Gillenormand"], 
      UndirectedEdge["Chenildieu", "Judge"], 
      UndirectedEdge["Feuilly", "Combeferre"], 
      UndirectedEdge["Bahorel", "Feuilly"], 
      UndirectedEdge["Courfeyrac", "Feuilly"], 
      UndirectedEdge["Courfeyrac", "Marius"], 
      UndirectedEdge["Courfeyrac", "Enjolras"], 
      UndirectedEdge["Courfeyrac", "Eponine"], 
      UndirectedEdge["Courfeyrac", "Mabeuf"], 
      UndirectedEdge["Courfeyrac", "Gavroche"], 
      UndirectedEdge["Feuilly", "Marius"], 
      UndirectedEdge["Feuilly", "Mabeuf"], 
      UndirectedEdge["Courfeyrac", "Combeferre"], 
      UndirectedEdge["Valjean", "Myriel"], 
      UndirectedEdge["Marguerite", "Valjean"], 
      UndirectedEdge["Mme. De R", "Valjean"], 
      UndirectedEdge["Chenildieu", "Valjean"], 
      UndirectedEdge["Combeferre", "Mabeuf"], 
      UndirectedEdge["Chenildieu", "Brevet"], 
      UndirectedEdge["Prouvaire", "Enjolras"], 
      UndirectedEdge["Mme. Hucheloup", "Gavroche"], 
      UndirectedEdge["Grantaire", "Joly"], 
      UndirectedEdge["Enjolras", "Javert"], 
      UndirectedEdge["Bossuet", "Feuilly"], 
      UndirectedEdge["Bossuet", "Prouvaire"], 
      UndirectedEdge["Bahorel", "Marius"], 
      UndirectedEdge["Brujon", "Thenardier"], 
      UndirectedEdge["Isabeau", "Valjean"], 
      UndirectedEdge["Pontmercy", "Thenardier"], 
      UndirectedEdge["Prouvaire", "Combeferre"], 
      UndirectedEdge["Prouvaire", "Gavroche"], 
      UndirectedEdge["Napoleon", "Myriel"], 
      UndirectedEdge["Gervais", "Valjean"], 
      UndirectedEdge["Toussaint", "Valjean"], 
      UndirectedEdge["Joly", "Marius"], 
      UndirectedEdge["Montparnasse", "Babet"], 
      UndirectedEdge["Babet", "Eponine"], 
      UndirectedEdge["Mme. Magloire", "Mlle Baptistine"], 
      UndirectedEdge["Favourite", "Fameuil"], 
      UndirectedEdge["Boulatruelle", "Thenardier"], 
      UndirectedEdge["Eponine", "Mme. Thenardier"], 
      UndirectedEdge["Toussaint", "Javert"], 
      UndirectedEdge["Grantaire", "Enjolras"], 
      UndirectedEdge["Claquesous", "Babet"], 
      UndirectedEdge["Countess De Lo", "Myriel"], 
      UndirectedEdge["Favourite", "Blacheville"], 
      UndirectedEdge["Babet", "Gavroche"], 
      UndirectedEdge["Grantaire", "Courfeyrac"], 
      UndirectedEdge["Brujon", "Gueulemer"], 
      UndirectedEdge["Claquesous", "Gueulemer"], 
      UndirectedEdge["Montparnasse", "Eponine"], 
      UndirectedEdge["Joly", "Combeferre"], 
      UndirectedEdge["Grantaire", "Combeferre"], 
      UndirectedEdge["Montparnasse", "Gavroche"], 
      UndirectedEdge["Gueulemer", "Eponine"], 
      UndirectedEdge["Claquesous", "Thenardier"], 
      UndirectedEdge["Brujon", "Babet"], 
      UndirectedEdge["Claquesous", "Valjean"], 
      UndirectedEdge["Joly", "Mabeuf"], 
      UndirectedEdge["Grantaire", "Bossuet"], 
      UndirectedEdge["Gueulemer", "Mme. Thenardier"], 
      UndirectedEdge["Child2", "Gavroche"], 
      UndirectedEdge["Grantaire", "Bahorel"], 
      UndirectedEdge["Geborand", "Myriel"], 
      UndirectedEdge["Gueulemer", "Gavroche"], 
      UndirectedEdge["Montparnasse", "Thenardier"], 
      UndirectedEdge["Child2", "Child1"], 
      UndirectedEdge["Champtercier", "Myriel"], 
      UndirectedEdge["Mme. Hucheloup", "Bahorel"], 
      UndirectedEdge["Brujon", "Claquesous"], 
      UndirectedEdge["Mme. Hucheloup", "Joly"], 
      UndirectedEdge["Cravatte", "Myriel"], 
      UndirectedEdge["Bahorel", "Prouvaire"], 
      UndirectedEdge["Bossuet", "Bahorel"], 
      UndirectedEdge["Brujon", "Montparnasse"], 
      UndirectedEdge["Cochepaille", "Champmathieu"], 
      UndirectedEdge["Mme. Pontmercy", "Mlle Gillenormand"], 
      UndirectedEdge["Brujon", "Eponine"], 
      UndirectedEdge["Woman2", "Javert"], 
      UndirectedEdge["Woman2", "Valjean"], 
      UndirectedEdge["Brujon", "Gavroche"], 
      UndirectedEdge["Anzelma", "Mme. Thenardier"], 
      UndirectedEdge["Count", "Myriel"], 
      UndirectedEdge["Montparnasse", "Valjean"], 
      UndirectedEdge["Mother Plutarch", "Mabeuf"], 
      UndirectedEdge["Claquesous", "Javert"], 
      UndirectedEdge["Claquesous", "Eponine"], 
      UndirectedEdge["Toussaint", "Cosette"], 
      UndirectedEdge["Babet", "Valjean"], 
      UndirectedEdge["Montparnasse", "Gueulemer"], 
      UndirectedEdge["Babet", "Javert"], 
      UndirectedEdge["Babet", "Thenardier"], 
      UndirectedEdge["Babet", "Mme. Thenardier"], 
      UndirectedEdge["Grantaire", "Gavroche"], 
      UndirectedEdge["Montparnasse", "Claquesous"], 
      UndirectedEdge["Grantaire", "Prouvaire"], 
      UndirectedEdge["Mother Innocent", "Valjean"], 
      UndirectedEdge["Lt. Gillenormand", "Gillenormand"], 
      UndirectedEdge["Marius", "Pontmercy"], 
      UndirectedEdge["Marius", "Lt. Gillenormand"], 
      UndirectedEdge["Marius", "Cosette"], 
      UndirectedEdge["Favourite", "Tholomyes"], 
      UndirectedEdge["Marius", "Mlle Gillenormand"], 
      UndirectedEdge["Marius", "Gillenormand"], 
      UndirectedEdge["Bossuet", "Marius"], 
      UndirectedEdge["Bossuet", "Mabeuf"], 
      UndirectedEdge["Bossuet", "Courfeyrac"], 
      UndirectedEdge["Chenildieu", "Champmathieu"], 
      UndirectedEdge["Cochepaille", "Judge"], 
      UndirectedEdge["Brevet", "Bamatabois"], 
      UndirectedEdge["Mme. Hucheloup", "Grantaire"], 
      UndirectedEdge["Mme. Hucheloup", "Bossuet"], 
      UndirectedEdge["Mlle Baptistine", "Myriel"], 
      UndirectedEdge["Mme. Magloire", "Myriel"], 
      UndirectedEdge["Valjean", "Labarre"], 
      UndirectedEdge["Dahlia", "Tholomyes"], 
      UndirectedEdge["Dahlia", "Fameuil"], 
      UndirectedEdge["Dahlia", "Blacheville"], 
      UndirectedEdge["Dahlia", "Favourite"], 
      UndirectedEdge["Dahlia", "Listolier"], 
      UndirectedEdge["Fantine", "Valjean"], 
      UndirectedEdge["Thenardier", "Mme. Thenardier"], 
      UndirectedEdge["Thenardier", "Valjean"], 
      UndirectedEdge["Cosette", "Mme. Thenardier"], 
      UndirectedEdge["Mme. Thenardier", "Fantine"], 
      UndirectedEdge["Thenardier", "Fantine"], 
      UndirectedEdge["Mme. Thenardier", "Valjean"], 
      UndirectedEdge["Cosette", "Thenardier"], 
      UndirectedEdge["Javert", "Fantine"], 
      UndirectedEdge["Javert", "Mme. Thenardier"], 
      UndirectedEdge["Javert", "Cosette"], 
      UndirectedEdge["Javert", "Thenardier"], 
      UndirectedEdge["Javert", "Valjean"], 
      UndirectedEdge["Fauchelevent", "Valjean"], 
      UndirectedEdge["Bamatabois", "Fantine"], 
      UndirectedEdge["Bamatabois", "Javert"], 
      UndirectedEdge["Bamatabois", "Valjean"], 
      UndirectedEdge["Fauchelevent", "Javert"], 
      UndirectedEdge["Perpetue", "Fantine"], 
      UndirectedEdge["Simplice", "Valjean"], 
      UndirectedEdge["Simplice", "Fantine"], 
      UndirectedEdge["Simplice", "Perpetue"], 
      UndirectedEdge["Simplice", "Javert"], 
      UndirectedEdge["Scaufflaire", "Valjean"], 
      UndirectedEdge["Woman1", "Valjean"], 
      UndirectedEdge["Woman1", "Javert"], 
      UndirectedEdge["Judge", "Valjean"], 
      UndirectedEdge["Judge", "Bamatabois"], 
      UndirectedEdge["Cochepaille", "Valjean"], 
      UndirectedEdge["Anzelma", "Thenardier"], 
      UndirectedEdge["Gavroche", "Javert"], 
      UndirectedEdge["Mlle Gillenormand", "Valjean"], 
      UndirectedEdge["Lt. Gillenormand", "Cosette"], 
      UndirectedEdge["Marius", "Valjean"], 
      UndirectedEdge["Marius", "Tholomyes"], 
      UndirectedEdge["Marius", "Thenardier"], 
      UndirectedEdge["Marius", "Eponine"], 
      UndirectedEdge["Marius", "Gavroche"], 
      UndirectedEdge["Baroness T", "Gillenormand"], 
      UndirectedEdge["Baroness T", "Marius"], 
      UndirectedEdge["Mabeuf", "Marius"], 
      UndirectedEdge["Mabeuf", "Eponine"], 
      UndirectedEdge["Mabeuf", "Gavroche"], 
      UndirectedEdge["Enjolras", "Marius"], 
      UndirectedEdge["Enjolras", "Gavroche"], 
      UndirectedEdge["Enjolras", "Mabeuf"], 
      UndirectedEdge["Feuilly", "Gavroche"], 
      UndirectedEdge["Bahorel", "Courfeyrac"], 
      UndirectedEdge["Bahorel", "Mabeuf"], 
      UndirectedEdge["Bossuet", "Gavroche"], 
      UndirectedEdge["Bossuet", "Enjolras"], 
      UndirectedEdge["Bossuet", "Combeferre"], 
      UndirectedEdge["Grantaire", "Feuilly"], 
      UndirectedEdge["Gueulemer", "Valjean"], 
      UndirectedEdge["Gueulemer", "Thenardier"], 
      UndirectedEdge["Babet", "Gueulemer"], 
      UndirectedEdge["Claquesous", "Mme. Thenardier"], 
      UndirectedEdge["Claquesous", "Enjolras"], 
      UndirectedEdge["Montparnasse", "Javert"], 
      UndirectedEdge["Child1", "Gavroche"], 
      UndirectedEdge["Mme. Hucheloup", "Courfeyrac"], 
      UndirectedEdge["Mme. Hucheloup", "Enjolras"]}, 
    "EdgeBetweenness" -> CompressedData["
1:eJydkmtIk1EYx1/ttspMTXKK2LxO98G8Li/pHrR0zhTzFjrykk7EaZs6nNgF
b0WQGUgwXVn0xZGWGmpNKYm+mGWlaUamJigJheWHygq0tvec9w2PzC7/Lz+e
5zy385zjfEyRKDOjKGqFwuJVAc3JasTFWuiU7h3QhxWA+5nI2jyxHDqXKjqW
WvJB6nRNODVTAPqrvg511jKAxsLCxPN5ENTXx6Ei8uFohYVdzm0llAZrSoOv
l0BcqrDt8ZYi6JVnlCT7q0CvlUUMXi4Ds6nny5N3j8PFO4f7lQIFOCVsVbz1
lkOs2xux2y4FbFjQ++oG5bBzanjH1EMlpBhVXAp590JO2WurYMUvo7lfeALN
qzwLmq+a4OrTeH7LWsTKOuhJCu1J4tew9rMhgy6dY22GofWzQfUdOVAdXV4b
LS5CfkrF0up+b7i6Ih1GuBdGuClpcLPVIJs06DLL5o+2pIK1UWnZsL19Zlv7
sBTGVXGvVM3poFx5p1gZz4Qroiffu8ayYXo2bHp2JAt0uZKW3BdSUI3K7DIr
8+BIutg68lY+2E3o3+9JKIQ5LWdOm1gMo/ELY/FVMrhh7CdRwk9aZWguvRrf
vxzPKWZZrjZoIBqU5nyluS4Sanicat4jCfjP8/3ndbFwcl/M67YJCUga3GIa
5g6BMVxtl4z3kbmaVDjmfmgzziHwRfXVftBY4qUp8QrB8QCttLxB22RQWiD2
B+P8IMQH4WD8f1QW4HNftk+Av0FdgeieIiH2R2AKMD0xPVh2R8m7oz54wRAt
TzhAy4vI80B9KXdsB5ggc+5G0BWS6Y/I1HNhaUN/AGe8Hx76rykuiC95OM4U
feDTR6McUX4ree7IEsVxcX17eErf13FN/EH6/g74Pcj7CLDfA7272hn7mb26
svFNtBxxP6aODyYXc/eaORFtcZ41tm2IcysTtMTz2RJ5TD8Hoq8LMT8H529m
bUQLdq7V9XiETcaTNplH/YEcEzaX8JN7+CZaHc8h/Ezeogl7UYT2/4U4Z+rb
EvGfRWhvP7Btjv/7JhxHvt/vPNRnWbR67+S+TM1DvgtTl7nnRmJu8pxD+Nfu
YX3/Wq6/t//tb4p/G0/+n3+v9ws/Rqab
     "], 
    "Bridges" -> {254, 253, 252, 251, 249, 248, 247, 244, 243, 242, 241, 239, 
     238, 237, 236, 235, 233, 230, 226, 225, 224, 223, 222, 220, 219, 217, 
     214, 210, 205, 199, 192, 187, 186, 184, 182, 179, 176, 170, 169, 168, 
     162, 155, 154, 146, 145, 144, 143, 140, 139, 136, 135, 132, 118, 117, 
     113, 111, 110, 105, 104, 101, 100, 98, 94, 88, 87, 86, 85, 74, 70, 69, 
     68, 59, 57, 37, 33, 3}, "Algorithm" -> "EdgeBetweenness"]]]], "Output"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"IGClusterData", "[", 
   PanelBox[
    TagBox[
     DynamicModuleBox[{Typeset`var$$ = False}, 
      InterpretationBox[
       StyleBox[
        PaneSelectorBox[{False->GridBox[{
           {
            OpenerBox[Dynamic[Typeset`var$$],
             Appearance->Automatic,
             AutoAction->False,
             ContinuousAction->False,
             Enabled->Automatic], 
            TagBox[GridBox[{
               {
                TemplateBox[{StyleBox["\"Elements: \"", 
                   GrayLevel[0.5], StripOnInput -> False],"77"},
                 "RowDefault"]},
               {
                TemplateBox[{StyleBox["\"Communities: \"", 
                   GrayLevel[0.5], StripOnInput -> False],"9"},
                 "RowDefault"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Column"]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
         GridBox[{
           {
            OpenerBox[Dynamic[Typeset`var$$],
             Appearance->Automatic,
             AutoAction->False,
             ContinuousAction->False,
             Enabled->Automatic], 
            TagBox[GridBox[{
               {
                TemplateBox[{StyleBox["\"Elements: \"", 
                   GrayLevel[0.5], StripOnInput -> False],"77"},
                 "RowDefault"]},
               {
                TemplateBox[{StyleBox["\"Communities: \"", 
                   GrayLevel[0.5], StripOnInput -> False],"9"},
                 "RowDefault"]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Column"]},
           {"", 
            PaneBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{StyleBox["\"Modularity: \"", 
                    GrayLevel[0.5], StripOnInput -> False],
                   "0.5402401685714722`"},
                  "RowDefault"]},
                {
                 TemplateBox[{StyleBox["\"Hierarchical: \"", 
                    GrayLevel[0.5], StripOnInput -> False],"True"},
                  "RowDefault"]},
                {
                 TemplateBox[{StyleBox["\"Algorithm: \"", 
                    GrayLevel[0.5], StripOnInput -> False],"\"Walktrap\""},
                  "RowDefault"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[Typeset`var$$],
         Alignment->Automatic,
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{
         Column[{
           Row[{
             Style["Elements: ", 
              GrayLevel[0.5]], 77}], 
           Row[{
             Style["Communities: ", 
              GrayLevel[0.5]], 9}]}], 
         Column[{
           Row[{
             Style["Modularity: ", 
              GrayLevel[0.5]], 0.5402401685714722}], 
           Row[{
             Style["Hierarchical: ", 
              GrayLevel[0.5]], True}], 
           Row[{
             Style["Algorithm: ", 
              GrayLevel[0.5]], "Walktrap"}]}]}, False]],
      DynamicModuleValues:>{}],
     Setting[#, {0}]& ],
    BaselinePosition->Baseline], "]"}],
  IGraphM`IGClusterData[
   Association[
   "Elements" -> {
     "Myriel", "Napoleon", "Mlle Baptistine", "Mme. Magloire", 
      "Countess De Lo", "Geborand", "Champtercier", "Cravatte", "Count", 
      "Old Man", "Labarre", "Valjean", "Marguerite", "Mme. De R", "Isabeau", 
      "Gervais", "Tholomyes", "Listolier", "Fameuil", "Blacheville", 
      "Favourite", "Dahlia", "Zephine", "Fantine", "Mme. Thenardier", 
      "Thenardier", "Cosette", "Javert", "Fauchelevent", "Bamatabois", 
      "Perpetue", "Simplice", "Scaufflaire", "Woman1", "Judge", 
      "Champmathieu", "Brevet", "Chenildieu", "Cochepaille", "Pontmercy", 
      "Boulatruelle", "Eponine", "Anzelma", "Woman2", "Mother Innocent", 
      "Gribier", "Jondrette", "Mme. Burgon", "Gavroche", "Gillenormand", 
      "Magnon", "Mlle Gillenormand", "Mme. Pontmercy", "Mlle Vaubois", 
      "Lt. Gillenormand", "Marius", "Baroness T", "Mabeuf", "Enjolras", 
      "Combeferre", "Prouvaire", "Feuilly", "Courfeyrac", "Bahorel", 
      "Bossuet", "Joly", "Grantaire", "Mother Plutarch", "Gueulemer", "Babet",
       "Claquesous", "Montparnasse", "Toussaint", "Child1", "Child2", 
      "Brujon", "Mme. Hucheloup"}, 
    "Communities" -> {{
      "Myriel", "Napoleon", "Mlle Baptistine", "Mme. Magloire", 
       "Countess De Lo", "Geborand", "Champtercier", "Cravatte", "Count", 
       "Old Man"}, {
      "Labarre", "Valjean", "Marguerite", "Mme. De R", "Isabeau", "Gervais", 
       "Fantine", "Cosette", "Javert", "Perpetue", "Simplice", "Scaufflaire", 
       "Woman1", "Pontmercy", "Woman2", "Gillenormand", "Magnon", 
       "Mlle Gillenormand", "Mme. Pontmercy", "Mlle Vaubois", 
       "Lt. Gillenormand", "Marius", "Baroness T", "Toussaint"}, {
      "Tholomyes", "Listolier", "Fameuil", "Blacheville", "Favourite", 
       "Dahlia", "Zephine"}, {
      "Mme. Thenardier", "Thenardier", "Boulatruelle", "Eponine", "Anzelma", 
       "Gueulemer", "Babet", "Claquesous", "Montparnasse", "Brujon"}, {
      "Fauchelevent", "Mother Innocent", "Gribier"}, {
      "Bamatabois", "Judge", "Champmathieu", "Brevet", "Chenildieu", 
       "Cochepaille"}, {"Jondrette", "Mme. Burgon"}, {
      "Gavroche", "Mabeuf", "Enjolras", "Combeferre", "Prouvaire", "Feuilly", 
       "Courfeyrac", "Bahorel", "Bossuet", "Joly", "Grantaire", 
       "Mother Plutarch", "Mme. Hucheloup"}, {"Child1", "Child2"}}, 
    "Modularity" -> CompressedData["
1:eJxV0T1IQlEYBuAjCA4NETQW6FQNhUQtBXmHGhokSAoapIshaQWO/SJuURQk
aVwiygqDoChzMSG8CSFZGWFhqZlSkA1aKLj1w3m/qbM8vO/5zrmXezUmW79Z
wRjTs/9rxOcJcVtXN7jZU6XEFTPjLq586FvhCuKUneuw7ljQt4TndPxc2eqA
UesiV+hUubmOiGIDfhj2uaK9fIC55uFj5MZdyJKfJ5hL7gShfuKMKwc1IZgb
OueqK/YwN/vVFMFc9ST0zIhRZFv7NXLNOmTGV1I7HMN7qaQ47qst3aP/0T1g
3tidQN4ehMKan1SkHzEvFSFL1D6hn5eg4zIORf9CCv2t7hl5ZhTKplmysAyF
i7oXnIs7oachAEVzgXLKmUXe9EJBewQ9coD6vjDl9BXtWx6oL2Ug23qHcqZI
ub5C80Pf1LuUOZyLVUH1kpqy1AaZs4sc64Gyt5eyxk3P+92k+9jbHfbzAzfo
O/boOxum/ci5PP4n1h/3Wr78
     "], 
    "Merges" -> {{38, 39}, {37, 78}, {18, 19}, {35, 36}, {74, 75}, {20, 80}, {
     22, 23}, {21, 84}, {61, 67}, {62, 66}, {60, 65}, {69, 70}, {63, 88}, {3, 
     4}, {64, 87}, {77, 86}, {71, 89}, {83, 85}, {92, 93}, {72, 94}, {79, 
     81}, {76, 97}, {59, 90}, {52, 55}, {17, 95}, {25, 26}, {12, 44}, {27, 
     73}, {50, 101}, {96, 100}, {1, 91}, {42, 103}, {104, 105}, {28, 34}, {43,
      109}, {110, 111}, {57, 106}, {13, 24}, {30, 98}, {29, 45}, {49, 107}, {
     56, 113}, {31, 32}, {40, 53}, {51, 114}, {99, 112}, {58, 118}, {9, 
     108}, {115, 120}, {119, 122}, {46, 117}, {6, 125}, {2, 129}, {10, 130}, {
     8, 131}, {7, 132}, {5, 133}, {41, 123}, {16, 127}, {11, 136}, {14, 
     137}, {15, 138}, {33, 139}, {126, 140}, {68, 124}, {47, 48}, {54, 141}, {
     121, 144}, {135, 145}, {128, 146}, {142, 147}, {116, 148}, {82, 149}, {
     102, 150}, {143, 151}, {134, 152}}, "Algorithm" -> 
    "Walktrap"]]]], "Output"]
}, Open  ]],

Cell["Various properties of these objects can be queried:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cl1", "[", "\"\<Communities\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Myriel\"\>", ",", "\<\"Napoleon\"\>", 
     ",", "\<\"Mlle Baptistine\"\>", ",", "\<\"Mme. Magloire\"\>", 
     ",", "\<\"Countess De Lo\"\>", ",", "\<\"Geborand\"\>", 
     ",", "\<\"Champtercier\"\>", ",", "\<\"Cravatte\"\>", 
     ",", "\<\"Count\"\>", ",", "\<\"Old Man\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Labarre\"\>", ",", "\<\"Valjean\"\>", 
     ",", "\<\"Marguerite\"\>", ",", "\<\"Mme. De R\"\>", 
     ",", "\<\"Isabeau\"\>", ",", "\<\"Gervais\"\>", 
     ",", "\<\"Fauchelevent\"\>", ",", "\<\"Bamatabois\"\>", 
     ",", "\<\"Perpetue\"\>", ",", "\<\"Simplice\"\>", 
     ",", "\<\"Scaufflaire\"\>", ",", "\<\"Woman1\"\>", ",", "\<\"Judge\"\>", 
     ",", "\<\"Champmathieu\"\>", ",", "\<\"Brevet\"\>", 
     ",", "\<\"Chenildieu\"\>", ",", "\<\"Cochepaille\"\>", 
     ",", "\<\"Mother Innocent\"\>", ",", "\<\"Gribier\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Tholomyes\"\>", ",", "\<\"Listolier\"\>", 
     ",", "\<\"Fameuil\"\>", ",", "\<\"Blacheville\"\>", 
     ",", "\<\"Favourite\"\>", ",", "\<\"Dahlia\"\>", ",", "\<\"Zephine\"\>", 
     ",", "\<\"Fantine\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Mme. Thenardier\"\>", ",", "\<\"Thenardier\"\>", 
     ",", "\<\"Cosette\"\>", ",", "\<\"Javert\"\>", ",", "\<\"Pontmercy\"\>", 
     ",", "\<\"Boulatruelle\"\>", ",", "\<\"Eponine\"\>", 
     ",", "\<\"Anzelma\"\>", ",", "\<\"Woman2\"\>", 
     ",", "\<\"Gillenormand\"\>", ",", "\<\"Magnon\"\>", 
     ",", "\<\"Mlle Gillenormand\"\>", ",", "\<\"Mme. Pontmercy\"\>", 
     ",", "\<\"Mlle Vaubois\"\>", ",", "\<\"Lt. Gillenormand\"\>", 
     ",", "\<\"Marius\"\>", ",", "\<\"Baroness T\"\>", 
     ",", "\<\"Gueulemer\"\>", ",", "\<\"Babet\"\>", 
     ",", "\<\"Claquesous\"\>", ",", "\<\"Montparnasse\"\>", 
     ",", "\<\"Toussaint\"\>", ",", "\<\"Brujon\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Jondrette\"\>", ",", "\<\"Mme. Burgon\"\>", 
     ",", "\<\"Gavroche\"\>", ",", "\<\"Mabeuf\"\>", ",", "\<\"Enjolras\"\>", 
     ",", "\<\"Combeferre\"\>", ",", "\<\"Prouvaire\"\>", 
     ",", "\<\"Feuilly\"\>", ",", "\<\"Courfeyrac\"\>", 
     ",", "\<\"Bahorel\"\>", ",", "\<\"Bossuet\"\>", ",", "\<\"Joly\"\>", 
     ",", "\<\"Grantaire\"\>", ",", "\<\"Mother Plutarch\"\>", 
     ",", "\<\"Child1\"\>", ",", "\<\"Child2\"\>", 
     ",", "\<\"Mme. Hucheloup\"\>"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", 
  RowBox[{"g", ",", 
   RowBox[{"cl1", "[", "\"\<Communities\>\"", "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{
    {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{4.717251694385474, 3.5457845295470674`}, {
       4.832577384683332, 3.076433979377581}, {5.506442711581608, 
       2.6856867582224297`}, {5.791678469222706, 2.6856867582224297`}, {
       5.817990192517219, 2.912937540306094}, {5.821692087213489, 
       3.16325582299364}, {5.821692087213489, 3.4484915806347374`}, {
       5.784822081861242, 3.718911943290571}, {5.699653028619786, 
       3.9792684775256952`}, {5.584619322771274, 4.203176843486898}, {
       5.457006655116327, 4.392427772686528}, {5.171770897475229, 
       4.392427772686528}, {4.717251694385474, 3.831020287188165}}, 
       SplineClosed -> True]]}, 
    {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{2.6596187702199736`, 2.5543853337423714`}, {
       2.795594996675131, 2.0624279187668018`}, {3.3801965232785673`, 
       1.4353728986317167`}, {3.665432280919665, 1.4353728986317167`}, {
       4.029481882772436, 1.8894329135262677`}, {4.029481882772436, 
       2.1746686711673653`}, {3.315500101066806, 3.5936814962610644`}, {
       3.0302643434257086`, 3.5936814962610644`}, {2.8412123626592316`, 
       3.5929841503483675`}, {2.687429914547925, 3.4207137868425046`}, {
       2.6618240812010794`, 2.984971429775447}, {2.6596187702199736`, 
       2.839621091383469}}, SplineClosed -> True]]}, 
    {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{1.8464596941008988`, 0.20218889017311115`}, {
       1.9146070396306487`, -0.10016858888964475`}, {
       2.0630632208711113`, -0.14261787882054888`}, {
       2.348298978512209, -0.14261787882054888`}, {
       2.5815905012952154`, -0.12704798840897935`}, {
       2.7917711739228737`, -0.007916872597200197}, {2.7917711739228737`, 
       0.27731888504389757`}, {2.571922017687443, 0.753903129009109}, {
       2.2866862600463453`, 0.753903129009109}, {1.8464596941008988`, 
       0.4874246478142089}}, SplineClosed -> True]]}, 
    {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{-0.14261787882054888`, 
       2.313356222429741}, {-0.08051884073630478, 1.5699174213446052`}, {
       0.18277628894836007`, 1.1283094185799012`}, {0.46801204658945783`, 
       1.1283094185799012`}, {1.5183735244515661`, 1.6315184049330078`}, {
       1.6056587819574544`, 1.7944486386694218`}, {1.6056587819574544`, 
       2.0796843963105194`}, {1.4676546989251995`, 2.5111573718009357`}, {
       1.2702003493548366`, 2.9004466385858834`}, {1.1498965910051444`, 
       3.041730123466091}, {0.5980130749786333, 3.0491955414226357`}, {
       0.31277731733753555`, 3.0491955414226357`}, {-0.14261787882054888`, 
       2.5985919800708386`}}, SplineClosed -> True]]}, 
    {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{-0.09596385021222631, 4.717702293570447}, {
       0.4378291766471397, 4.253908759003759}, {1.1085771900337549`, 
       4.185858674243918}, {1.3938129476748524`, 4.185858674243918}, {
       1.5432679700762177`, 4.350831489237071}, {1.8736430778476008`, 
       4.894501077708033}, {1.8736430778476008`, 5.179736835349131}, {
       1.273228626696941, 5.96229578649291}, {0.9879928690558434, 
       5.96229578649291}, {-0.09596385021222631, 5.002938051211546}}, 
       SplineClosed -> True]]}}, {
    {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
     LineBox[{{5.114256983195584, 3.4675005781091732`}, {5.67537231369667, 
      3.0555554191266427`}}], 
     LineBox[{{5.114256983195584, 3.4675005781091732`}, {4.975195263503881, 
      3.21905185819813}}], 
     LineBox[{{5.114256983195584, 3.4675005781091732`}, {4.859869573206023, 
      3.688402408367616}}], 
     LineBox[{{5.114256983195584, 3.4675005781091732`}, {5.649060590402157, 
      2.8283046370429785`}}], 
     LineBox[{{5.114256983195584, 3.4675005781091732`}, {5.67907420839294, 
      3.3058737018141886`}}], 
     LineBox[{{5.114256983195584, 3.4675005781091732`}, {5.642204203040693, 
      3.576294064470022}}], 
     LineBox[{{5.114256983195584, 3.4675005781091732`}, {5.557035149799237, 
      3.8366505987051465`}}], 
     LineBox[{{5.114256983195584, 3.4675005781091732`}, {5.4420014439507245`, 
      4.060558964666349}}], 
     LineBox[{{5.114256983195584, 3.4675005781091732`}, {5.314388776295778, 
      4.2498098938659785`}}], 
     BezierCurveBox[{{5.114256983195584, 3.4675005781091732`}, {
      4.438440944981779, 3.3043270989074545`}, {3.8937746166617293`, 
      3.1503359162566023`}, {3.3491082883416787`, 2.99634473360575}, {
      2.804441960021628, 2.8423535509548983`}},
      SplineDegree->2], 
     LineBox[{{4.975195263503881, 3.21905185819813}, {4.859869573206023, 
      3.688402408367616}}], 
     BezierCurveBox[{{4.975195263503881, 3.21905185819813}, {
      4.438440944981779, 3.3043270989074545`}, {3.8937746166617293`, 
      3.1503359162566023`}, {3.3491082883416787`, 2.99634473360575}, {
      2.804441960021628, 2.8423535509548983`}},
      SplineDegree->2], 
     BezierCurveBox[{{4.859869573206023, 3.688402408367616}, {
      4.438440944981779, 3.3043270989074545`}, {3.8937746166617293`, 
      3.1503359162566023`}, {3.3491082883416787`, 2.99634473360575}, {
      2.804441960021628, 2.8423535509548983`}},
      SplineDegree->2], 
     LineBox[{{2.8022366490405224`, 2.69700321256292}, {2.804441960021628, 
      2.8423535509548983`}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {2.9382128754956796`, 
      2.2050457975873505`}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {2.9838302414797804`, 
      3.4503662715278187`}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {2.8300477933684736`, 
      3.278095908021956}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {3.1728822222462574`, 
      3.4510636174405156`}}], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.927516126747615, 1.866755711394122}, {2.761445464120708, 
      1.4482655576589347`}, {2.5953748014938007`, 1.0297754039237474`}, {
      2.429304138866894, 0.6112852501885602}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      1.0709688927924816`, 2.1627195095864415`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      0.8942411013930776, 2.4443984785428694`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      1.087618027418261, 1.974918825697858}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      1.3250368201046507`, 2.368539492980387}},
      SplineDegree->2], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {3.386057379366359, 
      2.4260708375899083`}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {3.0850769705939194`, 
      2.6893802512171967`}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {3.117387738662265, 
      2.1114589484348327`}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {3.1777351846092694`, 
      2.442584748215432}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {2.882087877387918, 
      2.4762360051419234`}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {3.3273629287786948`, 
      2.940280450823578}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {3.154811924387471, 
      2.9607461439600002`}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {3.176356676632317, 
      3.1936948781872623`}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {3.313376999280763, 
      3.1156216944687007`}}], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {3.0175223779492315`, 
      3.086737354209954}}], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      1.4630409031369056`, 1.9370665174899706`}},
      SplineDegree->2], 
     LineBox[{{2.804441960021628, 2.8423535509548983`}, {3.417037163894844, 
      2.6427806180311717`}}], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.433730023262396, 3.238010645017141}, {2.0630180865031638`, 
      3.6336677390793835`}, {1.6923061497439313`, 4.029324833141626}, {
      1.400650091255669, 4.49344936805762}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      0.7997625170575939, 1.9625823601195358`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      0.8693780268575491, 1.7865216736339589`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      0.7703885446163246, 2.387772984158845}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.433730023262396, 3.238010645017141}, {2.0630180865031638`, 
      3.6336677390793835`}, {1.6923061497439313`, 4.029324833141626}, {
      1.2511950688543036`, 4.328476553064467}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.433730023262396, 3.238010645017141}, {2.0630180865031638`, 
      3.6336677390793835`}, {1.6923061497439313`, 4.029324833141626}, {
      1.3129374788441246`, 4.453019860489519}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      0.9384452904916014, 2.764702935185972}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      1.1275824705342878`, 2.7578287597653346`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      1.089778844333986, 2.618832167608058}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      1.0072787121845956`, 2.899112244645542}},
      SplineDegree->2], 
     BezierCurveBox[{{2.804441960021628, 2.8423535509548983`}, {
      2.439771903174203, 2.6363899532276833`}, {2.0014052506841926`, 
      2.5284421297025705`}, {1.5630385981941828`, 2.420494306177458}, {
      1.3757556456310174`, 1.7741362837535568`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.9382128754956796`, 2.2050457975873505`}, {
      2.927516126747615, 1.866755711394122}, {2.761445464120708, 
      1.4482655576589347`}, {2.5953748014938007`, 1.0297754039237474`}, {
      2.429304138866894, 0.6112852501885602}},
      SplineDegree->2], 
     LineBox[{{1.9890775729214476`, 0.34480676899366003`}, {2.296743054516812,
       0.12924439212916328`}}], 
     LineBox[{{1.9890775729214476`, 0.34480676899366003`}, {
      2.0572249184511975`, 0.04244928993090413}}], 
     LineBox[{{1.9890775729214476`, 0.34480676899366003`}, {2.20568109969166, 
      0.}}], LineBox[{{1.9890775729214476`, 0.34480676899366003`}, {
      2.4389726224746666`, 0.015569890411569531`}}], 
     LineBox[{{1.9890775729214476`, 0.34480676899366003`}, {
      2.5132466339741546`, 0.15953298440357733`}}], 
     LineBox[{{1.9890775729214476`, 0.34480676899366003`}, {2.649153295102325,
       0.13470100622334868`}}], 
     LineBox[{{1.9890775729214476`, 0.34480676899366003`}, {2.429304138866894,
       0.6112852501885602}}], 
     BezierCurveBox[{{1.9890775729214476`, 0.34480676899366003`}, {
      1.947322803682776, 0.9454378578312701}, {1.641432094876837, 
      1.3861818579519403`}, {1.335541386070898, 1.8269258580726102`}, {
      1.087618027418261, 1.974918825697858}},
      SplineDegree->2], 
     BezierCurveBox[{{1.9890775729214476`, 0.34480676899366003`}, {
      1.947322803682776, 0.9454378578312701}, {1.641432094876837, 
      1.3861818579519403`}, {1.335541386070898, 1.8269258580726102`}, {
      0.7703885446163246, 2.387772984158845}},
      SplineDegree->2], 
     LineBox[{{2.296743054516812, 0.12924439212916328`}, {2.0572249184511975`,
       0.04244928993090413}}], 
     LineBox[{{2.296743054516812, 0.12924439212916328`}, {2.20568109969166, 
      0.}}], LineBox[{{2.296743054516812, 0.12924439212916328`}, {
      2.4389726224746666`, 0.015569890411569531`}}], 
     LineBox[{{2.296743054516812, 0.12924439212916328`}, {2.5132466339741546`,
       0.15953298440357733`}}], 
     LineBox[{{2.296743054516812, 0.12924439212916328`}, {2.649153295102325, 
      0.13470100622334868`}}], 
     LineBox[{{2.296743054516812, 0.12924439212916328`}, {2.429304138866894, 
      0.6112852501885602}}], 
     LineBox[{{2.0572249184511975`, 0.04244928993090413}, {2.20568109969166, 
      0.}}], LineBox[{{2.0572249184511975`, 0.04244928993090413}, {
      2.4389726224746666`, 0.015569890411569531`}}], 
     LineBox[{{2.0572249184511975`, 0.04244928993090413}, {
      2.5132466339741546`, 0.15953298440357733`}}], 
     LineBox[{{2.0572249184511975`, 0.04244928993090413}, {2.649153295102325, 
      0.13470100622334868`}}], 
     LineBox[{{2.0572249184511975`, 0.04244928993090413}, {2.429304138866894, 
      0.6112852501885602}}], 
     LineBox[{{2.20568109969166, 0.}, {2.4389726224746666`, 
      0.015569890411569531`}}], 
     LineBox[{{2.20568109969166, 0.}, {2.5132466339741546`, 
      0.15953298440357733`}}], 
     LineBox[{{2.20568109969166, 0.}, {2.649153295102325, 
      0.13470100622334868`}}], 
     LineBox[{{2.20568109969166, 0.}, {2.429304138866894, 
      0.6112852501885602}}], 
     LineBox[{{2.4389726224746666`, 0.015569890411569531`}, {
      2.5132466339741546`, 0.15953298440357733`}}], 
     LineBox[{{2.4389726224746666`, 0.015569890411569531`}, {
      2.649153295102325, 0.13470100622334868`}}], 
     LineBox[{{2.4389726224746666`, 0.015569890411569531`}, {
      2.429304138866894, 0.6112852501885602}}], 
     LineBox[{{2.5132466339741546`, 0.15953298440357733`}, {2.649153295102325,
       0.13470100622334868`}}], 
     LineBox[{{2.5132466339741546`, 0.15953298440357733`}, {2.429304138866894,
       0.6112852501885602}}], 
     LineBox[{{2.649153295102325, 0.13470100622334868`}, {2.429304138866894, 
      0.6112852501885602}}], 
     BezierCurveBox[{{2.429304138866894, 0.6112852501885602}, {
      1.947322803682776, 0.9454378578312701}, {1.641432094876837, 
      1.3861818579519403`}, {1.335541386070898, 1.8269258580726102`}, {
      1.0709688927924816`, 2.1627195095864415`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.429304138866894, 0.6112852501885602}, {
      1.947322803682776, 0.9454378578312701}, {1.641432094876837, 
      1.3861818579519403`}, {1.335541386070898, 1.8269258580726102`}, {
      0.8942411013930776, 2.4443984785428694`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.429304138866894, 0.6112852501885602}, {
      1.947322803682776, 0.9454378578312701}, {1.641432094876837, 
      1.3861818579519403`}, {1.335541386070898, 1.8269258580726102`}, {
      1.3250368201046507`, 2.368539492980387}},
      SplineDegree->2], 
     BezierCurveBox[{{2.429304138866894, 0.6112852501885602}, {
      2.5953748014938007`, 1.0297754039237474`}, {2.761445464120708, 
      1.4482655576589347`}, {2.927516126747615, 1.866755711394122}, {
      3.0850769705939194`, 2.6893802512171967`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.429304138866894, 0.6112852501885602}, {
      2.5953748014938007`, 1.0297754039237474`}, {2.761445464120708, 
      1.4482655576589347`}, {2.927516126747615, 1.866755711394122}, {
      3.522814402099116, 1.5779907774522657`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.429304138866894, 0.6112852501885602}, {
      2.5953748014938007`, 1.0297754039237474`}, {2.761445464120708, 
      1.4482655576589347`}, {2.927516126747615, 1.866755711394122}, {
      3.117387738662265, 2.1114589484348327`}},
      SplineDegree->2], 
     LineBox[{{1.0709688927924816`, 2.1627195095864415`}, {0.8942411013930776,
       2.4443984785428694`}}], 
     LineBox[{{1.0709688927924816`, 2.1627195095864415`}, {1.087618027418261, 
      1.974918825697858}}], 
     LineBox[{{1.0709688927924816`, 2.1627195095864415`}, {
      1.3250368201046507`, 2.368539492980387}}], 
     LineBox[{{1.0709688927924816`, 2.1627195095864415`}, {0.4846587319609086,
       2.63913193357965}}], 
     LineBox[{{1.0709688927924816`, 2.1627195095864415`}, {
      0.29166127418844146`, 2.2435332895217086`}}], 
     LineBox[{{1.0709688927924816`, 2.1627195095864415`}, {0.5609306376538059,
       1.5323883870545267`}}], 
     LineBox[{{1.0709688927924816`, 2.1627195095864415`}, {0.9384452904916014,
       2.764702935185972}}], 
     LineBox[{{1.0709688927924816`, 2.1627195095864415`}, {
      1.1275824705342878`, 2.7578287597653346`}}], 
     LineBox[{{1.0709688927924816`, 2.1627195095864415`}, {1.089778844333986, 
      2.618832167608058}}], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {1.087618027418261, 
      1.974918825697858}}], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {1.3250368201046507`,
       2.368539492980387}}], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {0.2235922954563716, 
      2.4307177366413812`}}], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {0.06723325527377444,
       2.1896322628910267`}}], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {0.4846587319609086, 
      2.63913193357965}}], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {
      0.29166127418844146`, 2.2435332895217086`}}], 
     BezierCurveBox[{{0.8942411013930776, 2.4443984785428694`}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      1.400650091255669, 4.49344936805762}},
      SplineDegree->2], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {0.7703885446163246, 
      2.387772984158845}}], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {0.9384452904916014, 
      2.764702935185972}}], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {1.1275824705342878`,
       2.7578287597653346`}}], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {1.089778844333986, 
      2.618832167608058}}], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {1.0072787121845956`,
       2.899112244645542}}], 
     LineBox[{{0.8942411013930776, 2.4443984785428694`}, {
      0.45539519615808444`, 2.906577662602087}}], 
     LineBox[{{1.087618027418261, 1.974918825697858}, {1.3250368201046507`, 
      2.368539492980387}}], 
     LineBox[{{1.087618027418261, 1.974918825697858}, {1.4630409031369056`, 
      1.9370665174899706`}}], 
     LineBox[{{1.087618027418261, 1.974918825697858}, {0.7997625170575939, 
      1.9625823601195358`}}], 
     LineBox[{{1.087618027418261, 1.974918825697858}, {0.8693780268575491, 
      1.7865216736339589`}}], 
     LineBox[{{1.087618027418261, 1.974918825697858}, {0.4456318914842279, 
      1.8817100363510608`}}], 
     LineBox[{{1.087618027418261, 1.974918825697858}, {0.7703885446163246, 
      2.387772984158845}}], 
     LineBox[{{1.087618027418261, 1.974918825697858}, {1.3757556456310174`, 
      1.7741362837535568`}}], 
     BezierCurveBox[{{1.3250368201046507`, 2.368539492980387}, {
      1.5630385981941828`, 2.420494306177458}, {2.0014052506841926`, 
      2.5284421297025705`}, {2.439771903174203, 2.6363899532276833`}, {
      3.386057379366359, 2.4260708375899083`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.3250368201046507`, 2.368539492980387}, {
      1.5630385981941828`, 2.420494306177458}, {2.0014052506841926`, 
      2.5284421297025705`}, {2.439771903174203, 2.6363899532276833`}, {
      3.0850769705939194`, 2.6893802512171967`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.3250368201046507`, 2.368539492980387}, {
      1.5630385981941828`, 2.420494306177458}, {2.0014052506841926`, 
      2.5284421297025705`}, {2.439771903174203, 2.6363899532276833`}, {
      3.117387738662265, 2.1114589484348327`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.3250368201046507`, 2.368539492980387}, {
      1.5630385981941828`, 2.420494306177458}, {2.0014052506841926`, 
      2.5284421297025705`}, {2.439771903174203, 2.6363899532276833`}, {
      2.882087877387918, 2.4762360051419234`}},
      SplineDegree->2], 
     LineBox[{{1.3250368201046507`, 2.368539492980387}, {1.4630409031369056`, 
      1.9370665174899706`}}], 
     BezierCurveBox[{{1.3250368201046507`, 2.368539492980387}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      1.400650091255669, 4.49344936805762}},
      SplineDegree->2], 
     BezierCurveBox[{{1.3250368201046507`, 2.368539492980387}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      1.2511950688543036`, 4.328476553064467}},
      SplineDegree->2], 
     LineBox[{{1.3250368201046507`, 2.368539492980387}, {0.9384452904916014, 
      2.764702935185972}}], 
     LineBox[{{1.3250368201046507`, 2.368539492980387}, {1.1275824705342878`, 
      2.7578287597653346`}}], 
     LineBox[{{1.3250368201046507`, 2.368539492980387}, {1.089778844333986, 
      2.618832167608058}}], 
     LineBox[{{1.3250368201046507`, 2.368539492980387}, {1.0072787121845956`, 
      2.899112244645542}}], 
     LineBox[{{1.3250368201046507`, 2.368539492980387}, {1.3757556456310174`, 
      1.7741362837535568`}}], 
     LineBox[{{3.386057379366359, 2.4260708375899083`}, {3.417037163894844, 
      2.6427806180311717`}}], 
     LineBox[{{3.386057379366359, 2.4260708375899083`}, {3.886864003951887, 
      2.0320507923468165`}}], 
     LineBox[{{3.0850769705939194`, 2.6893802512171967`}, {
      3.3273629287786948`, 2.940280450823578}}], 
     LineBox[{{3.0850769705939194`, 2.6893802512171967`}, {3.154811924387471, 
      2.9607461439600002`}}], 
     LineBox[{{3.0850769705939194`, 2.6893802512171967`}, {3.176356676632317, 
      3.1936948781872623`}}], 
     LineBox[{{3.0850769705939194`, 2.6893802512171967`}, {3.313376999280763, 
      3.1156216944687007`}}], 
     LineBox[{{3.0850769705939194`, 2.6893802512171967`}, {
      3.0175223779492315`, 3.086737354209954}}], 
     LineBox[{{3.522814402099116, 1.5779907774522657`}, {3.117387738662265, 
      2.1114589484348327`}}], 
     LineBox[{{3.3273629287786948`, 2.940280450823578}, {3.154811924387471, 
      2.9607461439600002`}}], 
     LineBox[{{3.3273629287786948`, 2.940280450823578}, {3.176356676632317, 
      3.1936948781872623`}}], 
     LineBox[{{3.3273629287786948`, 2.940280450823578}, {3.313376999280763, 
      3.1156216944687007`}}], 
     LineBox[{{3.3273629287786948`, 2.940280450823578}, {3.0175223779492315`, 
      3.086737354209954}}], 
     LineBox[{{3.154811924387471, 2.9607461439600002`}, {3.176356676632317, 
      3.1936948781872623`}}], 
     LineBox[{{3.154811924387471, 2.9607461439600002`}, {3.313376999280763, 
      3.1156216944687007`}}], 
     LineBox[{{3.154811924387471, 2.9607461439600002`}, {3.0175223779492315`, 
      3.086737354209954}}], 
     LineBox[{{3.176356676632317, 3.1936948781872623`}, {3.313376999280763, 
      3.1156216944687007`}}], 
     LineBox[{{3.176356676632317, 3.1936948781872623`}, {3.0175223779492315`, 
      3.086737354209954}}], 
     LineBox[{{3.313376999280763, 3.1156216944687007`}, {3.0175223779492315`, 
      3.086737354209954}}], 
     LineBox[{{0.2235922954563716, 2.4307177366413812`}, {0.06209903808424411,
       1.7125353001651542`}}], 
     LineBox[{{0.2235922954563716, 2.4307177366413812`}, {0.7703885446163246, 
      2.387772984158845}}], 
     LineBox[{{0.4846587319609086, 2.63913193357965}, {0.29166127418844146`, 
      2.2435332895217086`}}], 
     LineBox[{{0.4846587319609086, 2.63913193357965}, {0.7703885446163246, 
      2.387772984158845}}], 
     BezierCurveBox[{{0.4846587319609086, 2.63913193357965}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      0.5804470554676886, 4.396526637824309}},
      SplineDegree->2], 
     BezierCurveBox[{{0.4846587319609086, 2.63913193357965}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      0.8949098793428076, 4.450720800686764}},
      SplineDegree->2], 
     LineBox[{{0.4846587319609086, 2.63913193357965}, {0.9384452904916014, 
      2.764702935185972}}], 
     LineBox[{{0.4846587319609086, 2.63913193357965}, {1.1275824705342878`, 
      2.7578287597653346`}}], 
     LineBox[{{0.4846587319609086, 2.63913193357965}, {1.089778844333986, 
      2.618832167608058}}], 
     LineBox[{{0.4846587319609086, 2.63913193357965}, {1.0072787121845956`, 
      2.899112244645542}}], 
     LineBox[{{0.4846587319609086, 2.63913193357965}, {0.45539519615808444`, 
      2.906577662602087}}], 
     LineBox[{{1.1306107478763923`, 5.819677907672361}, {1.3492880102725238`, 
      5.230579218494876}}], 
     LineBox[{{1.3492880102725238`, 5.230579218494876}, {1.400650091255669, 
      4.49344936805762}}], 
     BezierCurveBox[{{1.400650091255669, 4.49344936805762}, {
      1.0444226120999793`, 3.98309555424814}, {0.9781345417644367, 
      3.4956909301812074`}, {0.9118464714288939, 3.0082863061142753`}, {
      0.7703885446163246, 2.387772984158845}},
      SplineDegree->2], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {0.5804470554676886, 
      4.396526637824309}}], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {1.2511950688543036`, 
      4.328476553064467}}], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {0.7366259269774376, 
      4.476901388146921}}], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {0.8935502642586781, 
      4.912771134995072}}], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {0.6855212471852639, 
      4.605033854372264}}], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {0.8949098793428076, 
      4.450720800686764}}], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {1.0010185410095098`, 
      4.617132804091395}}], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {1.3129374788441246`, 
      4.453019860489519}}], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {0.8585500572849922, 
      4.653345368267351}}], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {1.0697383817417716`, 
      4.9074130700751475`}}], 
     BezierCurveBox[{{1.400650091255669, 4.49344936805762}, {
      1.0444226120999793`, 3.98309555424814}, {0.9781345417644367, 
      3.4956909301812074`}, {0.9118464714288939, 3.0082863061142753`}, {
      0.9384452904916014, 2.764702935185972}},
      SplineDegree->2], 
     BezierCurveBox[{{1.400650091255669, 4.49344936805762}, {
      1.0444226120999793`, 3.98309555424814}, {0.9781345417644367, 
      3.4956909301812074`}, {0.9118464714288939, 3.0082863061142753`}, {
      1.1275824705342878`, 2.7578287597653346`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.400650091255669, 4.49344936805762}, {
      1.0444226120999793`, 3.98309555424814}, {0.9781345417644367, 
      3.4956909301812074`}, {0.9118464714288939, 3.0082863061142753`}, {
      1.0072787121845956`, 2.899112244645542}},
      SplineDegree->2], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {1.613506872157334, 
      5.111600421906976}}], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {1.731025199027052, 
      5.037118956528582}}], 
     BezierCurveBox[{{1.400650091255669, 4.49344936805762}, {
      1.0444226120999793`, 3.98309555424814}, {0.9781345417644367, 
      3.4956909301812074`}, {0.9118464714288939, 3.0082863061142753`}, {
      0.45539519615808444`, 2.906577662602087}},
      SplineDegree->2], 
     LineBox[{{1.400650091255669, 4.49344936805762}, {1.2991475144021858`, 
      4.904809271034196}}], 
     LineBox[{{0.7997625170575939, 1.9625823601195358`}, {0.5609306376538059, 
      1.5323883870545267`}}], 
     LineBox[{{0.7997625170575939, 1.9625823601195358`}, {0.8693780268575491, 
      1.7865216736339589`}}], 
     LineBox[{{0.7997625170575939, 1.9625823601195358`}, {0.4456318914842279, 
      1.8817100363510608`}}], 
     LineBox[{{0.7997625170575939, 1.9625823601195358`}, {0.7703885446163246, 
      2.387772984158845}}], 
     LineBox[{{0.7997625170575939, 1.9625823601195358`}, {0., 
      2.45597410125029}}], 
     LineBox[{{0.8693780268575491, 1.7865216736339589`}, {0.06209903808424411,
       1.7125353001651542`}}], 
     LineBox[{{0.8693780268575491, 1.7865216736339589`}, {
      0.32539416776890895`, 1.2709272974004502`}}], 
     LineBox[{{0.8693780268575491, 1.7865216736339589`}, {0.4456318914842279, 
      1.8817100363510608`}}], 
     LineBox[{{0.8693780268575491, 1.7865216736339589`}, {0.7703885446163246, 
      2.387772984158845}}], 
     LineBox[{{0.4456318914842279, 1.8817100363510608`}, {0.7703885446163246, 
      2.387772984158845}}], 
     LineBox[{{0.7703885446163246, 2.387772984158845}, {0., 
      2.45597410125029}}], 
     BezierCurveBox[{{0.7703885446163246, 2.387772984158845}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      0.5804470554676886, 4.396526637824309}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7703885446163246, 2.387772984158845}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      1.2511950688543036`, 4.328476553064467}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7703885446163246, 2.387772984158845}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      0.7366259269774376, 4.476901388146921}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7703885446163246, 2.387772984158845}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      0.6855212471852639, 4.605033854372264}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7703885446163246, 2.387772984158845}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      0.8949098793428076, 4.450720800686764}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7703885446163246, 2.387772984158845}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      1.0010185410095098`, 4.617132804091395}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7703885446163246, 2.387772984158845}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      1.3129374788441246`, 4.453019860489519}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7703885446163246, 2.387772984158845}, {
      0.9118464714288939, 3.0082863061142753`}, {0.9781345417644367, 
      3.4956909301812074`}, {1.0444226120999793`, 3.98309555424814}, {
      0.8585500572849922, 4.653345368267351}},
      SplineDegree->2], 
     LineBox[{{0.5804470554676886, 4.396526637824309}, {1.2511950688543036`, 
      4.328476553064467}}], 
     LineBox[{{0.5804470554676886, 4.396526637824309}, {0.7366259269774376, 
      4.476901388146921}}], 
     LineBox[{{0.5804470554676886, 4.396526637824309}, {0.6855212471852639, 
      4.605033854372264}}], 
     LineBox[{{0.5804470554676886, 4.396526637824309}, {0.8949098793428076, 
      4.450720800686764}}], 
     LineBox[{{0.5804470554676886, 4.396526637824309}, {1.0010185410095098`, 
      4.617132804091395}}], 
     LineBox[{{0.5804470554676886, 4.396526637824309}, {1.3129374788441246`, 
      4.453019860489519}}], 
     LineBox[{{0.5804470554676886, 4.396526637824309}, {0.8585500572849922, 
      4.653345368267351}}], 
     LineBox[{{0.5804470554676886, 4.396526637824309}, {0.04665402860832257, 
      4.860320172390996}}], 
     LineBox[{{1.2511950688543036`, 4.328476553064467}, {0.7366259269774376, 
      4.476901388146921}}], 
     LineBox[{{1.2511950688543036`, 4.328476553064467}, {0.8935502642586781, 
      4.912771134995072}}], 
     LineBox[{{1.2511950688543036`, 4.328476553064467}, {0.6855212471852639, 
      4.605033854372264}}], 
     LineBox[{{1.2511950688543036`, 4.328476553064467}, {0.8949098793428076, 
      4.450720800686764}}], 
     LineBox[{{1.2511950688543036`, 4.328476553064467}, {1.0010185410095098`, 
      4.617132804091395}}], 
     LineBox[{{1.2511950688543036`, 4.328476553064467}, {1.3129374788441246`, 
      4.453019860489519}}], 
     LineBox[{{1.2511950688543036`, 4.328476553064467}, {0.8585500572849922, 
      4.653345368267351}}], 
     LineBox[{{1.2511950688543036`, 4.328476553064467}, {1.0697383817417716`, 
      4.9074130700751475`}}], 
     BezierCurveBox[{{1.2511950688543036`, 4.328476553064467}, {
      1.0444226120999793`, 3.98309555424814}, {0.9781345417644367, 
      3.4956909301812074`}, {0.9118464714288939, 3.0082863061142753`}, {
      1.089778844333986, 2.618832167608058}},
      SplineDegree->2], 
     LineBox[{{1.2511950688543036`, 4.328476553064467}, {1.2991475144021858`, 
      4.904809271034196}}], 
     LineBox[{{0.7366259269774376, 4.476901388146921}, {0.8935502642586781, 
      4.912771134995072}}], 
     LineBox[{{0.7366259269774376, 4.476901388146921}, {0.6855212471852639, 
      4.605033854372264}}], 
     LineBox[{{0.7366259269774376, 4.476901388146921}, {0.8949098793428076, 
      4.450720800686764}}], 
     LineBox[{{0.7366259269774376, 4.476901388146921}, {1.0010185410095098`, 
      4.617132804091395}}], 
     LineBox[{{0.7366259269774376, 4.476901388146921}, {1.3129374788441246`, 
      4.453019860489519}}], 
     LineBox[{{0.7366259269774376, 4.476901388146921}, {0.8585500572849922, 
      4.653345368267351}}], 
     LineBox[{{0.7366259269774376, 4.476901388146921}, {1.0697383817417716`, 
      4.9074130700751475`}}], 
     LineBox[{{0.8935502642586781, 4.912771134995072}, {0.6855212471852639, 
      4.605033854372264}}], 
     LineBox[{{0.8935502642586781, 4.912771134995072}, {0.8949098793428076, 
      4.450720800686764}}], 
     LineBox[{{0.8935502642586781, 4.912771134995072}, {1.0010185410095098`, 
      4.617132804091395}}], 
     LineBox[{{0.8935502642586781, 4.912771134995072}, {1.3129374788441246`, 
      4.453019860489519}}], 
     LineBox[{{0.8935502642586781, 4.912771134995072}, {0.8585500572849922, 
      4.653345368267351}}], 
     LineBox[{{0.8935502642586781, 4.912771134995072}, {1.0697383817417716`, 
      4.9074130700751475`}}], 
     LineBox[{{0.6855212471852639, 4.605033854372264}, {0.8949098793428076, 
      4.450720800686764}}], 
     LineBox[{{0.6855212471852639, 4.605033854372264}, {1.0010185410095098`, 
      4.617132804091395}}], 
     LineBox[{{0.6855212471852639, 4.605033854372264}, {1.3129374788441246`, 
      4.453019860489519}}], 
     LineBox[{{0.6855212471852639, 4.605033854372264}, {0.8585500572849922, 
      4.653345368267351}}], 
     LineBox[{{0.6855212471852639, 4.605033854372264}, {1.0697383817417716`, 
      4.9074130700751475`}}], 
     LineBox[{{0.8949098793428076, 4.450720800686764}, {1.0010185410095098`, 
      4.617132804091395}}], 
     LineBox[{{0.8949098793428076, 4.450720800686764}, {1.3129374788441246`, 
      4.453019860489519}}], 
     LineBox[{{0.8949098793428076, 4.450720800686764}, {0.8585500572849922, 
      4.653345368267351}}], 
     LineBox[{{0.8949098793428076, 4.450720800686764}, {1.0697383817417716`, 
      4.9074130700751475`}}], 
     LineBox[{{0.8949098793428076, 4.450720800686764}, {1.2991475144021858`, 
      4.904809271034196}}], 
     LineBox[{{1.0010185410095098`, 4.617132804091395}, {1.3129374788441246`, 
      4.453019860489519}}], 
     LineBox[{{1.0010185410095098`, 4.617132804091395}, {0.8585500572849922, 
      4.653345368267351}}], 
     LineBox[{{1.0010185410095098`, 4.617132804091395}, {1.0697383817417716`, 
      4.9074130700751475`}}], 
     LineBox[{{1.0010185410095098`, 4.617132804091395}, {1.2991475144021858`, 
      4.904809271034196}}], 
     LineBox[{{1.3129374788441246`, 4.453019860489519}, {0.8585500572849922, 
      4.653345368267351}}], 
     LineBox[{{1.3129374788441246`, 4.453019860489519}, {1.0697383817417716`, 
      4.9074130700751475`}}], 
     LineBox[{{1.3129374788441246`, 4.453019860489519}, {1.2991475144021858`, 
      4.904809271034196}}], 
     LineBox[{{0.8585500572849922, 4.653345368267351}, {1.0697383817417716`, 
      4.9074130700751475`}}], 
     LineBox[{{0.8585500572849922, 4.653345368267351}, {1.2991475144021858`, 
      4.904809271034196}}], 
     LineBox[{{1.0697383817417716`, 4.9074130700751475`}, {
      1.2991475144021858`, 4.904809271034196}}], 
     LineBox[{{0.9384452904916014, 2.764702935185972}, {1.1275824705342878`, 
      2.7578287597653346`}}], 
     LineBox[{{0.9384452904916014, 2.764702935185972}, {1.089778844333986, 
      2.618832167608058}}], 
     LineBox[{{0.9384452904916014, 2.764702935185972}, {1.0072787121845956`, 
      2.899112244645542}}], 
     LineBox[{{0.9384452904916014, 2.764702935185972}, {0.45539519615808444`, 
      2.906577662602087}}], 
     LineBox[{{1.1275824705342878`, 2.7578287597653346`}, {1.089778844333986, 
      2.618832167608058}}], 
     LineBox[{{1.1275824705342878`, 2.7578287597653346`}, {
      1.0072787121845956`, 2.899112244645542}}], 
     LineBox[{{1.1275824705342878`, 2.7578287597653346`}, {
      0.45539519615808444`, 2.906577662602087}}], 
     LineBox[{{1.089778844333986, 2.618832167608058}, {1.0072787121845956`, 
      2.899112244645542}}], 
     LineBox[{{1.089778844333986, 2.618832167608058}, {0.45539519615808444`, 
      2.906577662602087}}], 
     LineBox[{{1.0072787121845956`, 2.899112244645542}, {0.45539519615808444`,
       2.906577662602087}}], 
     LineBox[{{1.613506872157334, 5.111600421906976}, {1.731025199027052, 
      5.037118956528582}}]}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
     {Hue[0, 1, 0.8], 
      DiskBox[{5.114256983195584, 3.4675005781091732`}, 
       0.047539292940182956`]}, 
     {Hue[0, 1, 0.8], 
      DiskBox[{5.67537231369667, 3.0555554191266427`}, 
       0.047539292940182956`]}, 
     {Hue[0, 1, 0.8], 
      DiskBox[{4.975195263503881, 3.21905185819813}, 
       0.047539292940182956`]}, 
     {Hue[0, 1, 0.8], 
      DiskBox[{4.859869573206023, 3.688402408367616}, 0.047539292940182956`]}, 
     {Hue[0, 1, 0.8], 
      DiskBox[{5.649060590402157, 2.8283046370429785`}, 
       0.047539292940182956`]}, 
     {Hue[0, 1, 0.8], 
      DiskBox[{5.67907420839294, 3.3058737018141886`}, 
       0.047539292940182956`]}, 
     {Hue[0, 1, 0.8], 
      DiskBox[{5.642204203040693, 3.576294064470022}, 0.047539292940182956`]}, 
     {Hue[0, 1, 0.8], 
      DiskBox[{5.557035149799237, 3.8366505987051465`}, 
       0.047539292940182956`]}, 
     {Hue[0, 1, 0.8], 
      DiskBox[{5.4420014439507245`, 4.060558964666349}, 
       0.047539292940182956`]}, 
     {Hue[0, 1, 0.8], 
      DiskBox[{5.314388776295778, 4.2498098938659785`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{2.8022366490405224`, 2.69700321256292}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{2.804441960021628, 2.8423535509548983`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{2.9382128754956796`, 2.2050457975873505`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{2.9838302414797804`, 3.4503662715278187`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{2.8300477933684736`, 3.278095908021956}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.1728822222462574`, 3.4510636174405156`}, 
       0.047539292940182956`]}, 
     {Hue[0.8, 0.6, 0.8], 
      DiskBox[{1.9890775729214476`, 0.34480676899366003`}, 
       0.047539292940182956`]}, 
     {Hue[0.8, 0.6, 0.8], 
      DiskBox[{2.296743054516812, 0.12924439212916328`}, 
       0.047539292940182956`]}, 
     {Hue[0.8, 0.6, 0.8], 
      DiskBox[{2.0572249184511975`, 0.04244928993090413}, 
       0.047539292940182956`]}, 
     {Hue[0.8, 0.6, 0.8], 
      DiskBox[{2.20568109969166, 0.}, 0.047539292940182956`]}, 
     {Hue[0.8, 0.6, 0.8], 
      DiskBox[{2.4389726224746666`, 0.015569890411569531`}, 
       0.047539292940182956`]}, 
     {Hue[0.8, 0.6, 0.8], 
      DiskBox[{2.5132466339741546`, 0.15953298440357733`}, 
       0.047539292940182956`]}, 
     {Hue[0.8, 0.6, 0.8], 
      DiskBox[{2.649153295102325, 0.13470100622334868`}, 
       0.047539292940182956`]}, 
     {Hue[0.8, 0.6, 0.8], 
      DiskBox[{2.429304138866894, 0.6112852501885602}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{1.0709688927924816`, 2.1627195095864415`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.8942411013930776, 2.4443984785428694`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{1.087618027418261, 1.974918825697858}, 0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{1.3250368201046507`, 2.368539492980387}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.386057379366359, 2.4260708375899083`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.0850769705939194`, 2.6893802512171967`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.522814402099116, 1.5779907774522657`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.117387738662265, 2.1114589484348327`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.1777351846092694`, 2.442584748215432}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{2.882087877387918, 2.4762360051419234`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.3273629287786948`, 2.940280450823578}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.154811924387471, 2.9607461439600002`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.176356676632317, 3.1936948781872623`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.313376999280763, 3.1156216944687007`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.0175223779492315`, 3.086737354209954}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.2235922954563716, 2.4307177366413812`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.06723325527377444, 2.1896322628910267`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.4846587319609086, 2.63913193357965}, 0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.29166127418844146`, 2.2435332895217086`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{1.4630409031369056`, 1.9370665174899706`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.417037163894844, 2.6427806180311717`}, 
       0.047539292940182956`]}, 
     {Hue[0.14, 1, 0.9], 
      DiskBox[{3.886864003951887, 2.0320507923468165`}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{1.1306107478763923`, 5.819677907672361}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{1.3492880102725238`, 5.230579218494876}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{1.400650091255669, 4.49344936805762}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.7997625170575939, 1.9625823601195358`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.5609306376538059, 1.5323883870545267`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.8693780268575491, 1.7865216736339589`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.06209903808424411, 1.7125353001651542`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.32539416776890895`, 1.2709272974004502`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.4456318914842279, 1.8817100363510608`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.7703885446163246, 2.387772984158845}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0., 2.45597410125029}, 0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{0.5804470554676886, 4.396526637824309}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{1.2511950688543036`, 4.328476553064467}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{0.7366259269774376, 4.476901388146921}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{0.8935502642586781, 4.912771134995072}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{0.6855212471852639, 4.605033854372264}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{0.8949098793428076, 4.450720800686764}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{1.0010185410095098`, 4.617132804091395}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{1.3129374788441246`, 4.453019860489519}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{0.8585500572849922, 4.653345368267351}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{1.0697383817417716`, 4.9074130700751475`}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{0.04665402860832257, 4.860320172390996}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.9384452904916014, 2.764702935185972}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{1.1275824705342878`, 2.7578287597653346`}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{1.089778844333986, 2.618832167608058}, 0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{1.0072787121845956`, 2.899112244645542}, 
       0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{1.3757556456310174`, 1.7741362837535568`}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{1.613506872157334, 5.111600421906976}, 0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{1.731025199027052, 5.037118956528582}, 0.047539292940182956`]}, 
     {Hue[0.07, 1, 1], 
      DiskBox[{0.45539519615808444`, 2.906577662602087}, 
       0.047539292940182956`]}, 
     {Hue[0.2, 1, 0.6], 
      DiskBox[{1.2991475144021858`, 4.904809271034196}, 
       0.047539292940182956`]}}}},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output"]
}, Open  ]],

Cell["\<\
The available properties depend on which algorithm was used for community \
detection. The following are always present:\
\>", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Algorithm\>\"", TraditionalForm]]],
 " returns the algorithm used for community detection."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Communities\>\"", TraditionalForm]]],
 " returns the list of communities."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Elements\>\"", TraditionalForm]]],
 " returns the vertices of the graph."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<ElementCount\>\"", TraditionalForm]]],
 " returns the vertex count of the graph."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Properties\>\"", TraditionalForm]]],
 " returns all available properties."
}], "Item"]
}, Open  ]],

Cell["These are present for hierarchical clustering methods:", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<HierarchicalClusters\>\"", TraditionalForm]]],
 " returns the clustering in a format compatible with the Hierarchical \
Clustering standard package."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Merges\>\"", TraditionalForm]]],
 " represents the hierarchical clustering as a sequence of element merges. \
Elements are represented by their integer indices, and higher indices are \
introduced for the subclusters formed by the merges. This format is similar \
to the one used by ",
 ButtonBox["MATLAB",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://matlink.org/"], None},
  ButtonNote->"http://matlink.org/"],
 " and many other tools."
}], "Item"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Tree\>\"", TraditionalForm]]],
 " gives a binary tree representation of the merges."
}], "Item"]
}, Open  ]],

Cell["\<\
Additionally, the following, and other, algorithm-specific properties may be \
present:\
\>", "Text"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Modularity\>\"", TraditionalForm]]],
 " is a list of modularities for each step of the algorithm. What constitutes \
a step depends on the particular algorithm."
}], "Item"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cl1", "[", "\"\<Properties\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Algorithm\"\>", ",", "\<\"Bridges\"\>", 
   ",", "\<\"Communities\"\>", ",", "\<\"EdgeBetweenness\"\>", 
   ",", "\<\"ElementCount\"\>", ",", "\<\"Elements\"\>", 
   ",", "\<\"HierarchicalClusters\"\>", ",", "\<\"Merges\"\>", 
   ",", "\<\"Modularity\"\>", ",", "\<\"Properties\"\>", 
   ",", "\<\"RemovedEdges\"\>", ",", "\<\"Tree\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cl1", "[", "\"\<RemovedEdges\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"Old Man\"\>", "\[UndirectedEdge]", "\<\"Myriel\"\>"}], ",", 
   RowBox[{"\<\"Valjean\"\>", "\[UndirectedEdge]", "\<\"Mme. Magloire\"\>"}], 
   ",", 
   RowBox[{"\<\"Valjean\"\>", 
    "\[UndirectedEdge]", "\<\"Mlle Baptistine\"\>"}], ",", 
   RowBox[{"\<\"Zephine\"\>", "\[UndirectedEdge]", "\<\"Fameuil\"\>"}], ",", 
   RowBox[{"\<\"Mlle Gillenormand\"\>", 
    "\[UndirectedEdge]", "\<\"Gillenormand\"\>"}], ",", 
   RowBox[{"\<\"Champmathieu\"\>", "\[UndirectedEdge]", "\<\"Judge\"\>"}], 
   ",", 
   RowBox[{"\<\"Gillenormand\"\>", "\[UndirectedEdge]", "\<\"Cosette\"\>"}], 
   ",", 
   RowBox[{"\<\"Fantine\"\>", "\[UndirectedEdge]", "\<\"Listolier\"\>"}], ",", 
   RowBox[{"\<\"Fantine\"\>", "\[UndirectedEdge]", "\<\"Dahlia\"\>"}], ",", 
   RowBox[{"\<\"Courfeyrac\"\>", "\[UndirectedEdge]", "\<\"Prouvaire\"\>"}], 
   ",", 
   RowBox[{"\<\"Bahorel\"\>", "\[UndirectedEdge]", "\<\"Combeferre\"\>"}], 
   ",", 
   RowBox[{"\<\"Fantine\"\>", "\[UndirectedEdge]", "\<\"Favourite\"\>"}], ",", 
   RowBox[{"\<\"Fantine\"\>", "\[UndirectedEdge]", "\<\"Fameuil\"\>"}], ",", 
   RowBox[{"\<\"Fantine\"\>", "\[UndirectedEdge]", "\<\"Blacheville\"\>"}], 
   ",", 
   RowBox[{"\<\"Fantine\"\>", "\[UndirectedEdge]", "\<\"Zephine\"\>"}], ",", 
   RowBox[{"\<\"Mlle Vaubois\"\>", 
    "\[UndirectedEdge]", "\<\"Mlle Gillenormand\"\>"}], ",", 
   RowBox[{"\<\"Brevet\"\>", "\[UndirectedEdge]", "\<\"Judge\"\>"}], ",", 
   RowBox[{"\<\"Zephine\"\>", "\[UndirectedEdge]", "\<\"Blacheville\"\>"}], 
   ",", 
   RowBox[{"\<\"Magnon\"\>", "\[UndirectedEdge]", "\<\"Gillenormand\"\>"}], 
   ",", 
   RowBox[{"\<\"Zephine\"\>", "\[UndirectedEdge]", "\<\"Favourite\"\>"}], ",", 
   RowBox[{"\<\"Zephine\"\>", "\[UndirectedEdge]", "\<\"Tholomyes\"\>"}], ",", 
   RowBox[{"\<\"Fantine\"\>", "\[UndirectedEdge]", "\<\"Tholomyes\"\>"}], ",", 
   RowBox[{"\<\"Gillenormand\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], 
   ",", 
   RowBox[{"\<\"Fantine\"\>", "\[UndirectedEdge]", "\<\"Marguerite\"\>"}], 
   ",", 
   RowBox[{"\<\"Gavroche\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   
   RowBox[{"\<\"Brevet\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Fameuil\"\>", "\[UndirectedEdge]", "\<\"Tholomyes\"\>"}], ",", 
   RowBox[{"\<\"Brevet\"\>", "\[UndirectedEdge]", "\<\"Champmathieu\"\>"}], 
   ",", 
   RowBox[{"\<\"Listolier\"\>", "\[UndirectedEdge]", "\<\"Tholomyes\"\>"}], 
   ",", 
   RowBox[{"\<\"Fameuil\"\>", "\[UndirectedEdge]", "\<\"Listolier\"\>"}], ",", 
   RowBox[{"\<\"Blacheville\"\>", "\[UndirectedEdge]", "\<\"Listolier\"\>"}], 
   ",", 
   RowBox[{"\<\"Zephine\"\>", "\[UndirectedEdge]", "\<\"Dahlia\"\>"}], ",", 
   RowBox[{"\<\"Blacheville\"\>", "\[UndirectedEdge]", "\<\"Tholomyes\"\>"}], 
   ",", 
   RowBox[{"\<\"Cosette\"\>", "\[UndirectedEdge]", "\<\"Tholomyes\"\>"}], ",", 
   RowBox[{"\<\"Cosette\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Champmathieu\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], 
   ",", 
   RowBox[{"\<\"Champmathieu\"\>", 
    "\[UndirectedEdge]", "\<\"Bamatabois\"\>"}], ",", 
   RowBox[{"\<\"Eponine\"\>", "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], 
   ",", 
   RowBox[{"\<\"Bossuet\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Woman2\"\>", "\[UndirectedEdge]", "\<\"Cosette\"\>"}], ",", 
   RowBox[{"\<\"Joly\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   RowBox[{"\<\"Joly\"\>", "\[UndirectedEdge]", "\<\"Enjolras\"\>"}], ",", 
   RowBox[{"\<\"Mme. Pontmercy\"\>", 
    "\[UndirectedEdge]", "\<\"Pontmercy\"\>"}], ",", 
   RowBox[{"\<\"Joly\"\>", "\[UndirectedEdge]", "\<\"Prouvaire\"\>"}], ",", 
   RowBox[{"\<\"Combeferre\"\>", "\[UndirectedEdge]", "\<\"Enjolras\"\>"}], 
   ",", 
   RowBox[{"\<\"Cochepaille\"\>", "\[UndirectedEdge]", "\<\"Brevet\"\>"}], 
   ",", 
   RowBox[{"\<\"Combeferre\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], 
   ",", 
   RowBox[{"\<\"Bahorel\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   
   RowBox[{"\<\"Bahorel\"\>", "\[UndirectedEdge]", "\<\"Enjolras\"\>"}], ",", 
   
   RowBox[{"\<\"Combeferre\"\>", "\[UndirectedEdge]", "\<\"Marius\"\>"}], ",", 
   RowBox[{"\<\"Gueulemer\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], ",", 
   
   RowBox[{"\<\"Feuilly\"\>", "\[UndirectedEdge]", "\<\"Prouvaire\"\>"}], ",", 
   RowBox[{"\<\"Mlle Gillenormand\"\>", 
    "\[UndirectedEdge]", "\<\"Cosette\"\>"}], ",", 
   RowBox[{"\<\"Joly\"\>", "\[UndirectedEdge]", "\<\"Feuilly\"\>"}], ",", 
   RowBox[{"\<\"Joly\"\>", "\[UndirectedEdge]", "\<\"Bossuet\"\>"}], ",", 
   RowBox[{"\<\"Joly\"\>", "\[UndirectedEdge]", "\<\"Bahorel\"\>"}], ",", 
   RowBox[{"\<\"Joly\"\>", "\[UndirectedEdge]", "\<\"Courfeyrac\"\>"}], ",", 
   RowBox[{"\<\"Zephine\"\>", "\[UndirectedEdge]", "\<\"Listolier\"\>"}], ",", 
   RowBox[{"\<\"Blacheville\"\>", "\[UndirectedEdge]", "\<\"Fameuil\"\>"}], 
   ",", 
   RowBox[{"\<\"Mother Innocent\"\>", 
    "\[UndirectedEdge]", "\<\"Fauchelevent\"\>"}], ",", 
   RowBox[{"\<\"Chenildieu\"\>", "\[UndirectedEdge]", "\<\"Bamatabois\"\>"}], 
   ",", 
   RowBox[{"\<\"Gavroche\"\>", "\[UndirectedEdge]", "\<\"Mme. Burgon\"\>"}], 
   ",", 
   RowBox[{"\<\"Cochepaille\"\>", "\[UndirectedEdge]", "\<\"Bamatabois\"\>"}],
    ",", 
   RowBox[{"\<\"Anzelma\"\>", "\[UndirectedEdge]", "\<\"Eponine\"\>"}], ",", 
   RowBox[{"\<\"Mme. Burgon\"\>", "\[UndirectedEdge]", "\<\"Jondrette\"\>"}], 
   ",", 
   RowBox[{"\<\"Gribier\"\>", "\[UndirectedEdge]", "\<\"Fauchelevent\"\>"}], 
   ",", 
   RowBox[{"\<\"Enjolras\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   
   RowBox[{"\<\"Gavroche\"\>", "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], 
   ",", 
   RowBox[{"\<\"Feuilly\"\>", "\[UndirectedEdge]", "\<\"Enjolras\"\>"}], ",", 
   
   RowBox[{"\<\"Favourite\"\>", "\[UndirectedEdge]", "\<\"Listolier\"\>"}], 
   ",", 
   RowBox[{"\<\"Magnon\"\>", "\[UndirectedEdge]", "\<\"Mme. Thenardier\"\>"}],
    ",", 
   RowBox[{"\<\"Cochepaille\"\>", "\[UndirectedEdge]", "\<\"Chenildieu\"\>"}],
    ",", 
   RowBox[{"\<\"Lt. Gillenormand\"\>", 
    "\[UndirectedEdge]", "\<\"Mlle Gillenormand\"\>"}], ",", 
   RowBox[{"\<\"Chenildieu\"\>", "\[UndirectedEdge]", "\<\"Judge\"\>"}], ",", 
   
   RowBox[{"\<\"Feuilly\"\>", "\[UndirectedEdge]", "\<\"Combeferre\"\>"}], 
   ",", 
   RowBox[{"\<\"Bahorel\"\>", "\[UndirectedEdge]", "\<\"Feuilly\"\>"}], ",", 
   RowBox[{"\<\"Courfeyrac\"\>", "\[UndirectedEdge]", "\<\"Feuilly\"\>"}], 
   ",", 
   RowBox[{"\<\"Courfeyrac\"\>", "\[UndirectedEdge]", "\<\"Marius\"\>"}], ",", 
   RowBox[{"\<\"Courfeyrac\"\>", "\[UndirectedEdge]", "\<\"Enjolras\"\>"}], 
   ",", 
   RowBox[{"\<\"Courfeyrac\"\>", "\[UndirectedEdge]", "\<\"Eponine\"\>"}], 
   ",", 
   RowBox[{"\<\"Courfeyrac\"\>", "\[UndirectedEdge]", "\<\"Mabeuf\"\>"}], ",", 
   RowBox[{"\<\"Courfeyrac\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], 
   ",", 
   RowBox[{"\<\"Feuilly\"\>", "\[UndirectedEdge]", "\<\"Marius\"\>"}], ",", 
   RowBox[{"\<\"Feuilly\"\>", "\[UndirectedEdge]", "\<\"Mabeuf\"\>"}], ",", 
   RowBox[{"\<\"Courfeyrac\"\>", "\[UndirectedEdge]", "\<\"Combeferre\"\>"}], 
   ",", 
   RowBox[{"\<\"Valjean\"\>", "\[UndirectedEdge]", "\<\"Myriel\"\>"}], ",", 
   RowBox[{"\<\"Marguerite\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], 
   ",", 
   RowBox[{"\<\"Mme. De R\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Chenildieu\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], 
   ",", 
   RowBox[{"\<\"Combeferre\"\>", "\[UndirectedEdge]", "\<\"Mabeuf\"\>"}], ",", 
   RowBox[{"\<\"Chenildieu\"\>", "\[UndirectedEdge]", "\<\"Brevet\"\>"}], ",", 
   RowBox[{"\<\"Prouvaire\"\>", "\[UndirectedEdge]", "\<\"Enjolras\"\>"}], 
   ",", 
   RowBox[{"\<\"Mme. Hucheloup\"\>", 
    "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   RowBox[{"\<\"Grantaire\"\>", "\[UndirectedEdge]", "\<\"Joly\"\>"}], ",", 
   RowBox[{"\<\"Enjolras\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], ",", 
   RowBox[{"\<\"Bossuet\"\>", "\[UndirectedEdge]", "\<\"Feuilly\"\>"}], ",", 
   RowBox[{"\<\"Bossuet\"\>", "\[UndirectedEdge]", "\<\"Prouvaire\"\>"}], ",", 
   RowBox[{"\<\"Bahorel\"\>", "\[UndirectedEdge]", "\<\"Marius\"\>"}], ",", 
   RowBox[{"\<\"Brujon\"\>", "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], ",", 
   RowBox[{"\<\"Isabeau\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Pontmercy\"\>", "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], 
   ",", 
   RowBox[{"\<\"Prouvaire\"\>", "\[UndirectedEdge]", "\<\"Combeferre\"\>"}], 
   ",", 
   RowBox[{"\<\"Prouvaire\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], 
   ",", 
   RowBox[{"\<\"Napoleon\"\>", "\[UndirectedEdge]", "\<\"Myriel\"\>"}], ",", 
   RowBox[{"\<\"Gervais\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Toussaint\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Joly\"\>", "\[UndirectedEdge]", "\<\"Marius\"\>"}], ",", 
   RowBox[{"\<\"Montparnasse\"\>", "\[UndirectedEdge]", "\<\"Babet\"\>"}], 
   ",", 
   RowBox[{"\<\"Babet\"\>", "\[UndirectedEdge]", "\<\"Eponine\"\>"}], ",", 
   RowBox[{"\<\"Mme. Magloire\"\>", 
    "\[UndirectedEdge]", "\<\"Mlle Baptistine\"\>"}], ",", 
   RowBox[{"\<\"Favourite\"\>", "\[UndirectedEdge]", "\<\"Fameuil\"\>"}], ",", 
   RowBox[{"\<\"Boulatruelle\"\>", 
    "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], ",", 
   RowBox[{"\<\"Eponine\"\>", 
    "\[UndirectedEdge]", "\<\"Mme. Thenardier\"\>"}], ",", 
   RowBox[{"\<\"Toussaint\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], ",", 
   
   RowBox[{"\<\"Grantaire\"\>", "\[UndirectedEdge]", "\<\"Enjolras\"\>"}], 
   ",", 
   RowBox[{"\<\"Claquesous\"\>", "\[UndirectedEdge]", "\<\"Babet\"\>"}], ",", 
   
   RowBox[{"\<\"Countess De Lo\"\>", "\[UndirectedEdge]", "\<\"Myriel\"\>"}], 
   ",", 
   RowBox[{"\<\"Favourite\"\>", "\[UndirectedEdge]", "\<\"Blacheville\"\>"}], 
   ",", 
   RowBox[{"\<\"Babet\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   RowBox[{"\<\"Grantaire\"\>", "\[UndirectedEdge]", "\<\"Courfeyrac\"\>"}], 
   ",", 
   RowBox[{"\<\"Brujon\"\>", "\[UndirectedEdge]", "\<\"Gueulemer\"\>"}], ",", 
   
   RowBox[{"\<\"Claquesous\"\>", "\[UndirectedEdge]", "\<\"Gueulemer\"\>"}], 
   ",", 
   RowBox[{"\<\"Montparnasse\"\>", "\[UndirectedEdge]", "\<\"Eponine\"\>"}], 
   ",", 
   RowBox[{"\<\"Joly\"\>", "\[UndirectedEdge]", "\<\"Combeferre\"\>"}], ",", 
   RowBox[{"\<\"Grantaire\"\>", "\[UndirectedEdge]", "\<\"Combeferre\"\>"}], 
   ",", 
   RowBox[{"\<\"Montparnasse\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], 
   ",", 
   RowBox[{"\<\"Gueulemer\"\>", "\[UndirectedEdge]", "\<\"Eponine\"\>"}], ",", 
   RowBox[{"\<\"Claquesous\"\>", "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], 
   ",", 
   RowBox[{"\<\"Brujon\"\>", "\[UndirectedEdge]", "\<\"Babet\"\>"}], ",", 
   RowBox[{"\<\"Claquesous\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], 
   ",", 
   RowBox[{"\<\"Joly\"\>", "\[UndirectedEdge]", "\<\"Mabeuf\"\>"}], ",", 
   RowBox[{"\<\"Grantaire\"\>", "\[UndirectedEdge]", "\<\"Bossuet\"\>"}], ",", 
   RowBox[{"\<\"Gueulemer\"\>", 
    "\[UndirectedEdge]", "\<\"Mme. Thenardier\"\>"}], ",", 
   RowBox[{"\<\"Child2\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   RowBox[{"\<\"Grantaire\"\>", "\[UndirectedEdge]", "\<\"Bahorel\"\>"}], ",", 
   RowBox[{"\<\"Geborand\"\>", "\[UndirectedEdge]", "\<\"Myriel\"\>"}], ",", 
   RowBox[{"\<\"Gueulemer\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], 
   ",", 
   RowBox[{"\<\"Montparnasse\"\>", 
    "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], ",", 
   RowBox[{"\<\"Child2\"\>", "\[UndirectedEdge]", "\<\"Child1\"\>"}], ",", 
   RowBox[{"\<\"Champtercier\"\>", "\[UndirectedEdge]", "\<\"Myriel\"\>"}], 
   ",", 
   RowBox[{"\<\"Mme. Hucheloup\"\>", "\[UndirectedEdge]", "\<\"Bahorel\"\>"}],
    ",", 
   RowBox[{"\<\"Brujon\"\>", "\[UndirectedEdge]", "\<\"Claquesous\"\>"}], ",", 
   RowBox[{"\<\"Mme. Hucheloup\"\>", "\[UndirectedEdge]", "\<\"Joly\"\>"}], 
   ",", 
   RowBox[{"\<\"Cravatte\"\>", "\[UndirectedEdge]", "\<\"Myriel\"\>"}], ",", 
   RowBox[{"\<\"Bahorel\"\>", "\[UndirectedEdge]", "\<\"Prouvaire\"\>"}], ",", 
   RowBox[{"\<\"Bossuet\"\>", "\[UndirectedEdge]", "\<\"Bahorel\"\>"}], ",", 
   RowBox[{"\<\"Brujon\"\>", "\[UndirectedEdge]", "\<\"Montparnasse\"\>"}], 
   ",", 
   RowBox[{"\<\"Cochepaille\"\>", 
    "\[UndirectedEdge]", "\<\"Champmathieu\"\>"}], ",", 
   RowBox[{"\<\"Mme. Pontmercy\"\>", 
    "\[UndirectedEdge]", "\<\"Mlle Gillenormand\"\>"}], ",", 
   RowBox[{"\<\"Brujon\"\>", "\[UndirectedEdge]", "\<\"Eponine\"\>"}], ",", 
   RowBox[{"\<\"Woman2\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], ",", 
   RowBox[{"\<\"Woman2\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Brujon\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   RowBox[{"\<\"Anzelma\"\>", 
    "\[UndirectedEdge]", "\<\"Mme. Thenardier\"\>"}], ",", 
   RowBox[{"\<\"Count\"\>", "\[UndirectedEdge]", "\<\"Myriel\"\>"}], ",", 
   RowBox[{"\<\"Montparnasse\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], 
   ",", 
   RowBox[{"\<\"Mother Plutarch\"\>", "\[UndirectedEdge]", "\<\"Mabeuf\"\>"}],
    ",", 
   RowBox[{"\<\"Claquesous\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], ",", 
   RowBox[{"\<\"Claquesous\"\>", "\[UndirectedEdge]", "\<\"Eponine\"\>"}], 
   ",", 
   RowBox[{"\<\"Toussaint\"\>", "\[UndirectedEdge]", "\<\"Cosette\"\>"}], ",", 
   RowBox[{"\<\"Babet\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Montparnasse\"\>", "\[UndirectedEdge]", "\<\"Gueulemer\"\>"}],
    ",", 
   RowBox[{"\<\"Babet\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], ",", 
   RowBox[{"\<\"Babet\"\>", "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], ",", 
   
   RowBox[{"\<\"Babet\"\>", "\[UndirectedEdge]", "\<\"Mme. Thenardier\"\>"}], 
   ",", 
   RowBox[{"\<\"Grantaire\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], 
   ",", 
   RowBox[{"\<\"Montparnasse\"\>", 
    "\[UndirectedEdge]", "\<\"Claquesous\"\>"}], ",", 
   RowBox[{"\<\"Grantaire\"\>", "\[UndirectedEdge]", "\<\"Prouvaire\"\>"}], 
   ",", 
   RowBox[{"\<\"Mother Innocent\"\>", 
    "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Lt. Gillenormand\"\>", 
    "\[UndirectedEdge]", "\<\"Gillenormand\"\>"}], ",", 
   RowBox[{"\<\"Marius\"\>", "\[UndirectedEdge]", "\<\"Pontmercy\"\>"}], ",", 
   
   RowBox[{"\<\"Marius\"\>", 
    "\[UndirectedEdge]", "\<\"Lt. Gillenormand\"\>"}], ",", 
   RowBox[{"\<\"Marius\"\>", "\[UndirectedEdge]", "\<\"Cosette\"\>"}], ",", 
   RowBox[{"\<\"Favourite\"\>", "\[UndirectedEdge]", "\<\"Tholomyes\"\>"}], 
   ",", 
   RowBox[{"\<\"Marius\"\>", 
    "\[UndirectedEdge]", "\<\"Mlle Gillenormand\"\>"}], ",", 
   RowBox[{"\<\"Marius\"\>", "\[UndirectedEdge]", "\<\"Gillenormand\"\>"}], 
   ",", 
   RowBox[{"\<\"Bossuet\"\>", "\[UndirectedEdge]", "\<\"Marius\"\>"}], ",", 
   RowBox[{"\<\"Bossuet\"\>", "\[UndirectedEdge]", "\<\"Mabeuf\"\>"}], ",", 
   RowBox[{"\<\"Bossuet\"\>", "\[UndirectedEdge]", "\<\"Courfeyrac\"\>"}], 
   ",", 
   RowBox[{"\<\"Chenildieu\"\>", 
    "\[UndirectedEdge]", "\<\"Champmathieu\"\>"}], ",", 
   RowBox[{"\<\"Cochepaille\"\>", "\[UndirectedEdge]", "\<\"Judge\"\>"}], ",", 
   RowBox[{"\<\"Brevet\"\>", "\[UndirectedEdge]", "\<\"Bamatabois\"\>"}], ",", 
   RowBox[{"\<\"Mme. Hucheloup\"\>", 
    "\[UndirectedEdge]", "\<\"Grantaire\"\>"}], ",", 
   RowBox[{"\<\"Mme. Hucheloup\"\>", "\[UndirectedEdge]", "\<\"Bossuet\"\>"}],
    ",", 
   RowBox[{"\<\"Mlle Baptistine\"\>", "\[UndirectedEdge]", "\<\"Myriel\"\>"}],
    ",", 
   RowBox[{"\<\"Mme. Magloire\"\>", "\[UndirectedEdge]", "\<\"Myriel\"\>"}], 
   ",", 
   RowBox[{"\<\"Valjean\"\>", "\[UndirectedEdge]", "\<\"Labarre\"\>"}], ",", 
   RowBox[{"\<\"Dahlia\"\>", "\[UndirectedEdge]", "\<\"Tholomyes\"\>"}], ",", 
   
   RowBox[{"\<\"Dahlia\"\>", "\[UndirectedEdge]", "\<\"Fameuil\"\>"}], ",", 
   RowBox[{"\<\"Dahlia\"\>", "\[UndirectedEdge]", "\<\"Blacheville\"\>"}], 
   ",", 
   RowBox[{"\<\"Dahlia\"\>", "\[UndirectedEdge]", "\<\"Favourite\"\>"}], ",", 
   
   RowBox[{"\<\"Dahlia\"\>", "\[UndirectedEdge]", "\<\"Listolier\"\>"}], ",", 
   
   RowBox[{"\<\"Fantine\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Thenardier\"\>", 
    "\[UndirectedEdge]", "\<\"Mme. Thenardier\"\>"}], ",", 
   RowBox[{"\<\"Thenardier\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], 
   ",", 
   RowBox[{"\<\"Cosette\"\>", 
    "\[UndirectedEdge]", "\<\"Mme. Thenardier\"\>"}], ",", 
   RowBox[{"\<\"Mme. Thenardier\"\>", 
    "\[UndirectedEdge]", "\<\"Fantine\"\>"}], ",", 
   RowBox[{"\<\"Thenardier\"\>", "\[UndirectedEdge]", "\<\"Fantine\"\>"}], 
   ",", 
   RowBox[{"\<\"Mme. Thenardier\"\>", 
    "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Cosette\"\>", "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], 
   ",", 
   RowBox[{"\<\"Javert\"\>", "\[UndirectedEdge]", "\<\"Fantine\"\>"}], ",", 
   RowBox[{"\<\"Javert\"\>", "\[UndirectedEdge]", "\<\"Mme. Thenardier\"\>"}],
    ",", 
   RowBox[{"\<\"Javert\"\>", "\[UndirectedEdge]", "\<\"Cosette\"\>"}], ",", 
   RowBox[{"\<\"Javert\"\>", "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], ",", 
   RowBox[{"\<\"Javert\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Fauchelevent\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], 
   ",", 
   RowBox[{"\<\"Bamatabois\"\>", "\[UndirectedEdge]", "\<\"Fantine\"\>"}], 
   ",", 
   RowBox[{"\<\"Bamatabois\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], ",", 
   RowBox[{"\<\"Bamatabois\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], 
   ",", 
   RowBox[{"\<\"Fauchelevent\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], 
   ",", 
   RowBox[{"\<\"Perpetue\"\>", "\[UndirectedEdge]", "\<\"Fantine\"\>"}], ",", 
   
   RowBox[{"\<\"Simplice\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   
   RowBox[{"\<\"Simplice\"\>", "\[UndirectedEdge]", "\<\"Fantine\"\>"}], ",", 
   
   RowBox[{"\<\"Simplice\"\>", "\[UndirectedEdge]", "\<\"Perpetue\"\>"}], ",", 
   RowBox[{"\<\"Simplice\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], ",", 
   RowBox[{"\<\"Scaufflaire\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], 
   ",", 
   RowBox[{"\<\"Woman1\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Woman1\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], ",", 
   RowBox[{"\<\"Judge\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Judge\"\>", "\[UndirectedEdge]", "\<\"Bamatabois\"\>"}], ",", 
   
   RowBox[{"\<\"Cochepaille\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], 
   ",", 
   RowBox[{"\<\"Anzelma\"\>", "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], 
   ",", 
   RowBox[{"\<\"Gavroche\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], ",", 
   RowBox[{"\<\"Mlle Gillenormand\"\>", 
    "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Lt. Gillenormand\"\>", 
    "\[UndirectedEdge]", "\<\"Cosette\"\>"}], ",", 
   RowBox[{"\<\"Marius\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Marius\"\>", "\[UndirectedEdge]", "\<\"Tholomyes\"\>"}], ",", 
   
   RowBox[{"\<\"Marius\"\>", "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], ",", 
   RowBox[{"\<\"Marius\"\>", "\[UndirectedEdge]", "\<\"Eponine\"\>"}], ",", 
   RowBox[{"\<\"Marius\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   RowBox[{"\<\"Baroness T\"\>", 
    "\[UndirectedEdge]", "\<\"Gillenormand\"\>"}], ",", 
   RowBox[{"\<\"Baroness T\"\>", "\[UndirectedEdge]", "\<\"Marius\"\>"}], ",", 
   RowBox[{"\<\"Mabeuf\"\>", "\[UndirectedEdge]", "\<\"Marius\"\>"}], ",", 
   RowBox[{"\<\"Mabeuf\"\>", "\[UndirectedEdge]", "\<\"Eponine\"\>"}], ",", 
   RowBox[{"\<\"Mabeuf\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   RowBox[{"\<\"Enjolras\"\>", "\[UndirectedEdge]", "\<\"Marius\"\>"}], ",", 
   RowBox[{"\<\"Enjolras\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   RowBox[{"\<\"Enjolras\"\>", "\[UndirectedEdge]", "\<\"Mabeuf\"\>"}], ",", 
   RowBox[{"\<\"Feuilly\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   
   RowBox[{"\<\"Bahorel\"\>", "\[UndirectedEdge]", "\<\"Courfeyrac\"\>"}], 
   ",", 
   RowBox[{"\<\"Bahorel\"\>", "\[UndirectedEdge]", "\<\"Mabeuf\"\>"}], ",", 
   RowBox[{"\<\"Bossuet\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   
   RowBox[{"\<\"Bossuet\"\>", "\[UndirectedEdge]", "\<\"Enjolras\"\>"}], ",", 
   
   RowBox[{"\<\"Bossuet\"\>", "\[UndirectedEdge]", "\<\"Combeferre\"\>"}], 
   ",", 
   RowBox[{"\<\"Grantaire\"\>", "\[UndirectedEdge]", "\<\"Feuilly\"\>"}], ",", 
   RowBox[{"\<\"Gueulemer\"\>", "\[UndirectedEdge]", "\<\"Valjean\"\>"}], ",", 
   RowBox[{"\<\"Gueulemer\"\>", "\[UndirectedEdge]", "\<\"Thenardier\"\>"}], 
   ",", 
   RowBox[{"\<\"Babet\"\>", "\[UndirectedEdge]", "\<\"Gueulemer\"\>"}], ",", 
   RowBox[{"\<\"Claquesous\"\>", 
    "\[UndirectedEdge]", "\<\"Mme. Thenardier\"\>"}], ",", 
   RowBox[{"\<\"Claquesous\"\>", "\[UndirectedEdge]", "\<\"Enjolras\"\>"}], 
   ",", 
   RowBox[{"\<\"Montparnasse\"\>", "\[UndirectedEdge]", "\<\"Javert\"\>"}], 
   ",", 
   RowBox[{"\<\"Child1\"\>", "\[UndirectedEdge]", "\<\"Gavroche\"\>"}], ",", 
   RowBox[{"\<\"Mme. Hucheloup\"\>", 
    "\[UndirectedEdge]", "\<\"Courfeyrac\"\>"}], ",", 
   RowBox[{"\<\"Mme. Hucheloup\"\>", 
    "\[UndirectedEdge]", "\<\"Enjolras\"\>"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cl2", "[", "\"\<Properties\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Algorithm\"\>", ",", "\<\"Communities\"\>", 
   ",", "\<\"ElementCount\"\>", ",", "\<\"Elements\"\>", 
   ",", "\<\"HierarchicalClusters\"\>", ",", "\<\"Merges\"\>", 
   ",", "\<\"Modularity\"\>", ",", "\<\"Properties\"\>", 
   ",", "\<\"Tree\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGCompareCommunities", "[", 
  RowBox[{"cl1", ",", "cl2"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"VariationOfInformation\"\>", "\[Rule]", 
    "0.9036782792656743`"}], ",", 
   RowBox[{"\<\"NormalizedMutualInformation\"\>", "\[Rule]", 
    "0.7393394854287016`"}], ",", 
   RowBox[{"\<\"SplitJoinDistance\"\>", "\[Rule]", "35"}], ",", 
   RowBox[{"\<\"UnadjustedRandIndex\"\>", "\[Rule]", "0.8448393711551607`"}], 
   ",", 
   RowBox[{"\<\"AdjustedRandIndex\"\>", "\[Rule]", "0.5000846737501593`"}]}], 
  "\[RightAssociation]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DendrogramPlot", "[", 
  RowBox[{
   RowBox[{"cl1", "[", "\"\<HierarchicalClusters\>\"", "]"}], ",", 
   RowBox[{"LeafLabels", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Rotate", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ")"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "2"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[
    0, 1, 0]}, {{}, {LineBox[{{2, 0}, {2, 6}, {3, 6}, {3, 0}}], 
     LineBox[{{6, 0}, {6, 7}, {7, 7}, {7, 0}}], 
     LineBox[{{8, 0}, {8, 3}, {9, 3}, {9, 0}}], 
     LineBox[{{8.5, 3}, {8.5, 4}, {10, 4}, {10, 0}}], 
     LineBox[{{9.25, 4}, {9.25, 8}, {11, 8}, {11, 0}}], 
     LineBox[{{6.5, 7}, {6.5, 87}, {10.125, 87}, {10.125, 8}}], 
     LineBox[{{5, 0}, {5, 93}, {8.3125, 93}, {8.3125, 87}}], 
     LineBox[{{4, 0}, {4, 116}, {6.65625, 116}, {6.65625, 93}}], 
     LineBox[{{2.5, 6}, {2.5, 120}, {5.328125, 120}, {5.328125, 116}}], 
     LineBox[{{3.9140625, 120}, {3.9140625, 123}, {12, 123}, {12, 0}}], 
     LineBox[{{1, 0}, {1, 161}, {7.95703125, 161}, {7.95703125, 123}}], 
     LineBox[{{13, 0}, {13, 1}, {14, 1}, {14, 0}}], 
     LineBox[{{13.5, 1}, {13.5, 14}, {15, 14}, {15, 0}}], 
     LineBox[{{4.478515625, 161}, {4.478515625, 170}, {14.25, 170}, {
       14.25, 14}}], LineBox[{{16, 0}, {16, 16}, {17, 16}, {17, 0}}], 
     LineBox[{{9.3642578125, 170}, {9.3642578125, 186}, {16.5, 186}, {
       16.5, 16}}], LineBox[{{18, 0}, {18, 18}, {19, 18}, {19, 0}}], 
     LineBox[{{20, 0}, {20, 12}, {21, 12}, {21, 0}}], 
     LineBox[{{18.5, 18}, {18.5, 109}, {20.5, 109}, {20.5, 12}}], 
     LineBox[{{23, 0}, {23, 11}, {24, 11}, {24, 0}}], 
     LineBox[{{25, 0}, {25, 13}, {26, 13}, {26, 0}}], 
     LineBox[{{23.5, 11}, {23.5, 76}, {25.5, 76}, {25.5, 13}}], 
     LineBox[{{22, 0}, {22, 110}, {24.5, 110}, {24.5, 76}}], 
     LineBox[{{19.5, 109}, {19.5, 157}, {23.25, 157}, {23.25, 110}}], 
     LineBox[{{28, 0}, {28, 32}, {29, 32}, {29, 0}}], 
     LineBox[{{27, 0}, {27, 86}, {28.5, 86}, {28.5, 32}}], 
     LineBox[{{31, 0}, {31, 17}, {32, 17}, {32, 0}}], 
     LineBox[{{34, 0}, {34, 2}, {35, 2}, {35, 0}}], 
     LineBox[{{34.5, 2}, {34.5, 71}, {36, 71}, {36, 0}}], 
     LineBox[{{37, 0}, {37, 31}, {38, 31}, {38, 0}}], 
     LineBox[{{37.5, 31}, {37.5, 33}, {39, 33}, {39, 0}}], 
     LineBox[{{38.25, 33}, {38.25, 73}, {40, 73}, {40, 0}}], 
     LineBox[{{35.25, 71}, {35.25, 101}, {39.125, 101}, {39.125, 73}}], 
     LineBox[{{33, 0}, {33, 112}, {37.1875, 112}, {37.1875, 101}}], 
     LineBox[{{31.5, 17}, {31.5, 142}, {35.09375, 142}, {35.09375, 112}}], 
     LineBox[{{30, 0}, {30, 154}, {33.296875, 154}, {33.296875, 142}}], 
     LineBox[{{27.75, 86}, {27.75, 181}, {31.6484375, 181}, {
       31.6484375, 154}}], 
     LineBox[{{21.375, 157}, {21.375, 187}, {29.69921875, 187}, {
       29.69921875, 181}}], 
     LineBox[{{12.93212890625, 186}, {12.93212890625, 198}, {
       25.537109375, 198}, {25.537109375, 187}}], 
     LineBox[{{41, 0}, {41, 35}, {42, 35}, {42, 0}}], 
     LineBox[{{41.5, 35}, {41.5, 36}, {43, 36}, {43, 0}}], 
     LineBox[{{42.25, 36}, {42.25, 38}, {44, 38}, {44, 0}}], 
     LineBox[{{43.125, 38}, {43.125, 41}, {45, 41}, {45, 0}}], 
     LineBox[{{44.0625, 41}, {44.0625, 45}, {46, 45}, {46, 0}}], 
     LineBox[{{45.03125, 45}, {45.03125, 50}, {47, 50}, {47, 0}}], 
     LineBox[{{46.015625, 50}, {46.015625, 56}, {48, 56}, {48, 0}}], 
     LineBox[{{19.234619140625, 198}, {19.234619140625, 218}, {
       47.0078125, 218}, {47.0078125, 56}}], 
     LineBox[{{50, 0}, {50, 30}, {51, 30}, {51, 0}}], 
     LineBox[{{49, 0}, {49, 85}, {50.5, 85}, {50.5, 30}}], 
     LineBox[{{52, 0}, {52, 29}, {53, 29}, {53, 0}}], 
     LineBox[{{60, 0}, {60, 19}, {61, 19}, {61, 0}}], 
     LineBox[{{60.5, 19}, {60.5, 20}, {62, 20}, {62, 0}}], 
     LineBox[{{61.25, 20}, {61.25, 22}, {63, 22}, {63, 0}}], 
     LineBox[{{62.125, 22}, {62.125, 25}, {64, 25}, {64, 0}}], 
     LineBox[{{63.0625, 25}, {63.0625, 63}, {65, 63}, {65, 0}}], 
     LineBox[{{64.03125, 63}, {64.03125, 79}, {66, 79}, {66, 0}}], 
     LineBox[{{59, 0}, {59, 137}, {65.015625, 137}, {65.015625, 79}}], 
     LineBox[{{58, 0}, {58, 144}, {62.0078125, 144}, {62.0078125, 137}}], 
     LineBox[{{57, 0}, {57, 150}, {60.00390625, 150}, {60.00390625, 144}}], 
     LineBox[{{56, 0}, {56, 155}, {58.501953125, 155}, {58.501953125, 150}}], 
     LineBox[{{55, 0}, {55, 167}, {57.2509765625, 167}, {
       57.2509765625, 155}}], 
     LineBox[{{54, 0}, {54, 168}, {56.12548828125, 168}, {
       56.12548828125, 167}}], 
     LineBox[{{55.062744140625, 168}, {55.062744140625, 169}, {67, 169}, {67, 
       0}}], LineBox[{{52.5, 29}, {52.5, 185}, {61.0313720703125, 185}, {
       61.0313720703125, 169}}], 
     LineBox[{{49.75, 85}, {49.75, 196}, {56.76568603515625, 196}, {
       56.76568603515625, 185}}], 
     LineBox[{{33.1212158203125, 218}, {33.1212158203125, 222}, {
       53.257843017578125`, 222}, {53.257843017578125`, 196}}], 
     LineBox[{{75, 0}, {75, 68}, {76, 68}, {76, 0}}], 
     LineBox[{{75.5, 68}, {75.5, 69}, {77, 69}, {77, 0}}], 
     LineBox[{{74, 0}, {74, 100}, {76.25, 100}, {76.25, 69}}], 
     LineBox[{{73, 0}, {73, 111}, {75.125, 111}, {75.125, 100}}], 
     LineBox[{{72, 0}, {72, 115}, {74.0625, 115}, {74.0625, 111}}], 
     LineBox[{{71, 0}, {71, 119}, {73.03125, 119}, {73.03125, 115}}], 
     LineBox[{{70, 0}, {70, 138}, {72.015625, 138}, {72.015625, 119}}], 
     LineBox[{{69, 0}, {69, 145}, {71.0078125, 145}, {71.0078125, 138}}], 
     LineBox[{{68, 0}, {68, 151}, {70.00390625, 151}, {70.00390625, 145}}], 
     LineBox[{{43.18952941894531, 222}, {43.18952941894531, 252}, {
       69.001953125, 252}, {69.001953125, 151}}]}}, {InsetBox[
     RotationBox["\<\"Mother Plutarch\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {1, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Grantaire\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {2, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Prouvaire\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {3, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Mme. Hucheloup\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {4, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Bahorel\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {5, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Courfeyrac\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {6, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Combeferre\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {7, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Joly\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {8, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Bossuet\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {9, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Feuilly\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {10, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Enjolras\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {11, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Mabeuf\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {12, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Child2\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {13, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Child1\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {14, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Gavroche\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {15, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Mme. Burgon\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {16, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Jondrette\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {17, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Mme. Pontmercy\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {18, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Pontmercy\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {19, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Mlle Vaubois\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {20, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Mlle Gillenormand\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {21, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Magnon\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {22, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Marius\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {23, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Lt. Gillenormand\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {24, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Baroness T\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {25, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Gillenormand\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {26, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Woman2\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {27, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Toussaint\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {28, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Cosette\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {29, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Boulatruelle\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {30, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Anzelma\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {31, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Eponine\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {32, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Montparnasse\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {33, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Brujon\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {34, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Claquesous\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {35, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Babet\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {36, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Gueulemer\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {37, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Javert\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {38, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Thenardier\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {39, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Mme. Thenardier\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {40, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Fantine\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {41, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Zephine\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {42, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Dahlia\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {43, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Favourite\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {44, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Blacheville\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {45, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Fameuil\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {46, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Listolier\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {47, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Tholomyes\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {48, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Mother Innocent\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {49, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Gribier\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {50, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Fauchelevent\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {51, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Simplice\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {52, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Perpetue\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {53, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Marguerite\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {54, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Mme. De R\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {55, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Isabeau\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {56, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Gervais\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {57, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Scaufflaire\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {58, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Woman1\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {59, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Cochepaille\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {60, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Chenildieu\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {61, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Brevet\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {62, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Champmathieu\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {63, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Judge\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {64, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Valjean\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {65, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Bamatabois\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {66, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Labarre\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {67, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Napoleon\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {68, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Countess De Lo\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {69, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Geborand\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {70, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Champtercier\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {71, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Cravatte\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {72, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Count\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {73, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Old Man\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {74, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Mme. Magloire\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {75, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Mlle Baptistine\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {76, 0}], {0, 1}], 
    InsetBox[
     RotationBox["\<\"Myriel\"\>",
      BoxRotation->1.5707963267948966`], Offset[{0, -4}, {77, 0}], {0, 1}]}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  ImageSize->750,
  PlotRange->All]], "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes on other functions", "Section"],

Cell[CellGroupData[{

Cell["Random number generator", "Subsection"],

Cell["igraph\[CloseCurlyQuote]s random number generator can be seeded using", \
"Text"],

Cell[BoxData[
 RowBox[{"IGSeedRandom", "[", "123", "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGData[]", "Subsection"],

Cell["\<\
The IGData[] function provides access to various useful datasets. In \
particular, it can list small directed graphs ordered based on their \
IGIsoclass[], i.e. the same order motif counting functions use.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IGData", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"AllDirectedGraphs\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AllDirectedGraphs\"\>", ",", "4"}], "}"}], 
   ",", "\<\"MANTriadLabels\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell["Here\[CloseCurlyQuote]s all size 3 directed graphs.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "@", 
  RowBox[{"IGData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<AllDirectedGraphs\>\"", ",", "3"}], "}"}], "]"}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {1, {{0, 0, 0, 1}, {{2}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{3, 2}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {1, {{0, 0, 1, 2}, {{1}, {1}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[{3, 1}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {1, {{0, 0, 1, 2}, {{3}, {2}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAqkxY6Hq26z8AAAAAAADgvwAAAAAA
AAAAAAAAAAAA8D+qTFjoerbrvwAAAAAAAOC/8ApFxdVwor+00kdL9+fpP9DP
PPEqsqe/nYX4Vlhf6D9QAQt49x+uv4H7OII42+Y/8Fehczbbsr/yayWafVzl
P5ibcpOGOLe/CGc7Ogrk4z8InCqRViW8v65OLka9cuI/VGvt9V3PwL+RWe9l
cQnhP8xR+XK80MO/moRuCPlR3z+B2RTg+QngvxyH33e1Uby/2S9nkQrb4L8A
pVOND4TDvw5DLYxYvOG/2p6Wy3m1yL9wpVdqXq3ivyCsgVcGus2/QLled42t
478cvypRXkfRvyDswAROvOS/FC8NOGCY079WidHD/9jlv0SAlcSpztW/fvai
JPoC579xzfys6+jXv/37A4xtj+q/Z6WPlu7P07+vf0Q5WDvqvzYL8a2wvtC/
l5zXcHvU6b/87eMI4mzLv64h5BkUW+m/yK+VaPZxxb85+ekVas/ovzg429FR
IL+/K/kyFtAx6L9odXIx6pWzv9jx3Gqjgue/AJn1XhaXoL85+JnLS8LmvwBt
L/LewIU/VOaGEAJZ17/k8PuuNorjP6Y54q3gttW/QOlU4wPh5D88E1a4RPTT
v7en5XJeLeY/eE4B/DgS0r8Ja+CVgW7nP9gm8+HaEdC/jl+VKK+j6D8wgl2O
s+jLv4qXBhwwzOk/UA0bkux1x78iwEriVOfqP7hY1Q4DzsK/uWZ+1nX06z91
ZjFF
         "], {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {1, {{0, 0, 1, 2}, {{3}, {1}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{{2, 3}, {3, 1}}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 2, 3}, {{3}, {3}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAqkxY6Hq26z8AAAAAAADgvwAAAAAA
AAAAAAAAAAAA8D+qTFjoerbrvwAAAAAAAOC/8ApFxdVwor+00kdL9+fpP9DP
PPEqsqe/nYX4Vlhf6D9QAQt49x+uv4H7OII42+Y/8Fehczbbsr/yayWafVzl
P5ibcpOGOLe/CGc7Ogrk4z8InCqRViW8v65OLka9cuI/VGvt9V3PwL+RWe9l
cQnhP8xR+XK80MO/moRuCPlR3z+B2RTg+QngvxyH33e1Uby/2S9nkQrb4L8A
pVOND4TDvw5DLYxYvOG/2p6Wy3m1yL9wpVdqXq3ivyCsgVcGus2/QLled42t
478cvypRXkfRvyDswAROvOS/FC8NOGCY079WidHD/9jlv0SAlcSpztW/fvai
JPoC579xzfys6+jXv/37A4xtj+q/Z6WPlu7P07+vf0Q5WDvqvzYL8a2wvtC/
l5zXcHvU6b/87eMI4mzLv64h5BkUW+m/yK+VaPZxxb85+ekVas/ovzg429FR
IL+/K/kyFtAx6L9odXIx6pWzv9jx3Gqjgue/AJn1XhaXoL85+JnLS8LmvwBt
L/LewIU/VOaGEAJZ17/k8PuuNorjP6Y54q3gttW/QOlU4wPh5D88E1a4RPTT
v7en5XJeLeY/eE4B/DgS0r8Ja+CVgW7nP9gm8+HaEdC/jl+VKK+j6D8wgl2O
s+jLv4qXBhwwzOk/UA0bkux1x78iwEriVOfqP7hY1Q4DzsK/uWZ+1nX06z91
ZjFF
         "], {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{1, 3}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {1, {{0, 0, 0, 2}, {{1}, {2}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{{3, 1}, {3, 2}}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 0, 1, 3}, {{1}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[{3, 1}, 0.020399597244776385`], 
           ArrowBox[{3, 2}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 3, 4}, {{3}, {1}, {3}, {1}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQvcon4kXVttf2DGDwYD8DCvhgD5XfD5M/tdTvxJvb
T+2Zpph11/E82h+2Z6/I3dgn9s1WQd1/2h/tZ7dx6PW79ciefc7Zmd8/PNpv
1/dqhVrQQ/uZn/P7DN0f7/+2+JL+7J779n+Zl0aXdz3eL3KfvyQ6/449a+R2
nYW7Hu9nWXVdPc3vpv3q/tTaSdcf75fkWts2Vfua/eR1R7SsHj7erwzh74fx
+SHq98PUy0HM2w8zj2EJ2L79MPucIe7ZPx3qHh6Ie/ezQd0bDfHP/kaofy5A
/LufAepfqP/3/7s+6SXT89sw/+//0xX9ku3DLZj/9385nnJGQO4WzP/7L0go
PJ5TeBPm//0cP7Z6CL6+AfP//h++E5ft7boB8//+NQ9MWG8H3ID5f/+dRWWr
um1vwPxvD+ND/W8PUw/1vz3MPKj/7WH2Qf1vfwXqHqj/7b9B3Qv1vz1DN8Q/
F2DxfQPiXwCosC5s
         "], {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {7.298989890901527*^-16, -0.7848197289557521}, 3}], 
            0.020399597244776385`], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[{2, 3}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-7.728342237425145*^-16, -0.21518027104424642`}, 1}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 0, 1, 3}, {{3}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAqkxY6Hq26z8AAAAAAADgvwAAAAAA
AAAAAAAAAAAA8D+qTFjoerbrvwAAAAAAAOC/8ApFxdVwor+00kdL9+fpP9DP
PPEqsqe/nYX4Vlhf6D9QAQt49x+uv4H7OII42+Y/8Fehczbbsr/yayWafVzl
P5ibcpOGOLe/CGc7Ogrk4z8InCqRViW8v65OLka9cuI/VGvt9V3PwL+RWe9l
cQnhP8xR+XK80MO/moRuCPlR3z+B2RTg+QngvxyH33e1Uby/2S9nkQrb4L8A
pVOND4TDvw5DLYxYvOG/2p6Wy3m1yL9wpVdqXq3ivyCsgVcGus2/QLled42t
478cvypRXkfRvyDswAROvOS/FC8NOGCY079WidHD/9jlv0SAlcSpztW/fvai
JPoC579xzfys6+jXv/37A4xtj+q/Z6WPlu7P07+vf0Q5WDvqvzYL8a2wvtC/
l5zXcHvU6b/87eMI4mzLv64h5BkUW+m/yK+VaPZxxb85+ekVas/ovzg429FR
IL+/K/kyFtAx6L9odXIx6pWzv9jx3Gqjgue/AJn1XhaXoL85+JnLS8LmvwBt
L/LewIU/VOaGEAJZ17/k8PuuNorjP6Y54q3gttW/QOlU4wPh5D88E1a4RPTT
v7en5XJeLeY/eE4B/DgS0r8Ja+CVgW7nP9gm8+HaEdC/jl+VKK+j6D8wgl2O
s+jLv4qXBhwwzOk/UA0bkux1x78iwEriVOfqP7hY1Q4DzsK/uWZ+1nX06z91
ZjFF
         "], {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[{3, 1}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 2, 4}, {{3}, {3}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJxVkn9M1HUYx78eigf+QOtyuZihpTnMkNbYgdSHDQqXduOIHccuztZCHKTA
FWE1qSPFdfwa2IkotYROi7jDaYi6ozcTnSxADhDvuKO4u+/B/QDrUAQuzsr8
fj9/9GzPPnv2PHue93uvz8b3CtJzBAzDJD/K/96WPXLPp5emCPM47GD+F37C
90H7v+okPdO2CSL4Oq6idKUTMmOn6LdsF/kyIb0ieMyJ5YlJVRKrkyxv7G+Y
9zvxWrXvhy3pDtJwv6A6NpXFXPNQzOnKcfIwRKco0bAQjUd8pCgYI8uyOl48
c5XF0hbzC/sko+SnmpzDdWYW68P15dptd8hxw/XoBAeL57gatI7g5kHnN3D7
QPcx3z++B3ovmdODel7PSk4vQnm9Cs4P1LwfE+cXDO/XH/76jZHCJvw8lLp7
3u0lpoHEmegL5/DN0QWZfK+HpC1ZcWj+WQPUi+IysW2S+DPPfBhnu4B7+ZtP
HX5ngpw8rTpeLu6AMHdnQriLJcLG6FrZZiMMkpfe6FQ5SUb+3QfZA12ozfoz
pyjMQfqkAZXR1I1TRw4KA9Jxoh4V2QNhdkQeGy9plxoxGpNbG257xE33dlXE
kW6sTt5eKTc6YP32RO8n7T0o1GXmKfVORLWqM0Ov9iPpirKkSs8iEtFSZeog
oqa7lkqMLohiVonfPTkM2VeD3f9YJpDyhfb6j7dGUDrX9PxfAjeK+oOtUx4z
5Y+/zXVegdtG+SOoUXhD/VbKH7M33+9bs8FK+cP0dBTbWDRK+UO40L5r7ZSF
8sfCW7VnOzUWyh+t9leW2dIslD/Gmj5uqXjVQvkTWvP8CZ3n+RO6j+dP6D2e
P7nN6+H5kzleL8+fMBWcHxP97xbO78PFkMoDNT7k6mpO/DEwjLbPU+LlO32I
WzGjP/+LCfWN5sLPbnsRvMsKnR/0wrDRtV6k8KKnTbt/rugG4gPep/IGPBCL
bYPSKGBb4OV1plgP9herYn3ai7DMjOU1l7nBNDxQrqv/DvELDb27r02CORBz
7/euoyRjsnyNIMsMl3/REKdhydl4p95+aQRJ3gw2xOEiiU/KLqfMDqPj3IRK
uX2SHJIsCYqfGEJYvl2rPugmli33Hda1JlTv1W5ta/aQHWXZ1Rc9vdDUh0bu
6POStFXP1E0X38SmrjedGW4fuSwfWR1y6xqu7Cu9Uzw7Rf4FkvFP8w==
         "], {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {7.298989890901527*^-16, -0.7848197289557521}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-7.728342237425145*^-16, -0.21518027104424642`}, 1}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 2, 3}, {{3}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0.8660254037844386, -0.5}, {0., 
         1.}, {-0.8660254037844386, -0.5}}, {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{{1, 3}, {2, 1}, {3, 2}}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 2, 4}, {{3}, {1}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQvcon4kXVttf2DGDwYD8DCvhgD5XfD5M/tdTvxJvb
T+2Zpph11/E82h+2Z6/I3dgn9s1WQd1/2h/tZ7dx6PW79ciefc7Zmd8/PNpv
1/dqhVrQQ/uZn/P7DN0f7/+2+JL+7J779n+Zl0aXdz3eL3KfvyQ6/449a+R2
nYW7Hu9nWXVdPc3vpv3q/tTaSdcf75fkWts2Vfua/eR1R7SsHj7erwzh74fx
+SHq98PUy0HM2w8zj2EJ2L79MPucIe7ZPx3qHh6Ie/ezQd0bDfHP/kaofy5A
/LufAepfqP/3/7s+6SXT89sw/+//0xX9ku3DLZj/9385nnJGQO4WzP/7L0go
PJ5TeBPm//0cP7Z6CL6+AfP//h++E5ft7boB8//+NQ9MWG8H3ID5f/+dRWWr
um1vwPxvD+ND/W8PUw/1vz3MPKj/7WH2Qf1vfwXqHqj/7b9B3Qv1vz1DN8Q/
F2DxfQPiXwCosC5s
         "], {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {7.298989890901527*^-16, -0.7848197289557521}, 3}], 
            0.020399597244776385`], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-7.728342237425145*^-16, -0.21518027104424642`}, 1}], 
            0.020399597244776385`], 
           ArrowBox[{3, 2}, 0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 0, 2, 4}, {{1}, {3}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAqkxY6Hq26z8AAAAAAADgvwAAAAAA
AAAAAAAAAAAA8D+qTFjoerbrvwAAAAAAAOC/8ApFxdVwor+00kdL9+fpP9DP
PPEqsqe/nYX4Vlhf6D9QAQt49x+uv4H7OII42+Y/8Fehczbbsr/yayWafVzl
P5ibcpOGOLe/CGc7Ogrk4z8InCqRViW8v65OLka9cuI/VGvt9V3PwL+RWe9l
cQnhP8xR+XK80MO/moRuCPlR3z+B2RTg+QngvxyH33e1Uby/2S9nkQrb4L8A
pVOND4TDvw5DLYxYvOG/2p6Wy3m1yL9wpVdqXq3ivyCsgVcGus2/QLled42t
478cvypRXkfRvyDswAROvOS/FC8NOGCY079WidHD/9jlv0SAlcSpztW/fvai
JPoC579xzfys6+jXv/37A4xtj+q/Z6WPlu7P07+vf0Q5WDvqvzYL8a2wvtC/
l5zXcHvU6b/87eMI4mzLv64h5BkUW+m/yK+VaPZxxb85+ekVas/ovzg429FR
IL+/K/kyFtAx6L9odXIx6pWzv9jx3Gqjgue/AJn1XhaXoL85+JnLS8LmvwBt
L/LewIU/VOaGEAJZ17/k8PuuNorjP6Y54q3gttW/QOlU4wPh5D88E1a4RPTT
v7en5XJeLeY/eE4B/DgS0r8Ja+CVgW7nP9gm8+HaEdC/jl+VKK+j6D8wgl2O
s+jLv4qXBhwwzOk/UA0bkux1x78iwEriVOfqP7hY1Q4DzsK/uWZ+1nX06z91
ZjFF
         "], {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[{3, 1}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 1, 3, 5}, {{3}, {1}, {3}, {1}, {2}}}, Pattern}], Null}, {
          GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJxVkn9M1HUYx78eigf+QOtyuZihpTnMkNbYgdSHDQqXduOIHccuztZCHKTA
FWE1qSPFdfwa2IkotYROi7jDaYi6ozcTnSxADhDvuKO4u+/B/QDrUAQuzsr8
fj9/9GzPPnv2PHue93uvz8b3CtJzBAzDJD/K/96WPXLPp5emCPM47GD+F37C
90H7v+okPdO2CSL4Oq6idKUTMmOn6LdsF/kyIb0ieMyJ5YlJVRKrkyxv7G+Y
9zvxWrXvhy3pDtJwv6A6NpXFXPNQzOnKcfIwRKco0bAQjUd8pCgYI8uyOl48
c5XF0hbzC/sko+SnmpzDdWYW68P15dptd8hxw/XoBAeL57gatI7g5kHnN3D7
QPcx3z++B3ovmdODel7PSk4vQnm9Cs4P1LwfE+cXDO/XH/76jZHCJvw8lLp7
3u0lpoHEmegL5/DN0QWZfK+HpC1ZcWj+WQPUi+IysW2S+DPPfBhnu4B7+ZtP
HX5ngpw8rTpeLu6AMHdnQriLJcLG6FrZZiMMkpfe6FQ5SUb+3QfZA12ozfoz
pyjMQfqkAZXR1I1TRw4KA9Jxoh4V2QNhdkQeGy9plxoxGpNbG257xE33dlXE
kW6sTt5eKTc6YP32RO8n7T0o1GXmKfVORLWqM0Ov9iPpirKkSs8iEtFSZeog
oqa7lkqMLohiVonfPTkM2VeD3f9YJpDyhfb6j7dGUDrX9PxfAjeK+oOtUx4z
5Y+/zXVegdtG+SOoUXhD/VbKH7M33+9bs8FK+cP0dBTbWDRK+UO40L5r7ZSF
8sfCW7VnOzUWyh+t9leW2dIslD/Gmj5uqXjVQvkTWvP8CZ3n+RO6j+dP6D2e
P7nN6+H5kzleL8+fMBWcHxP97xbO78PFkMoDNT7k6mpO/DEwjLbPU+LlO32I
WzGjP/+LCfWN5sLPbnsRvMsKnR/0wrDRtV6k8KKnTbt/rugG4gPep/IGPBCL
bYPSKGBb4OV1plgP9herYn3ai7DMjOU1l7nBNDxQrqv/DvELDb27r02CORBz
7/euoyRjsnyNIMsMl3/REKdhydl4p95+aQRJ3gw2xOEiiU/KLqfMDqPj3IRK
uX2SHJIsCYqfGEJYvl2rPugmli33Hda1JlTv1W5ta/aQHWXZ1Rc9vdDUh0bu
6POStFXP1E0X38SmrjedGW4fuSwfWR1y6xqu7Cu9Uzw7Rf4FkvFP8w==
         "], {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {7.298989890901527*^-16, -0.7848197289557521}, 3}], 
            0.020399597244776385`], 
           ArrowBox[{2, 1}, 0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-7.728342237425145*^-16, -0.21518027104424642`}, 1}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}],GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
           Null}, {GraphLayout -> {"Dimension" -> 2}, 
           VertexCoordinates -> {{Rational[1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}, {0, 1}, {Rational[-1, 2] 3^Rational[1, 2], 
              Rational[-1, 2]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1:eJxV03tMU1ccwPErIALyckMzN6I4p1twDFkWUh7uRyYby3QNMAIlDDTbEAMq
j43BHqIwhYznwFVE2DJBdGM8FhwPTdmPCEYyQAqILS2TtrfQFtAVRWgHugfn
d//YTZrm5J7c8zvJ57vtg9TIRBuO4z789/fff8N+ifHz9lngVh8Ncv97zEDv
UXifvVj7wl82BkgeXGmcNSow8uvhnr+VU7DnpLT3p1tj+Oxct51YpgcXXxfR
wXOjGHQ1IaukiYeN6B2REDaMR+pjkhOadODemBtjf20Qnfb6FEtkWuj7/mz/
Z219OOabVO6k1sDcxfdK3E714IlxD43VUQOW/MmstggZ9kZYM2TyHqg9dczB
GjEJoSn3HsUPdYM09s/EdEctWKq9y6N3yKBV/MpbXRk6OFmdcSZf1AHOSUGB
TnoejDEXPvZXt4I1Zcf54+9PQfia9dlLW5shf1mUJ1JPg3woeN679TLUnrZE
Sw4YQeP05o2xtFroHAnbt2Qwwe/14r459RTYfOtflOOsw2hZl8cf8Xr4KjCy
aKVAh+uCQ0rEKh2sqxmsWjLr8PXSmR93Rmqh6mFqqV8Yj4t1I77VxZPw2LY+
LquQR49Jt0/iUidgbWzHyxeu8WjXoHjxkHgcfi5LPF6h4HGzU1O+dNcdONPc
6x2o5XE7W6OwdmP7Udi/hX0Phe9xF1fPQ+G8vWwerKR5nNm8aE/zxrH7YC7d
R87uixzdt08y5mp76zq0H8q5k7kwCwddnquYy7wJW7vf0UUZZiAkL770irEf
CirtPXcPmODuzoda1QY5FB2QvtRSZ4QvxWtWRE+NgF2KRpp7zAAhT0d3hi6M
QuvlqYwEn2loCNA1adrHINgUxdtq9SCZzne3iVWAxrzc7F/IQ5Clqn/f9WnQ
pPg+uNt9GlTzE8l1eQYIr3qUsKnyB/SxvrpJ7meEbzIz/GakVzDYatqYPGQE
iUg9HOGF2LJNv9kjzgQTLdLDi+k3sLJGkfbFbRO43ucddEf6seVEaIAkaAbe
WD/f9MtvcnyybFt8tGwG0uvLzt4fGkUz84C/kgfygt+RF/KEueTJzLzhA/J2
jnlEB/LoULPqFZvJaxTzjOXkeYB5x/PkPZf1gJ4FrIdx1gty9awXV9YTqqin
NNYbelFvIaxH9KQevViv6EG9RrOeMZR6zmG9Yzr1Tv7xiaLCZGNQC/5xpTDO
ZG9WCf5x4eZHA+5bVIJ/lD/jxdekjwv+0cHS9vaGWaXgHy3vll/qKlQK/rFR
89padbhS8I8TtZ82FO1RCv5BWJN/EPaTfxC+R/5BOI/8w22ah/zDIs1L/oEr
YveRC70r2X0fMw+YRB7IC/qTF/KEK/eYp2bmDfvIWwDziCLyuIt5xcPkVck8
I0eeA5h35I4y71GsB9RTD5dYLxhCvQSznrCDespmvaEj9aZkPWIp9bib9YqF
1Gs46xmfp547We94lXr/B+7KZJU=
         "], {{
           Arrowheads[Medium], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {0.18635158111754768`, 0.10759013552212691`}, 2}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             1, {7.298989890901527*^-16, -0.7848197289557521}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            BezierCurveBox[{2, {0.679673822666892, 0.3924098644779406}, 1}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             2, {-0.18635158111754604`, 0.10759013552211057`}, 3}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-7.728342237425145*^-16, -0.21518027104424642`}, 1}], 
            0.020399597244776385`], 
           ArrowBox[
            
            BezierCurveBox[{
             3, {-0.6796738226668945, 0.39240986447788667`}, 2}], 
            0.020399597244776385`]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}]},
  "RowDefault"]], "Output"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<MANTriadLabels\>\"", TraditionalForm]]],
 " refers to the mutual, asymmetric, null labelling of triads used by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGTriadCensus", "[", "]"}], TraditionalForm]]],
 ". Each label is mapped to the corresponding graph, ordered based on their \
",
 Cell[BoxData[
  FormBox["IGIsoclass", TraditionalForm]]],
 ". This is useful for converting the output of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGTriadCensus", "[", "]"}], TraditionalForm]]],
 " to a format compatible with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"IGMotifs", "[", "]"}], TraditionalForm]]],
 "."
}], "Text"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{964, 659},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Section"], ShowGroupOpener -> True], 
   Cell[
    StyleData["Subsection"], ShowGroupOpener -> True], 
   Cell[
    StyleData["Subsubsection"], ShowGroupOpener -> True]}, 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]

